#Petersen's graph
10 15
1 2
1 5
1 6
2 3
2 7
3 4
3 8
4 5
4 9
5 10
6 8
6 9
7 9
7 10
8 10

13 22
1 2
1 3
1 4
1 5
2 3
2 7
2 11
3 4
3 8
3 12
4 5
4 9
4 13
5 6
5 10
6 10
6 11
7 11
7 12
8 12
8 13
9 10
9 13

import numpy as np
import matplotlib.pylab as plt

A = np.array([[1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
   [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
   [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
   [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0],
   [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1],
   [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
   [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0],
   [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0],
   [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
   [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1],
   [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]])
   
dets = []
for i in range(A.shape[0]):
	for j in range(A.shape[1]):
		k = 2
		while i + k < A.shape[0] and j + k < A.shape[1]:
			dets.append(np.linalg.det(A[i:i+k,j:j+k]))
			k += 2

plt.hist(dets, bins=range(-5,5))
plt.show()