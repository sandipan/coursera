{"courseType":"v2.ondemand","description":"This course extends object-oriented analysis and design by incorporating design patterns to create interactive applications. Through a survey of established design patterns, you will gain a foundation for more complex software applications. Finally, you will identify problematic software designs by referencing a catalog of code smells.\n\nYou will be challenged in the Capstone Project to redesign an existing Java-based Android application to implement a combination of design patterns. You will also critique a given Java codebase for code smells.\n\nAfter completing this course, you will be able to: \n• Demonstrate how to use design patterns to address user interface design issues.\t\n• Identify the most suitable design pattern to address a given application design problem.\t\n• Apply design principles (e.g., open-closed, dependency inversion, least knowledge).\t\n• Critique code by identifying and refactoring anti-patterns.\n• Apply the model-view-controller architectural pattern.","id":"CVJg1EYkEeejjw678ALX-g","slug":"design-patterns","instructorIds":["14283726"],"specializations":[],"partnerIds":["146"],"name":"Design Patterns"}