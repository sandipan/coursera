%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: fsnlp.dvi
%%Pages: 24
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Helvetica Palatino-Italic Helvetica-Bold
%%+ Palatino-BoldItalic Palatino-Roman Palatino-Bold
%%EndComments
%DVIPSCommandLine: dvips -pp 293-316 fsnlp
%DVIPSParameters: dpi=600, compressed, comments removed
%DVIPSSource:  TeX output 1999.01.07:1114
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: pstricks.pro
% PostScript prologue for pstricks.tex.
% Created 1994/6/23. Source file was pstricks.doc
% Version 0.93a, 93/03/12.
% For use with Rokicki's dvips.
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
def
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
%  Modification Denis GIROU (CNRS/IDRIS - France) <Denis.Girou@idris.fr> - 15 Jan. 1997
% /Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
% pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
% div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
% d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt { 1 setlinecap [ 0 dx n div ]
dy n div 2 div setdash } { 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
%%EndProcSet
%%BeginProcSet: pst-dots.pro
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%%EndProcSet
%%BeginProcSet: pst-node.pro
% PostScript prologue for pst-node.tex.
% Created 1994/6/7. Source file was pst-node.doc
% Version 0.93a/b-97 patch 1, 97/05/09.
% For use with Rokicki's dvips.
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - 9 May 1997
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
%%EndProcSet
%%BeginProcSet: tree-dvips91.pro
TeXDict begin /@beginspec{gsave Resolution 72 div VResolution -72 div scale
treedict begin}def /@endspec{end grestore}def /treedict 200 dict def treedict
begin /pt{72 mul 72.07 div}def /nodemargin 2 def /nodes 100 dict def /node{
/dpth exch def /hght exch def /wdth exch def 4 dict dup begin /x /y
currentpoint dpth sub nodemargin sub exch 3 1 roll def nodemargin sub def /h
hght dpth add nodemargin dup add add def /w wdth nodemargin dup add add def
end nodes 3 1 roll put}def /nodebottom{begin x w 2 div add y end}def /nodetop{
begin x w 2 div add y h add end}def /nodeleft{begin x y h 2 div add end}def
/noderight{begin x w add y h 2 div add end}def /nodetopleft{begin x y h add
end}def /nodetopright{begin x w add y h add end}def /nodebottomleft{begin x y
end}def /nodebottomright{begin x w add y end}def /farright{begin x w add depth
add h 2 div y add end}def /farleft{begin x depth sub h 2 div y add end}def
/farbottom{begin x w 2 div add y depth sub end}def /fartop{begin x w 2 div add
y h add depth add end}def /farbottomleft{begin x depth 45 cos mul sub y depth
45 sin mul sub end}def /farbottomright{begin x w add depth 45 cos mul add y
depth 45 sin mul sub end}def /fartopright{begin x w add depth 45 cos mul add y
h add depth 45 sin mul add end}def /fartopleft{begin x depth 45 cos mul sub y
h add depth 45 sin mul add end}def /alignpoint{2 copy sub abs 1 le{add 2 div
round dup}if}def /getnode{nodes exch get}def /nodeconnect{gsave transform 4 2
roll transform exch 4 1 roll alignpoint 4 2 roll alignpoint 4 1 roll exch
itransform moveto itransform lineto stroke grestore}def /arrowdict 15 dict def
arrowdict begin /mtrx matrix def end /arrow{arrowdict begin /insetlength exch
def /headlength exch def /halfheadthickness exch 2 div def /tipy exch def
/tipx exch def /taily exch def /tailx exch def /dx tipx tailx sub def /dy tipy
taily sub def /angle dy dx atan def /savematrix mtrx currentmatrix def tipx
tipy translate angle rotate 0 0 moveto headlength neg halfheadthickness neg
lineto headlength insetlength sub neg 0 lineto headlength neg
halfheadthickness lineto closepath fill savematrix setmatrix end}def
/arrowfill{gsave newpath arrowwidth arrowlength arrowinset arrow grestore}def
/arrowline{arrowdict begin gsave newpath /tipfix exch def /tailfix exch def
/tipy exch def /tipx exch def /taily exch def /tailx exch def /dx tipx tailx
sub def /dy tipy taily sub def /angle dy dx atan def /savematrix mtrx
currentmatrix def tipx tipy translate angle rotate tipfix neg 0 moveto
savematrix setmatrix /savematrix mtrx currentmatrix def tailx taily translate
angle rotate tailfix 0 lineto savematrix setmatrix stroke grestore end}def
/arrownodeconnect{gsave transform 4 2 roll transform exch 4 1 roll alignpoint
4 2 roll alignpoint 4 1 roll exch itransform 4 2 roll itransform 4 copy 0
arrowdict begin arrowlength arrowinset sub end arrowline gsave newpath
arrowfill grestore grestore}def /doublearrownodeconnect{gsave transform 4 2
roll transform exch 4 1 roll alignpoint 4 2 roll alignpoint 4 1 roll exch
itransform 4 2 roll itransform 4 copy arrowdict begin arrowlength arrowinset
sub end dup arrowline 4 copy gsave newpath arrowfill grestore gsave newpath 4
2 roll arrowfill grestore grestore}def /barnodeconnect{4 2 roll 2 copy moveto
5 -1 roll add dup 3 1 roll lineto 2 index exch lineto lineto stroke}def
/arrowbarnodeconnect{4 2 roll 2 copy moveto 5 -1 roll add dup 3 1 roll lineto
2 index exch 4 copy lineto lineto gsave newpath 4 2 roll arrowfill fill
grestore stroke}def /nodetriangle{gsave exch nodes exch get nodebottom moveto
dup nodes exch get nodetopleft lineto nodes exch get nodetopright lineto
closepath stroke grestore}def /slope{/y1 exch def /x1 exch def /y0 exch def
/x0 exch def y1 y0 sub x1 x0 sub div}def /midpoint{/y1 exch def /x1 exch def
/y0 exch def /x0 exch def x1 x0 sub abs x1 x0 ge{x0 add}{x1 add}ifelse y1 y0
sub abs y1 y0 ge{y0 add}{y1 add}ifelse}def /tancurveto{1 index exch curveto}
def /nodetancurve{/depth exch def /to exch def /from exch def gsave nodes from
get noderight moveto nodes to get noderight tancurveto stroke grestore}def
/getloc{3 -1 roll nodes exch get dup begin depth end 3 1 roll exch cvx exec 4
2 roll}def /rightcur{0 /noderight getloc}def /leftcur{180 /nodeleft getloc}
def /topcur{90 /nodetop getloc}def /bottomcur{270 /nodebottom getloc}def
/topleftcur{135 /nodetopleft getloc}def /toprightcur{45 /nodetopright getloc}
def /bottomleftcur{225 /nodebottomleft getloc}def /bottomrightcur{315
/nodebottomright getloc}def /arrowfiddledict 10 dict def /arrowfiddle{
arrowfiddledict begin /twist exch def /shift exch def /shaft exch def /angle
exch twist add def /tipy exch def /tipx exch def tipx angle cos shaft mul add
tipy angle sin shaft mul add tipx angle cos shift mul add tipy angle sin shift
mul add end}def /nodecurve{gsave 0 fromangle arrowfiddle moveto 6 2 roll 0
toangle arrowfiddle curveto stroke grestore}def /arrownodecurve{gsave 0
fromangle arrowfiddle moveto 6 2 roll 4 copy 10 4 roll arrowlength arrowinset
sub toangle arrowfiddle curveto 0 toangle arrowfiddle arrowfill stroke
grestore}def /arrow2nodecurve{gsave 4 copy 0 fromangle arrowfiddle arrowfill
arrowlength arrowinset sub fromangle arrowfiddle moveto 6 2 roll 4 copy 10 4
roll arrowlength arrowinset sub toangle arrowfiddle curveto 0 toangle
arrowfiddle arrowfill stroke grestore}def /delink{gsave 4 copy newslope 6 2
roll newmidpoint delinkline}def /delinkline{moveto dup 0 eq{blong 2 div neg 0
rmoveto blong 0 rlineto 2 pop}{exch dup 0 eq{0 blong 2 div neg rmoveto 0 blong
rlineto 2 pop}{div neg dup dup mul 1 add sqrt blong exch div 2 copy mul 2 copy
2 div neg exch 2 div neg exch rmoveto rlineto 1 pop}ifelse}ifelse stroke
grestore}def /delinkcurve{8 copy 8 copy bezslope 10 2 roll bezmidpoint
delinkline}def /xyarrange{exch 3 1 roll 5 -1 roll 7 -1 roll exch 4 2 roll}def
/calcx{exch 3 mul 3 -1 roll 3 mul add add add 8 mul}def /calcy{add exch sub
exch sub}def /bezmidpoint{xyarrange calcx 5 1 roll calcx exch}def /bezslope{
xyarrange calcy 5 1 roll calcy exch}def /newmidpoint{exch 4 -1 roll add 2 div
3 1 roll add 2 div}def /newslope{4 -1 roll exch 4 1 roll sub 3 1 roll sub exch
}def /nodebox{nodes exch get begin gsave newpath x y moveto h w dobox cleanup
stroke grestore end}def /nodecircle{nodes exch get begin gsave newpath w 2 div
x add h 2 div y add w w mul h h mul add sqrt 2 div 4 -1 roll add 360 0 arcn
cleanup stroke grestore end}def /nodecircletrans{nodes exch get begin gsave
newpath w 2 div x add h 2 div y add w w mul h h mul add sqrt 2 div 4 -1 roll
add 360 0 arcn stroke grestore end}def /nodeoval{nodes exch get begin gsave
newpath x 2 sub y 2 sub moveto h 4 add w 4 add dooval cleanup stroke grestore
end}def /testnodeoval{nodes exch get begin gsave newpath h h mul w w mul add
sqrt div dup dup dup w mul neg x add exch h mul neg y add moveto dup h mul 2
mul h add exch w mul 2 mul w add testdooval stroke grestore end}def /cleanup{
gsave x y moveto h nodemargin sub .5 add w nodemargin sub .5 add doccbox 1
setgray fill grestore}def /boxdict 4 dict def boxdict /mtrx matrix put /dobox{
boxdict begin /w exch def /h exch def /savematrix mtrx currentmatrix def 0 h
rlineto w 0 rlineto 0 h neg rlineto closepath savematrix setmatrix end}def
/doccbox{boxdict begin /w exch def /h exch def /savematrix mtrx currentmatrix
def w 0 rlineto 0 h rlineto w neg 0 rlineto closepath savematrix setmatrix end
}def /ovaldict 6 dict def ovaldict /mtrx matrix put /dooval{ovaldict begin /w
exch def /h exch def /savematrix mtrx currentmatrix def 0 h 2 div rmoveto 0 h
2 div nodemargin sub nodemargin h 2 div w 2 div h 2 div rcurveto w 2 div
nodemargin sub 0 w 2 div nodemargin neg w 2 div h 2 div neg rcurveto 0 h 2 div
neg nodemargin add nodemargin neg h 2 div neg w 2 div neg h 2 div neg rcurveto
w 2 div neg nodemargin add 0 w 2 div neg nodemargin w 2 div neg h 2 div
rcurveto savematrix setmatrix end}def /testdooval{ovaldict begin /w exch def
/h exch def /r exch def h 2 div neg r mul dup h 2 div dup r mul 3 1 roll 2 r
sub mul 0 h rcurveto w 2 div dup r mul exch 2 r sub mul w 2 div r mul dup 3 1
roll w 0 rcurveto h 2 div r mul dup h 2 div neg dup r mul 3 1 roll 2 r sub mul
0 h neg rcurveto w 2 div neg dup r mul exch 2 r sub mul w 2 div neg r mul dup
3 1 roll w neg 0 rcurveto end}def end end
%%EndProcSet
%%BeginFont: Helvetica
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "22 June 1996",
%   filename = "8r.enc",
%   email = "kb@@mail.tug.org",
%   address = "135 Center Hill Rd. // Plymouth, MA 02360",
%   codetable = "ISO/ASCII",
%   checksum = "119     662    4424",
%   docstring = "Encoding for TrueType or Type 1 fonts to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def
%%EndFont
%%BeginProcSet: texps.pro
TeXDict begin /rf{findfont dup length 1 add dict begin{1 index /FID ne 2
index /UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type /integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics /Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont /setfont load]cvx def}def
/ObliqueSlant{dup sin S cos div neg}B /SlantFont{4 index mul add}def
/ExtendFont{3 -1 roll mul exch}def /ReEncodeFont{/Encoding exch def}def
end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (fsnlp.dvi)
@start /Fa 3 106 df<133FEA1FFFA3C67E137EA313FE5BA312015BA312035BA31207EB
E0F8EBE7FE9038EF0F80390FFC07C013F89038F003E013E0D81FC013F0A21380A2123F13
00A214075A127EA2140F12FE4814E0A2141F15C05AEC3F80A215005C147E5C387801F800
7C5B383C03E0383E07C0381E1F80D80FFEC7FCEA01F01C3B77B926>98
D<EC07C0EC3FF09138FC38E0903901F01FF0EB03E0903807C00FEB0F80011F1307D93F00
13E05B017E130F13FE4914C01201151F1203491480A2153F1207491400A25DA249137EA2
15FEA25D00031301140314076C6C485A0000131FEB787BEB3FF390380FC3F0EB00031407
A25DA2140F5D121C007E131F5D00FE49C7FC147E5C387801F8387C07E0381FFF80D803FE
C8FC24367CA426>103 D<EB01C0EB07E014F0130F14E01307EB038090C7FCAB13F0EA03
FCEA071EEA0E1F121CA212385B1270A25BEAF07E12E013FEC65AA212015B1203A25B1207
5BA2000F13E013C013C1001F13C01381A2EB83801303EB0700A2130E6C5AEA07F8EA01E0
143879B619>105 D E /Fb 144[45 2[24 4[46 2[51 2[42 1[42
95[{ .167 SlantFont TeXBase1Encoding ReEncodeFont }6
83.333336 /Palatino-Roman rf /Fc 3 117 df<1338137CA2137813701300A8EA0780
EA1FC0EA31E0126012E112C1A2EA03C0A3EA0780A2EA0F0013041306EA1E0CA213181330
EA0FE0EA07C00F227DA116>105 D<1418143C147CA214381400A8EB0F80EB1FE0EB70F0
136013C0EA0180A2380001E0A4EB03C0A4EB0780A4EB0F00A4131EA21238EA783CEAF878
5BEA7FE0EA3F80162C81A119>I<137013F0A4485AA4485AB51280A23803C000485AA448
C7FCA4121EA25B1480383C030013065BEA1E38EA0FF0EA07C0111F7D9E18>116
D E /Fd 2 49 df<B612FEA31F037A8B2D>0 D<EA0380EA07C0A3EA0F80A313005A121E
A2123E123CA212381278A21270A25AA20A157D9612>48 D E /Fe
7 62 df<B912F8A3D801FEC73803FC0000005EB3B3A7486C4A7EB5D8FE03B512F8A33533
7EB23A>5 D<14C01301EB0380EB0F00130E5B133C5B5BA2485A485AA212075B120F90C7
FC5AA2121E123EA3123C127CA55AB0127CA5123C123EA3121E121FA27E7F12077F1203A2
6C7E6C7EA213787F131C7F130FEB0380EB01C01300124A79B71E>40
D<12C07E1270123C121C7E120F6C7E6C7EA26C7E6C7EA27F1378137C133C133EA2131E13
1FA37F1480A5EB07C0B0EB0F80A514005BA3131E133EA2133C137C137813F85BA2485A48
5AA2485A48C7FC120E5A123C12705A5A124A7CB71E>I<156015F0B3A4007FB812C0B912
E0A26C17C0C800F0C8FCB3A4156033327CAB3C>43 D<13075B5B137FEA07FFB5FC13BFEA
F83F1200B3B3497E007FB51280A319317AB026>49 D<123C127E12FFA4127E123C1200B0
123C127E12FFA4127E123C08207A9F15>58 D<007FB812C0B912E0A26C17C0CCFCAC007F
B812C0B912E0A26C17C033147C9C3C>61 D E /Ff 10 117 df<147F903803FFE090380F
C0F890383F007C017C017E1360497F484815E0484890381F80C0120748481481EEC18048
48130F003F15C390C7140016C74815C6007E15CE16DC16D816F8485D5E5E127CA3151F6C
143F037713C06C903801E7E03A0F800783E13B07C07E03E3803B01FFF801FF003A007F80
007C2B227EA031>11 D<123C127EB4FCA21380A2127F123D1201A412031300A25A120612
0E120C121C5A5A126009177A8715>59 D<010FB612F017FEEFFF80903B003FC0003FE0EF
0FF017074B14F81703027F15FCA292C7FCA25C18F84A140718F00101150F18E04AEC1FC0
EF3F800103ED7F00EE01FE4AEB07F891B612E04915809139F8001FF04AEB03FCEE00FE01
0F157FA24AEC3F80A2011F16C0A25CA2133F18804A147FA2017FEDFF005F91C712014C5A
494A5A4C5A49EC3FE00001913801FF80B748C7FC16F816C036337DB23A>66
D<ED0FFC92387FFFC0913903F807F091390FC001F8023FC7127E027C804948EC1F80495A
4948EC0FC0494815E04948140749C813F0137E01FE1503484816F8485AA2485AA2120F5B
001F16075B123FA34848ED0FF0A3EF1FE0A290C9FC48EE3FC0A26C1780177F180017FE16
016D5D003F4B5A4C5A4C5A6C6C5D000F4B5A6D4AC7FC000715FE6C6CEB01F86C6CEB07F0
D800FEEB1FC090263F807FC8FC90380FFFF80101138035357DB33A>79
D<0103B539C007FFFC5BA29026000FFCC713804BECFC00020715F0606E6C495A4D5A0201
4AC7FC6F130E5F6E6C5B5F92387F80605F92383F818004C3C8FC16C6ED1FEC16F86F5AA2
150782A282150FED1DFE153915704B7E4A5A4A486C7E150002066D7E5C4A131F4A805C4A
6D7E495A49C76C7E1306010E1403013C81137CD803FE4A7EB500C090387FFFFCA2603E33
7EB23F>88 D<EB01C0EB07E014F0130F14E01307EB038090C7FCAA13F0EA03FCEA071EEA
0E1F121C123800301380EB3F00127012605BEAE07EEA40FE12005B12015BA212035B1207
1420EBE070000F136013C014E014C0EA1F80EA0F81EB8380EB8700EA078EEA03FCEA00F0
14337EB11A>105 D<147F903803FFC090380FC1F090383F00F8017C137C497F485A4848
7F1207485A5B001F1580123F90C7FCED3F005A127EA25D157E5A15FE5D007C5C14014A5A
5D6C495A4A5A6C49C7FC380F807E3807C1F83801FFE06C6CC8FC21227EA025>111
D<011F131F90397FC07FE09039E3E1E0F09039C3E380783A01C1F7007CD981FE133CD983
FC133E00035BEB03F0163FEA0707120600025B1200010F147F167E5CA2011F14FE16FC5C
A2013FEB01F8A291380003F016E0491307ED0FC002801380ED1F009038FFC03E9038FEE0
F89038FC7FE0EC1F80000190C8FCA25BA21203A25BA21207A25BB57EA3283083A027>I<
EB01FCEB0FFF90383E03C090387800E04913603901E001E014030003130713C013E0EC03
806DC7FC13FF14F014FC6C7F6C7F6D1380130F9038007FC0141F140F007E130700FE1480
A3EC0F005A00C0131E6C5B00705B383C01F0380FFFC0D803FEC7FC1B227CA024>115
D<EB0380EB0FC0A3131FA21480A2133FA21400A25BA2137E387FFFFEA2B5FC3800FC00A2
1201A25BA21203A25BA21207A25BA2120FA25B1408001F131C14181380143814701460EB
00E0EB01C0380F8380EB8700EA07FEEA01F817307FAE1C>I E /Fg
133[50 55 2[55 61 33 44 39 61 61 55 61 89 33 2[33 61
55 39 50 61 44 61 50 9[100 78 1[66 3[61 2[100 3[39 83
83 55 6[44 4[25 50 4[50 50 50 50 2[25 46[{
 TeXBase1Encoding ReEncodeFont }39 100.000000 /Palatino-Bold
rf /Fh 139[19 1[23 3[34 1[17 2[17 34 32 5[29 97[{
 TeXBase1Encoding ReEncodeFont }8 58.333336 /Palatino-Roman
rf /Fi 139[19 11[29 48[29 29 29 29 29 29 29 49[{
 TeXBase1Encoding ReEncodeFont }9 58.333336 /Palatino-Italic
rf /Fj 7 117 df<D803FEEC03FE1607D80037EC0FC0161BA216330167EC6780EB638016
C7ED018701C39038030F00A29038C1C006150CD80181141E1518903880E0301560D80300
5C15C0ECE1801471000690387300781476147C120E3BFFE0380FFF8014302F1C7B9B35>
77 D<D803FEEB1FFC7FD8003FEB01C0028013801337EB33C00163EB0300EB61E0A2EB60
F001C013061478A2143CD801805B141E141F140FD803001398140715D81403000614F014
011400120ED8FFE01360A2261C7B9B2D>I<001FB61280A2393E01E00F0038EC03001270
1260EB03C012C0A3C64848C7FCA449C8FCA4131EA45BA4381FFFF05C211C7C9B23>84
D<EBFC603803FEF0EA0787EA0E01001C13E012381278A238F003C0A314C2EB0786A2EA70
0F38383F8C381FF3F8380FC0F017127C9120>97 D<EA7F80A2120F90C7FCA4121EA4EA3C
7CEA3DFF383F8780383E03C0EA7C011278A3EAF003A3EB0780A2EB0F00EA701E6C5AEA1F
F0EA0FC0121D7C9C1A>I<EB01C01303A2EB018090C7FCA7137CEA01FEEA038FEA070F12
06120C1200A2131EA45BA45BA45B1260EAF1E0EAF3C0B45A007EC7FC12257E9C18>106
D<13C0EA01E0A3EA03C0A4EAFFFCA2EA0780A2EA0F00A4121EA31304EA3C0CA213181370
EA1FE0EA0F800E1A7D9917>116 D E /Fk 4 52 df<14E0B0B712C0A3C700E0C7FCB022
237C9B2B>43 D<1360EA01E0120F12FF12F11201B3A3387FFF80A2111C7B9B1C>49
D<EA03FCEA0FFF383C0FC0387003E0387801F0EAFC0014F8A214781278C712F814F0A2EB
01E0EB03C0EB0780EB0F00131C5B13E03801C018EA0380EA0600481338383FFFF05AB5FC
A2151C7D9B1C>I<EA01FC380FFF80381E07C0383001E0007C13F01300127EEA7C010038
13E0EA0003EB07C0EB1F803803FE005B38000780EB03C0EB01E0EB00F014F81230127812
FCA214F0EA7801387003E0383C07C0380FFF00EA03FC151D7D9B1C>I
E /Fl 7 107 df<B712FEA327037A8F34>0 D<1238127C12FEA3127C123807077A9114>
I<160E163E16FEED03F8ED0FE0ED3F80EDFE00EC03F8EC0FE0EC3F8002FEC7FCEB03F8EB
0FE0EB3F8001FEC8FCEA03F8EA0FE0EA3F8000FEC9FC12F812FEEA3F80EA0FE0EA03F8EA
00FEEB3F80EB0FE0EB03F8EB00FEEC3F80EC0FE0EC03F8EC00FEED3F80ED0FE0ED03F8ED
00FE163E160E1600AB007FB612FCB712FEA227357AA734>20 D<13E0EA01F0EA03F8A3EA
07F0A313E0A2120F13C0A3EA1F80A21300A25A123EA35AA3127812F8A25A12100D1E7D9F
13>48 D<147EEB03FEEB0FE0EB1F00133E5BB35BA2485AEA07E0EAFF8000FCC7FCB47EEA
07E0EA01F06C7EA2137CB37F7FEB0FE0EB03FEEB007E173B7BAB22>102
D<12FCB47EEA0FE0EA01F06C7E137CB37FA27FEB0FC0EB03FEEB007EEB03FEEB0FC0EB1F
00133EA25BB35B485AEA0FE0EAFF8000FCC7FC173B7BAB22>I<12E0B3B3B3A5033B78AB
14>106 D E /Fm 130[25 1[25 37 42 1[62 42 45 24 32 30
42 45 41 43 66 22 42 1[22 43 42 25 36 46 33 41 37 1[37
7[75 54 58 46 3[45 1[62 71 46 2[25 62 57 42 2[53 46 58
1[33 4[19 37 4[37 1[37 37 2[19 25 19 2[25 25 37[45 2[{
 TeXBase1Encoding ReEncodeFont }54 75.000000 /Palatino-Roman
rf /Fn 135[37 2[46 1[33 29 5[25 2[25 1[42 1[37 1[33 46
37 12[50 13[42 46 11[37 1[37 37 37 37 37 37 37 2[19 25
45[{ TeXBase1Encoding ReEncodeFont }24 75.000000 /Palatino-Bold
rf /Fo 4 100 df<BB12FC86A3D87FC0C9001F7FF0007F6C6C17076C6C050113806C6CEF
007F1A1F6C6CF00FC06C6C18076C6C1803F201E06C6D17006D6C1860013F19706E18306D
7E6D6C18181B006D7E6D7E6D7EA26D7F6E7E6E7EA26E7E6E7E6E7EA26E7E6E7E80826F7E
6F7EA26F7E6F7E6F5A5EA24B5A5E4BCBFC153E157E5D5D4A5A4A5A14075D4A5A4ACCFC14
3E147E147C5C4948181801031930495A4A18704948186049CC12E0491801017EF003C001
7C180749180F4848F01F800003197F49EF01FF4848050713004848173F48CA000FB5FC48
BA5AA25ABB5AA24D537B7F58>80 D<BF12E08AA38A6C90CCFC0900806C6D19076C6D0700
7F6C6D1A1F1D076C6DF201FF6C6D747E6C6DF33F801E0F6C6D1B076D6CF303C06D1C016F
F200E06D7F6D6D1B706D1D30816D6D1B186D6D1B007F816E7E6E7FA26E7F6E7F6E7FA26E
7F6E7F6E7FA26F7E6F7F81836F7F6F7F81836F7F6F7F167F83707F707F8284707F707FA2
707F82715A60173F715A604D5A4DCDFC17FE5F16014C5A4C5A4C5A4C5A4C5AA24CCEFC16
FE4B5A4B5A4B5AA24B5A4B5A4B5A4BCFFC15FEA24A5A4A5A4A481B184A481B304A5A4A48
1B701F604ACF12E002FE1B014948F303C049481B074948F30F801E1F49481B7F4948F3FF
0049481A0349CE120F01FEF37FFEF403FF48481A7F4848077FB55A48BEFC48655AA24865
5ABFFC666D747B7F78>88 D<BE12FEA5000302E0C9000F1480C66CF2FC00011F1AF06D62
6D62A26D62B3B3B3B3B3A4496D4C7FA2496D4C7F496D4C7F017F01FF4BB512FC0003B600
E0020FECFF80B8D88003B712FEA55F747B7F6A>I<17C0EE07F8EE3FFF4BB512E0030F14
FC923A7FFE1FFF80912703FFF00313F0021F90C7EA3FFEDAFFF0913803FFC00103018091
38007FF0D91FF8C9EA07FED9FF809338007FC0D807FCCBEA0FF8D83FC0F000FF00FCCDEA
0FC000E01A01521080BF53>99 D E /Fp 133[42 46 42 69 46
51 28 37 32 1[51 46 51 74 28 51 1[28 51 46 32 42 51 37
51 42 10[65 1[55 51 6[51 3[69 2[51 1[60 8[21 8[42 2[21
4[28 28 37[51 2[{ TeXBase1Encoding ReEncodeFont }37 83.333336
/Palatino-Bold rf /Fq 13 107 df<007FB81280B912C0A26C17803204799641>0
D<121C127FEAFF80A5EA7F00121C0909799917>I<0060150600F0150F6C151F007C153E
6C157C6C15F86C6CEB01F06C6CEB03E06C6CEB07C06C6CEB0F806C6CEB1F00017C133E6D
5B6D5B90380F81F0903807C3E0903803E7C06DB45A6D90C7FC147EA214FF497F903803E7
C0903807C3E090380F81F049C67E013E137C497F497F4848EB0F804848EB07C04848EB03
E04848EB01F048C812F8003E157C48153E48151F48150F00601506282874A841>I<007F
B812F8B912FCA26C17F8CCFCAE007FB812F8B912FCA26C17F8CCFCAE007FB812F8B912FC
A26C17F836287BA841>17 D<EF0180EF07C0171FEF7F80933801FF00EE07FCEE1FF0EE7F
C04B48C7FCED07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1F
F0EB7FC04848CAFCEA07FCEA3FF0EA7FC048CBFC5AEA7F80EA3FE0EA0FF8EA03FEC66C7E
EB3FE0EB0FF8EB03FE903800FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8ED03
FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FC0170FEF038094C7FCAE007FB812
80B912C0A26C1780324479B441>20 D<126012F812FEEA7F80EA3FE0EA0FF8EA03FEC66C
7EEB3FE0EB0FF8EB03FE903800FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8ED
03FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FC0171FEF7F80933801FF00EE07
FCEE1FF0EE7FC04B48C7FCED07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9
FCEB07FCEB1FF0EB7FC04848CAFCEA07FCEA1FF0EA7FC048CBFC12FC1270CCFCAE007FB8
1280B912C0A26C1780324479B441>I<181EA4181F84A285180785727EA2727E727E8519
7E85F11F80F10FC0F107F0007FBA12FCBCFCA26C19FCCCEA07F0F10FC0F11F80F13F0019
7E61614E5A4E5AA24E5A61180F96C7FCA260181EA4482C7BAA53>33
D<91381FFFFE91B6FC13074914FED93FF0C7FCEB7F8001FCC8FC485AEA03E0485A485A90
C9FC5A121E123E123C127C1278A212F85AA3B712FE16FFA216FE00F0C9FCA37E1278A212
7C123C123E121E121F7E7F6C7E6C7EEA01F86C7EEB7F80EB3FF0010FB512FE6D14FF1300
021F13FE283279AD37>50 D<126012F0AD12F812FCA212F812F0AD126006207BA400>55
D<0060161800F0163CA26C167C00781678A2007C16F8003C16F0003E1501001E16E0A200
1F15036C16C0A26D1407000716806D140F00031600A26D5C6CB612FEA36C5D01F8C7127C
01781478A2017C14F8013C5CA2013E1301011E5C011F13036D5CA2EC800701075CA2ECC0
0F010391C7FC6E5A0101131EA2ECF03E0100133CA2ECF87CEC7878EC7CF8EC3CF0A2143F
6E5AA36E5AA26E5AA26EC8FC2E3C80B92F>I<EC01F8140FEC3F80ECFC00495A495A495A
A2130F5CB3A7131F5C133F49C7FC13FEEA03F8EA7FE048C8FCEA7FE0EA03F8EA00FE137F
6D7E131F80130FB3A7801307A26D7E6D7E6D7EEC3F80EC0FF814011D537ABD2A>102
D<12FCEAFFC0EA07F0EA01FCEA007E7F80131F80130FB3A7801307806D7E6D7EEB007EEC
1FF0EC07F8EC1FF0EC7E00495A495A495A5C130F5CB3A7131F5C133F91C7FC137E485AEA
07F0EAFFC000FCC8FC1D537ABD2A>I<126012F0B3B3B3B3A91260045377BD17>106
D E /Fr 21 120 df<EB0FE0EB7FFCD9F83E13602603C01F13C03907800F80390F0007C0
001EECC180123E003CECE300007C130315E65A15EC15F8A25D485CA300781307141D6C90
3879F0C03A1E03E0F180390FFF807F3A03FC003E0023197C982B>11
D<0170133801F8137CA248485BA44848485AA44848485AA44848485AEDC180A3001F9038
0F8300141F9038C037869038E0E7C6393FFFC3FC393E7F00F890C9FCA25AA45AA45A5A21
257D9828>22 D<1238127C12FE12FFA2127F123B1203A31206A3120C1218123812701220
08127A8614>59 D<4AB41308020FEBE01891397F80F038903A01F8001870D903E0EB0CF0
D90F80130749C71203013E15E05B491401485A484815C0485A120F5B001F168090C8FC48
92C7FCA2127EA4127C12FCA21606007C5DA35E007E5D123E5E6C5D6C6C495A00074AC7FC
D803E0130E6C6C13383900FE01F090383FFFC0D907FCC8FC2D2A7DA830>67
D<90383FFFF0A2903801FC005CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133F
A291C7FCA25BA2137EA213FEA25BA21201A25BA21203B512C0A21C287DA71D>73
D<D93FFCED3FFC187F0101EEFF0002BE5DEF01BE0103ED037E187C023E1406170C496C15
FC4D5A01061530A2010E1561EFC1F090380C0F80EE0181011CEC03036001181406160C01
381507912607C0185B01301430A20170EC600F04C05B1360913803E18001E09038E3001F
95C7FC01C013E615EC00015EDA01F8133E01805BEA03C000074A137ED8FFFC9039C01FFF
F014003E287CA73F>77 D<D93FFC903801FFF88001019138001F006E141E170C902603BF
80131C1718EC1FC0A2496C6C1338173090380607F0A290260E03F81370176090380C01FC
A290261C00FE13E05F0118137FA20138EB3F81031F5B013014C1150F017014E3030790C7
FC016014F3150301E014FF6F5A5B15001201167C5B486C143C1207D8FFFC1418A235287D
A735>I<013FB512F816FF903A01FC001FC04AEB07E0EE01F0010315F816005CA2130716
015CA2010FEC03F0A24AEB07E0EE0FC0011FEC1F80EE3E0091388001FC91B512E093C7FC
D93F80C8FC91C9FCA35B137EA313FE5BA312015BA21203B512C0A22D287DA72A>80
D<000FB712E05A9039800FE007D81E009038C001C05A0038011F1300123000705C006015
01023F148012E0481400A2C74890C7FCA2147EA214FEA25CA21301A25CA21303A25CA213
07A25CA2130FA25CA2131F001FB57EA22B287DA727>84 D<903B3FFFE00FFFC0A2010190
390001FC006D4814F017C0027F495A4CC7FC6E130E6F5A021F5B6F5A5E91380FE1C0EDE3
80DA07F7C8FC15FE6E5A5D6E7EA2811403EC077F140E4A7E02187FEC301F02607F14C049
486C7EEB030001066D7E5B01386D7E5B01F06D7E485AD80FF0497ED8FFFC90381FFFE0A2
32287DA736>88 D<EB1F80EB7FC73801F0EF3803C07F48487E48487E121E003E133E123C
127CA2485BA4485B1530A3903801F060EA7803010613C0383C1CF8391FF87F803907E01F
001C197C9824>97 D<EA01F0123FA2EA03E0A21207A25BA2120FA25BA2121FA2131FEB7F
C0383FE1E0EB80F0EB0078123E127EA2007C137CA200FC137814F85AA214F0EAF001A214
E0EB03C0A23870078038780F00EA3C3CEA1FF8EA07E016287CA71D>I<EB0FE0EB7FF8EB
F01C3803C03E3807807EEA0F00001E137C123E003C1300127CA25AA55AA214040078130C
14186C1370381E03E0380FFF803803FC0017197C981E>I<130E131F5BA2133E131C90C7
FCA8EA03E0EA0FF0EA1C78EA387C123012605B12C0A2EA01F0A3485AA2485AA2EBC180EA
0F81EB8300EA1F031306120F131CEA07F8EA03E011277DA617>105
D<1407EC0F80141FA21500140E91C7FCA8EB03E0EB0FF8EB1C3CEB303E1360A213C05CEA
0180C7FCA25CA4495AA4495AA4495AA4495AA21238D87C1FC7FCEAFC1E5BEAF8F8EA7FF0
EA1F80193280A61B>I<137CEA0FFCA2C65AA21201A25BA21203A25BA21207A2EBC00FEC
3F80000FEB71C0EBC1C3EB8307EB860FEA1F8C01981380903830070001E0C7FC123F13FC
EA3E7FEB1F80387E0FC01307007C14C0A212FCEC818012F8ECC300EB03C638F001FC486C
5A1A287BA723>I<3B07801FC007E03B1FE07FF01FF83B19F0E0F8787C3B30FB807CE03E
3A60FF007D804990387F001E49017E133EEAC1F849137C1201A24848495BA35F4848485A
1830EE01F018603B0F8003E003E018C01601EFE38001009039C000FF00000E4A137C3419
7D983B>109 D<3907801FC0391FE07FF03939F0E0F83930FB807C3860FF005B5BEAC1F8
5B1201A248485BA34A5AEA07C01660EC03E016C0390F8007C0EDC1801403EDC700903800
01FE000EEB00F823197D9829>I<EB0FE0EB7FF8EBF83C3803C00E3807800F390F000780
121E123E123C127CA248130FA315005C48131E143E143C00785B5C6C485A381E07C06CB4
C7FCEA03F819197C9821>I<131C133C137CA45BA4485AB512E0A23801F000485AA4485A
A4485AA448C7FC1460A214C0EA3E011480381E0700EA1F0EEA0FF8EA03F013247EA319>
116 D<D803E0EB7003D80FF09038F80780D81C78EC0FC039387C01F00030150700601503
13F800C0903903E00180A2EA01F0A2913907C00300EA03E0A216063907C00F80A25EA25E
EA03E04A6C5A3A01F873E0E03A007FE1FFC090261F803FC7FC2A197D9830>119
D E /Fs 10 95 df<1306130C13181330136013E0EA01C0EA0380A2EA07005A120E121E
A2121C123CA35AA512F85AAB7E1278A57EA3121C121EA2120E120F7EEA0380A2EA01C0EA
00E0136013301318130C13060F3B7AAB1A>40 D<12C012607E7E7E120E7EEA0380A2EA01
C013E0120013F0A213701378A3133CA5133E131EAB133E133CA51378A3137013F0A213E0
120113C0EA0380A2EA0700120E120C5A5A5A5A0F3B7DAB1A>I<140EB3A2B812E0A3C700
0EC8FCB3A22B2B7DA333>43 D<EB3F803801FFF03803E0F83807803C48487E001E7F003E
1480A2003C1307007C14C0A400FC14E0AE007C14C0A36CEB0F80A36CEB1F006C131E6C6C
5A3803E0F86CB45A38003F801B277EA521>48 D<13381378EA01F8121F12FE12E01200B3
AB487EB512F8A215267BA521>I<13FF000313E0380E03F0381800F848137C48137E0078
7F12FC6CEB1F80A4127CC7FC15005C143E147E147C5C495A495A5C495A010EC7FC5B5B90
3870018013E0EA0180390300030012065A001FB5FC5A485BB5FCA219267DA521>I<13FF
000313E0380F01F8381C007C0030137E003C133E007E133FA4123CC7123E147E147C5C49
5AEB07E03801FF8091C7FC380001E06D7E147C80143F801580A21238127C12FEA2150048
5B0078133E00705B6C5B381F01F03807FFC0C690C7FC19277DA521>I<1238127C12FEA3
127C12381200AB1238127C12FEA3127C123807197B9813>58 D<B812E0A3CBFCABB812E0
A32B117D9633>61 D<5AEA0380EA07C0EA0FE0EA1EF0EA3C78EA701CEAE00EEAC0060F09
78A721>94 D E /Ft 28 121 df<B912FEA3000190C7000113006C5EB3B3AD486D497EB6
48B512FEA337397DB83E>5 D<146014E0EB01C0EB0380EB0700130E131E5B5BA25B485A
A2485AA212075B120F90C7FCA25A121EA2123EA35AA65AB2127CA67EA3121EA2121F7EA2
7F12077F1203A26C7EA26C7E1378A27F7F130E7FEB0380EB01C0EB00E01460135278BD20
>40 D<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C133C133E131EA213
1F7FA21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2133E133C137C13
78A25BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20>I<15301578B3A6007F
B812F8B912FCA26C17F8C80078C8FCB3A6153036367BAF41>43 D<EB03F8EB1FFF90387E
0FC09038F803E03901E000F0484813780007147C48487FA248C77EA2481580A3007EEC0F
C0A600FE15E0B3007E15C0A4007F141F6C1580A36C15006D5B000F143EA26C6C5B6C6C5B
6C6C485A6C6C485A90387E0FC0D91FFFC7FCEB03F8233A7DB72A>48
D<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB512F0A31C3879B72A>
I<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E486D7E123000706D7E
126012FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D4A5A5D140F4A5A4A5A
92C7FC147C5C495A495A495A495A91C8FC011EEB01805B5B49130348481400485A485A00
0EC75A000FB6FC5A5A485CB6FCA321387CB72A>I<EB07F8EB3FFF4913C03901F80FF039
03C007F848486C7E380E0001000F80381FE0006D7FA56C5A6C5AC85A1401A25D4A5AA24A
5A5DEC0F80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E7EED7F80A216C0A215
3F16E0A2121EEA7F80487EA416C049137F007F1580007EC7FC0070ECFF006C495A121E39
0F8003F83907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A>I<1538A2157815F8
A2140114031407A2140F141F141B14331473146314C313011483EB030313071306130C13
1C131813301370136013C01201EA038013005A120E120C5A123812305A12E0B712F8A3C7
3803F800AB4A7E0103B512F8A325397EB82A>I<0006140CD80780133C9038F003F890B5
FC5D5D158092C7FC14FC38067FE090C9FCABEB07F8EB3FFE9038780F803907E007E09038
8003F0496C7E12066E7EC87EA28181A21680A4123E127F487EA490C71300485C12E00060
5C12700030495A00385C6C1303001E495A6C6C485A3907E03F800001B5C7FC38007FFCEB
1FE0213A7CB72A>I<EC3FC0903801FFF0010713FC90380FE03E90383F800790387E001F
49EB3F804848137F485AA2485A000FEC3F0049131E001F91C7FCA2485AA3127F90C9FCEB
01FC903807FF8039FF1E07E090383801F0496C7E01607F01E0137E497FA249148016C015
1FA290C713E0A57EA56C7E16C0A2121FED3F807F000F15006C6C5B15FE6C6C5B6C6C485A
3900FE07F090383FFFC06D90C7FCEB03FC233A7DB72A>I<12301238123E003FB612E0A3
16C05A168016000070C712060060140E5D151800E01438485C5D5DC712014A5A92C7FC5C
140E140C141C5CA25CA214F0495AA21303A25C1307A2130FA3495AA3133FA5137FA96DC8
FC131E233B7BB82A>I<EB03F8EB1FFF017F13C09038FC07F03901E001F848486C7E4848
137C90C77E48141E000E141F001E80A3121FA27F5D01E0131E6C6C133E01FC133C6D5B6C
6C6C5AECC1E06CEBF3C06C01FFC7FC6C5BEB3FFF6D13C081017F13F801F07F3903E07FFE
3907801FFF48486C1380481303003E6D13C0003CEB007F007C143F0078EC0FE000F81407
5A1503A21501A36C15C012781503007C15806CEC07006C5C6C6C131ED807E0137C3903F8
03F0C6B55A013F1380D907FCC7FC233A7DB72A>I<121C127FEAFF80A5EA7F00121CC7FC
B2121C127FEAFF80A5EA7F00121C092479A317>58 D<121C127FEAFF80A5EA7F00121CC7
FCB2121C127F5A1380A4127F121D1201A412031300A25A1206A2120E5A121812385A1260
093479A317>I<007FB812F8B912FCA26C17F8CCFCAE007FB812F8B912FCA26C17F83616
7B9F41>61 D<13101338137C13FE487E3803C780380783C0380F01E0381E00F048137800
70131C48130E00401304170D77B92A>94 D<EB1FE0EBFFFC3803E03F3907000F80390F80
07E0486C6C7E13E06E7EA26E7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA0F
F0EA1FC0123F485A90C7FC160C12FEA31401A26C13036CEB077C903980063E18383FC01E
3A0FE0781FF03A03FFF00FE03A007F8007C026277DA52A>97 D<EB07F8EB1FFF90387C0F
C03901F803E03903F001F0D807E013F8380FC0004848137CA248C7127E153E5A153F127E
12FEA3B7FCA248C8FCA5127EA2127FA26C14037F001F14076C6C13060007140E6D131CD8
01F013386C6C137090387E03E090381FFF80903803FC0020277EA525>101
D<ED03F090390FF00FF890393FFC3C3C9039F81F707C3901F00FE03903E007C03A07C003
E010000FECF000A248486C7EA86C6C485AA200075C6C6C485A6D485A6D48C7FC38073FFC
38060FF0000EC9FCA4120FA213C06CB512C015F86C14FE6CECFF804815C03A0F80007FE0
48C7EA0FF0003E140348140116F8481400A56C1401007C15F06CEC03E0003F1407D80F80
EB0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC26387EA52A>103
D<EA0380EA0FE0487EA56C5AEA0380C8FCAAEA03F012FFA312071203B3AA487EB512C0A3
12387EB717>105 D<EA03F012FFA3120F1203B3B3AD487EB512C0A3123A7EB917>108
D<2703F00FF0EB1FE000FFD93FFCEB7FF8913AF03F01E07E903BF1C01F83803F3D0FF380
0FC7001F802603F70013CE01FE14DC49D907F8EB0FC0A2495CA3495CB3A3486C496CEB1F
E0B500C1B50083B5FCA340257EA445>I<3903F00FF000FFEB3FFCECF03F9039F1C01F80
3A0FF3800FC03803F70013FE496D7EA25BA35BB3A3486C497EB500C1B51280A329257EA4
2E>I<EB03FE90380FFF8090383E03E09038F800F84848137C48487F48487F4848EB0F80
001F15C090C712074815E0A2007EEC03F0A400FE15F8A9007E15F0A2007F14076C15E0A2
6C6CEB0FC0000F15806D131F6C6CEB3F006C6C137EC66C13F890387E03F090381FFFC0D9
03FEC7FC25277EA52A>I<3903F01FE000FFEB7FF89038F1E07E9039F3801F803A07F700
0FC0D803FEEB07E049EB03F04914F849130116FC150016FEA3167FAA16FEA3ED01FCA26D
EB03F816F06D13076DEB0FE001F614C09039F7803F009038F1E07E9038F0FFF8EC1FC091
C8FCAB487EB512C0A328357EA42E>I<3807E01F00FFEB7FC09038E1E3E09038E387F038
0FE707EA03E613EE9038EC03E09038FC0080491300A45BB3A2487EB512F0A31C257EA421
>114 D<B538807FFFA33A03FE003FF00001EC1F80000092C7FC017E131C6D13186D6C5A
ECC070010F5B6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F804A7E8114CF903801C7E090
380383F090380703F8EB0601496C7E011C137E49137F01787F496D7E486C80000FEC3FF0
D8FFFE90B51280A329247FA32C>120 D E /Fu 137[66 73 40 53
47 1[73 66 73 106 40 73 1[40 73 66 47 60 73 2[60 10[93
1[80 1[86 100 73 2[120 3[47 100 1[66 11[30 60 3[60 60
60 60 60 2[30 1[30 44[{ TeXBase1Encoding ReEncodeFont }36
119.999947 /Palatino-Bold rf /Fv 137[37 42 25 29 29 1[37
33 42 58 21 33 1[21 37 37 21 29 37 2[33 10[54 1[46 1[50
58 46 2[71 3[25 58 1[42 11[19 37 3[37 37 37 37 37 2[19
1[19 44[{ TeXBase1Encoding ReEncodeFont }36 75.000000
/Palatino-Italic rf /Fw 40 122 df<EC3FC0ECFFF8903807E07C90380F801FD93F00
EB800C017E130F49903807C01C4848ECE018485A484801031338000FEDF0305B001F1670
4848156017E0007F16C090C713F1178016F34816004815F716FE5EA2485D5EA4007E1407
150F003E91381DF818003F14796C02E11338270F8007C013303B07E03F007CF02601FFF8
EB3FC026003FC0EB0F802E267DA435>11 D<ED01FC923807FF8092381E07C092387801E0
03E013F0913901C000F84A5A4AC7FC020E14FC5C5C143002701301026014F814E05C0101
14034A14F0130391C7EA07E017C049140F0106EC1F809238FFBF00D90E0113FC90390C03
81F8EDFFFE0200131F011C010013800118140F17C0A213380130EC07E0A2160F13701360
A301E0141F4915C0A30001153F1780A2EE7F00120316FE5E6D495AD80760495AD8067049
5A6D495A6D495AD80E0E49C7FC390C0780FC903801FFF09038007F80001C90C9FC1218A3
12381230A312701260A312E05AA22E4B7EBA2F>I<EB07F0D91FFC1430D97FFE147090B5
146000036E13E0486E13C0D9F01F1301270F8007E01380261F00011303001CD900F01300
48EC7007160648EC300E0060EC380CED181C00E01518C8121CED0C3816301670166016E0
5EA2150D5EA2150F93C7FCA2150EA3150CA3151CA215181538A45DA45DA44A5AA35D2C37
7FA42B>I<1403EC3FF891387FFF80D901E313C014800103133F9138001F80ED070092C7
FC80A280A2808013018080130080147F81143F8149B47E130790380F8FF0EB3E0F496C7E
13F83801F003D803E07F1207380FC0011380121FEA3F0014005A127EA212FE5D481301A3
5DA24813035D6C13075D127C4A5A6C91C7FC5C6C133E6C6C5A3807C0F03801FFE0D8003F
C8FC223D7DBB25>I<EC3FF0EB01FF010F13E090383FC00049C7FC13FCEA03F8485A5B12
0F485AA2485AA2387FFFFE80A290C8FC5A5AA5127EA4123E123F7E6C6C13606D13E03903
E003C03901F01F0038007FFCEB0FE01C257DA322>I<133F14C0EB07F06D7E801301A26D
7EA3147FA36E7EA36E7EA36E7EA36E7EA36E7EA36E7EA26E7EA214014A7E5C4A7E91381E
3F80143C14784A6C7E1301EB03E049486C7EEB0F80EB1F00496D7E137E5B48486D7E485A
485A000F6E7E485A485A48C87E12FE167F4816800070151F293B7CB930>21
D<EB0380D907E01307010FEC0F80161F5CA2011F143FA24A1400A2013F5CA291C7127EA2
4914FEA2017E5CA201FE1301A2495CA200011403A249ECF018A2000314071738EEE03015
0F00071670031F1360153F6D017713E0486C9038E3E1C0903AFF03C1F380903ACFFF00FF
00D9C3FC133ED81FC0C9FCA25BA2123FA290CAFCA25AA2127EA212FEA25AA212702D377E
A432>I<013FB612E090B712F05A120717E0270F807006C7FC391E00600E48140C003813
E04813C048141CEAC0011200148001035BA213071400A25B1578011E137CA3133E133C13
7C157E13FC5B1201157F1203497FA3D801C0131C2C257EA32F>25
D<160C161C1618A316381630A316701660A316E05EA315015EA301F80103130FD803FE91
38001F80D8070F153F000E018015C0001C5C001814060038161F0030160FD8701F010E13
070060140C1703D8E03F168000C0EB001C491318EA007E180001FE13384913305F000116
064913700360130E5F000316184901E013384B133017705F0201495AD801F849485A4CC7
FC160E2600FC035B017EEB0078013FEB01E090390FE30F80902603FFFEC8FC9038003FF0
0206C9FCA2140E140CA3141C1418A314381430A314701460324B7EB936>32
D<121C127FEAFF80A5EA7F00121C0909798817>58 D<121C127FEAFF80A213C0A3127F12
1C1200A412011380A2120313005A1206120E5A5A5A12600A19798817>I<EF0380EF0FC0
173FEFFF80933803FE00EE0FF8EE3FE0EEFF80DB03FEC7FCED0FF8ED3FE0EDFF80DA03FE
C8FCEC0FF8EC3FE0ECFF80D903FEC9FCEB0FF8EB3FE0EBFF80D803FECAFCEA0FF8EA3FE0
EA7F8000FECBFCA2EA7F80EA3FE0EA0FF8EA03FEC66C7EEB3FE0EB0FF8EB03FE903800FF
80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8ED03FE923800FF80EE3FE0EE0FF8EE
03FE933800FF80EF3FC0170FEF0380323279AD41>I<126012FCB4FCEA7FC0EA1FF0EA07
FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0
ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE01FF9338007F80EF1FC0A2EF7F8093
3801FF00EE07FCEE1FF0EE7FC04B48C7FCED07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0
EC7FC04948C9FCEB07FCEB1FF0EB7FC04848CAFCEA07FCEA3FF0EA7FC048CBFC12FC1270
323279AD41>62 D<1760177017F01601A21603A21607160FA24C7EA216331673166316C3
A2ED0183A2ED0303150683150C160115181530A21560A215C014011580DA03007FA20206
1300140E140C5C021FB5FC5CA20260C7FC5C83495A8349C8FC1306A25BA25B13385B01F0
1680487E000716FFB56C013F13FF5EA2383C7DBB3E>65 D<0103B77E4916F018FC903B00
07F80003FE4BEB00FFF07F80020FED3FC0181F4B15E0A2141FA25DA2143F19C04B143F19
80027F157F190092C812FE4D5A4A4A5AEF0FF04AEC1FC005FFC7FC49B612FC5F02FCC7B4
FCEF3FC00103ED0FE0717E5C717E1307844A1401A2130F17035CA2131F4D5A5C4D5A133F
4D5A4A4A5A4D5A017F4BC7FC4C5A91C7EA07FC49EC3FF0B812C094C8FC16F83B397DB83F
>I<0103B500F8903807FFFC5BA290260007F8C813804BEDFC0019F0020F4B5AF003804B
4AC7FC180E021F1538604B5CEF0380023F4AC8FC170E4B133C1770027F5C4C5ADB0007C9
FC160E4A5B167E4A13FE4B7E01015B92380E7F80ECFC1CED383F010301E07FECFDC04A48
6C7EECFF00D907FC6D7E5C4A130783130F707E5C1601011F81A24A6D7EA2013F6F7EA24A
143F84137F717E91C8123F496C81B60107B512C0A26146397DB847>75
D<902603FFF893383FFF80496081D900079438FF80000206DC01BFC7FCA2020E4C5A1A7E
020C1606190CDA1C7E16FE4F5A02181630A20238166162023016C1F00181DA703F158395
380303F002601506A202E0ED0C076202C01518183001016D6C140F06605B028015C0A201
03923801801FDD03005B140092380FC00649173F4D91C8FC01065DA2010E4B5B4D137E13
0C6F6C5A011C17FEDCE1805B011802E3C7FCA2013802E6130104EC5C1330ED03F8017016
034C5C01F05CD807FC4C7EB500E0D9C007B512F01680150151397CB851>77
D<902603FFF891381FFFF8496D5CA2D90007030113006FEC007C02061678DA0EFF157081
020C6D1460A2DA1C3F15E0705CEC181F82023815016F6C5C1430150702706D1303030392
C7FC02607FA2DAE0015C701306ECC0008201016E130EEF800C5C163F0103EDC01C041F13
1891C713E0160F49EDF03818300106140717F8010E02031370EFFC60130CEE01FE011C16
E004005B011815FF177F1338600130153FA20170151F95C8FC01F081EA07FCB512E01706
A245397DB843>I<4BB4FC031F13F09238FE01FC913903F0007EDA07C0EB1F80DA1F80EB
0FC0023EC7EA07E002FCEC03F0495A4948EC01F8495A4948EC00FC495A49C912FE49167E
13FE49167F1201485AA2485AA2120F5B001F17FFA2485AA34848ED01FEA400FFEE03FC90
C9FCA2EF07F8A2EF0FF0A218E0171F18C0EF3F806C167F180017FE4C5A6C6C5D1603001F
4B5A6D4A5A000FED1F806C6C4AC7FC6D147E0003EC01F8D801FC495AD8007EEB0FC09026
3F807FC8FC903807FFF801001380383D7CBA3F>I<0103B7FC4916E018F8903B0007F800
07FC4BEB00FE187F020FED3F80F01FC05DA2021F16E0A25DA2143FF03FC05DA2027FED7F
80A292C8130018FE4A4A5A604AEC07F04D5A0101ED3FC04CB4C7FC91B612FC17E0D903FC
CAFCA25CA21307A25CA2130FA25CA2131FA25CA2133FA25CA2137FA291CBFC497EB6FCA3
3B397DB835>I<92391FE00380DBFFFC130002036D5A91390FE01F8F91393F0007DF027E
EB01FE02F81300495A4948147E177C4948143C495AA2011F153891C8FCA3491530A28094
C7FC80806D7E14FEECFFE06D13FE6DEBFFC06D14F06D806D80021F7F02037FEC003F0303
7F1500167F163F161FA3120C160FA2001C151F94C7FCA3003C153EA25E003E5D127E007F
4A5A6D495A6DEB0FC0D8F9F0495AD8F0FE01FEC8FC39E03FFFF8010F13E0D8C00190C9FC
313D7CBA33>83 D<0003B812FEA25A903AF8003FC00101C0913880007E4848163C90C700
7F141C121E001C92C7FCA2485CA200305C007017180060130112E0485CA21403C716005D
A21407A25DA2140FA25DA2141FA25DA2143FA25DA2147FA292C9FCA25CA25CA21301A25C
A21303A25CEB0FFC003FB6FC5AA237397EB831>I<49B500F890387FFFF095B5FC1AE0D9
0003018090380FFC004BC713E00201ED07804EC7FC6E6C140E606F5C705B606F6C485A4D
5A031F91C8FCEEE0065F6F6C5A5F03075B705A16F96FB45A94C9FC6F5AA36F7EA34B7FED
037F9238063FC0150E4B6C7E1538ED700F03E07F15C04A486C7EEC0300020613034A805C
4A6D7E14704A1300494880495A49C86C7E130E011E153F017E4B7ED803FF4B7E007F01E0
011FEBFFC0B5FC6144397EB845>88 D<147E903803FF8090390FC1C38090391F00EFC001
7E137F49133F485A4848EB1F8012075B000F143F48481400A2485A5D007F147E90C7FCA2
15FE485C5AA214015D48150CA21403EDF01C16181407007C1538007E010F1330003E131F
027B13706C01E113E03A0F83C0F9C03A03FF007F80D800FCEB1F0026267DA42C>97
D<133FEA1FFFA3C67E137EA313FE5BA312015BA312035BA31207EBE0FCEBE3FF9038E707
C0390FFE03E09038F801F001F013F8EBE000485A15FC5BA2123F90C7FCA214015A127EA2
140312FE4814F8A2140715F05AEC0FE0A215C0EC1F80143F00781400007C137E5C383C01
F86C485A380F07C06CB4C7FCEA01FC1E3B7CB924>I<EC3FC0903801FFF0903807E07890
381F801C90387E001E49130E485A485A1207485A49131E001F141C153C484813F8EC03E0
007FEB3FC09038FFFE0014E090C8FC5A5AA7007E140315071506003E140E153C6C14706C
6C13E0EC07C03903E03F003801FFF838003FC020267DA427>101
D<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C9FCA35B90387E03F8EC0FFF
91383C0F809039FEF007C0D9FDC07FEBFF80EC0003485A5BA249130712035BA2150F0007
5D5BA2151F000F5D5B153F93C7FC121F4990387F0180157EEDFE03003F02FC130090C7FC
5EEDF80648150E007E150C161C5E00FEEC787048EC3FE00038EC0F80293B7CB930>104
D<14E0EB03F8A21307A314F0EB01C090C7FCAB13F8EA03FEEA070F000E1380121C121812
381230EA701F1260133F00E0130012C05BEA007EA213FE5B1201A25B12035BA200071318
13E01438000F133013C01470EB806014E014C01381EB838038078700EA03FEEA00F81539
7EB71D>I<150FED3F80A2157FA31600151C92C7FCABEC0F80EC3FE0ECF0F0903801C0F8
49487E14005B130E130C131CEB1801133801305BA2EB0003A25DA21407A25DA2140FA25D
A2141FA25DA2143FA292C7FCA25CA2147EA214FEA25CA21301001E5B123F387F83F0A238
FF87E0495A00FE5BD87C1FC8FCEA707EEA3FF8EA0FC0214981B722>I<EB03F0EA01FFA3
EA00075CA3130F5CA3131F5CA3133F91C8FCA35B017EEB07C0ED1FF0ED783801FEEBE0F8
9039FC01C1FCEC0383EC07070001130ED9F81C13F891383803F091387001E0000349C7FC
EBF1C0EBF38001F7C8FCEA07FEA2EBFFE0EBE7F8380FE0FEEBC07F6E7E141F001F80D980
0F1330A21670003F011F136001001380A216E04815C0007E1481020F1380158300FE9038
07870048EB03FE0038EB00F8263B7CB92B>I<D803E0017F14FE3D07F801FFE003FFC03D
0E3C0781F00F03E03D1C3E1E00F83C01F026383F38D9FC707F00304914E04A90387DC000
007049EB7F8000604991C7FCA200E090C700FE1301485A017E5CA200000201140301FE5F
495CA203031407000160495C180F03075D1203494A011F13601980030F023F13E00007F0
00C0495C1901031F023E1380000F1803494A150061033F150E001FEF1E1C4991C7EA0FF8
0007C7000EEC03E043267EA449>109 D<D803E0137F3A07F801FFE03A0E3C0781F03A1C
3E1E00F826383F387F00305B4A137C00705B00605BA200E090C712FC485A137EA2000014
0101FE5C5BA2150300015D5B15075E120349010F133016C0031F13700007ED80605B17E0
EE00C0000F15014915801603EE0700001FEC0F0E49EB07FC0007C7EA01F02C267EA432>
I<EC1FC0ECFFF8903807E07E90380F801F90393F000F80017E14C0491307484814E0485A
4848EB03F0120F5B121F48481307A2127F90C7FCA2150F5A4815E0A2151F16C0A248EC3F
8016005D157E007E5C4A5A003E495A003F495A6C495A6C6C48C7FC3807E07E3801FFF038
003F8024267DA428>I<90390F8003F090391FE00FFC903939F03C1F903A70F8700F8090
3AE0FDE007C09038C0FF80030013E00001491303018015F05CEA038113015CA2D8000314
07A25CA20107140FA24A14E0A2010F141F17C05CEE3F80131FEE7F004A137E16FE013F5C
6E485A4B5A6E485A90397F700F80DA383FC7FC90387E1FFCEC07E001FEC9FCA25BA21201
A25BA21203A25B1207B512C0A32C3583A42A>I<3903E001F83907F807FE390E3C1E0739
1C3E381F3A183F703F800038EBE07F0030EBC0FF00705B00601500EC007E153CD8E07F90
C7FCEAC07EA2120013FE5BA312015BA312035BA312075BA3120F5BA3121F5B0007C9FC21
267EA425>114 D<14FF010313C090380F80F090383E00380178131C153C4913FC000113
0113E0A33903F000F06D13007F3801FFE014FC14FF6C14806D13C0011F13E01303903800
3FF014071403001E1301127FA24814E0A348EB03C012F800E0EB07800070EB0F006C133E
001E13F83807FFE0000190C7FC1E267CA427>I<EB01C0497E1307A4130F5CA3131F5CA3
133F91C7FC007FB51280A2B6FCD8007EC7FCA313FE5BA312015BA312035BA312075BA312
0FEBC006A2140E001F130CEB801C141814385C146014E0380F81C038078780D803FEC7FC
EA00F819357EB31E>I<01F816F0D803FE9138E001F8D8070F903801F003000ED9800314
FC121C12180038020713010030EDE000D8701F167C1260030F143CD8E03F163800C00100
5B5BD8007E131F183001FE5C5B033F1470000117604991C7FCA218E000034A14C049137E
17011880170318005F03FE1306170E000101015C01F801BF5B3B00FC039F8070903A7E0F
0FC0E0903A1FFC03FFC0902703F0007FC7FC36267EA43B>119 D<903907E001F090391F
F807FC9039783E0E0F9039E01F1C1FD801C09038383F803A03800FF07F0100EBE0FF5A00
0E4A1300000C157E021F133C001C4AC7FC1218A2C7123FA292C8FCA25CA2147EA214FEA2
4A130CA20101141C001E1518003F5BD87F81143801835C00FF1560010714E03AFE0E7C01
C0D87C1C495A2778383E0FC7FC391FF00FFC3907C003F029267EA42F>I<13F8D803FE14
70D8070F14F8000EEB8001121C121800381403003015F0EA701F1260013F130700E00100
13E012C05BD8007E130F16C013FE5B151F000115805BA2153F000315005BA25D157EA315
FE5D1401000113033800F80790387C1FF8EB3FF9EB0FE1EB00035DA2000E1307D83F805B
007F495AA24A5A92C7FCEB003E007C5B00705B6C485A381E07C06CB4C8FCEA01FC25367E
A429>I E /Fx 165[35 35 1[53 38 41 33 28 35 1[32 42 44
50 32 39 1[18 44 41 30 32 41 38 32 41 65[{
 TeXBase1Encoding ReEncodeFont }23 53.333282 /Palatino-Roman
rf /Fy 105[42 1[42 42 21[28 1[28 42 46 43 69 47 50 27
35 33 46 50 45 48 73 24 46 19 24 48 46 28 40 51 37 46
42 23 42 5[55 1[83 60 65 51 44 55 1[50 65 69 79 51 60
28 28 69 63 46 51 64 59 51 65 1[37 1[50 1[21 21 42 42
42 42 42 42 42 42 42 42 1[21 28 21 2[28 28 23 5[23 29[50
50 2[{ TeXBase1Encoding ReEncodeFont }79 83.333336 /Palatino-Roman
rf /Fz 169[48 2[35 44 2[52 55 63 41 48 1[22 55 2[41 51
2[52 19[22 45[{ TeXBase1Encoding ReEncodeFont }14 66.666664
/Palatino-Roman rf /FA 137[80 2[64 56 2[80 2[48 80 5[64
80 2[80 19[135 77[{ TeXBase1Encoding ReEncodeFont }10
144.000000 /Palatino-BoldItalic rf /FB 198[249 57[{
 TeXBase1Encoding ReEncodeFont }1 450.000000 /Helvetica-Bold
rf /FC 133[37 42 1[60 42 46 28 32 32 38 42 37 46 65 23
37 1[23 42 42 23 32 42 34 38 37 10[60 5[51 2[78 4[65
14[42 42 42 42 42 42 42 42 42 42 25 1[28 5[23 39[{
 TeXBase1Encoding ReEncodeFont }41 83.333336 /Palatino-Italic
rf /FD 1 14 df<ED7FF80207B57E021F14E091397FC00FF8D901FCC712FED903F0143F
D90FC0EC0FC049C8EA03E0013E6F7E0178ED0078498248488248488249820007188048CA
EA03C0000E1701001E18E0001C1700003C18F0003818700078187800701838A300F0183C
48181CA96C183C00701838A30078187800381870003C18F0001C18E0001E1701000E18C0
000F17036C6CEE0780000318006D5E6C6C161E6C6C5E01785E013E4B5A6D4B5AD90FC0EC
0FC0D903F0023FC7FCD901FC14FE903A007FC00FF8021FB512E0020714809126007FF8C8
FC3E3D7CAE47>13 D E /FE 3[37 129[33 33 3[37 18 33 22
1[37 37 37 4[15 37 37 1[37 1[33 1[37 13[44 5[55 2[33
1[48 4[48 9[37 1[37 5[37 2[18 1[18 5[44 38[{
 TeXBase1Encoding ReEncodeFont }27 66.666664 /Helvetica
rf /FF 171[46 1[54 11[46 1[54 2[50 31[21 33[{
 TeXBase1Encoding ReEncodeFont }6 75.000000 /Helvetica
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
%%Page: 293 1
293 0 bop 1030 345 a FF(DRAFT!)1339 343 y FE(c)1321 345
y FD(\015)18 b FE(J)o(an)o(uar)r(y)g(7,)h(1999)f(Chr)q(istopher)h
(Manning)f(&)h(Hinr)q(ich)f(Sch\374tz)o(e)o(.)538 b FC(293)656
1275 y FB(9)125 b FA(Markov)35 b(Models)1032 1798 y Fy(H)12
b Fz(I)g(D)g(D)g(E)g(N)53 b Fy(M)12 b Fz(A)g(R)g(K)g(O)g(V)51
b Fy(M)12 b Fz(O)g(D)g(E)g(L)g(S)40 b Fy(\(HMMs\))28
b(have)g(been)g(the)h(mainstay)g(of)f(the)1030 1906 y(statistical)e
(modeling)h(used)e(in)i(modern)f(speech)g(r)o(ecognition)h(systems.)41
b(Despite)1030 2014 y(their)31 b(limitations,)k(variants)c(of)g(HMMs)f
(ar)o(e)g(still)i(the)f(most)h(widely)f(used)g(tech-)1030
2122 y(nique)18 b(in)h(that)e(domain,)h(and)g(ar)o(e)e(generally)h(r)o
(egar)o(ded)e(as)j(the)f(most)i(successful.)24 b(In)1030
2230 y(this)e(chapter)e(we)h(will)h(develop)e(the)h(basic)g(theory)g
(of)g(HMMs,)f(touch)i(on)f(their)h(ap-)1030 2338 y(plications,)g(and)f
(conclude)h(with)g(some)h(pointers)f(on)g(extending)f(the)h(basic)f
(HMM)1030 2446 y(model)g(and)f(engineering)i(practical)d
(implementations.)1113 2554 y(An)g FC(HMM)h Fy(is)g(nothing)h(mor)o(e)e
(than)h(a)e(pr)o(obabilistic)h(function)i(of)e(a)g(Markov)f(pr)o(o-)
-3630 b Fz(H)t Fx(I)t(D)t(D)t(E)t(N)18 b Fz(M)t Fx(A)t(R)t(K)t(O)t(V)e
Fz(M)t Fx(O)t(D)t(E)t(L)1030 2662 y Fy(cess.)25 b(W)-8
b(e)21 b(have)e(alr)o(eady)f(seen)i(an)g(example)g(of)g(Markov)f(pr)o
(ocesses)h(in)g(the)g Fw(n)p Fy(-gram)1030 2769 y(models)e(of)g
(Chapters)e(2)h(and)h(6.)23 b FC(Markov)18 b(pr)o
(ocesses/chains/models)e Fy(wer)o(e)h(\002rst)h(devel-)-3350
b Fz(M)t Fx(A)t(R)t(K)t(O)t(V)17 b(M)t(O)t(D)t(E)t(L)1030
2877 y Fy(oped)25 b(by)g(Andr)o(ei)f(A.)g(Markov)g(\(a)g(student)h(of)g
(Chebyshev\).)38 b(Their)25 b(\002rst)h(use)f(was)1030
2985 y(actually)e(for)h(a)f(linguistic)j(purpose)d(\226)h(modeling)h
(the)f(letter)f(sequences)h(in)h(works)1030 3093 y(of)19
b(Russian)g(literatur)o(e)f(\(Markov)g(1913\))e(\226)i(but)h(Markov)f
(models)h(wer)o(e)f(then)i(devel-)1030 3201 y(oped)e(as)g(a)g(general)g
(statistical)g(tool.)26 b(W)-8 b(e)19 b(will)g(r)o(efer)d(to)j(vanilla)
f(Markov)g(models)h(as)1030 3309 y(V)-5 b(isible)19 b(Markov)e(Models)h
(\(VMMs\))f(when)h(we)h(want)f(to)g(be)g(car)o(eful)f(to)h(distinguish)
1030 3417 y(them)j(fr)o(om)g(HMMs.)1113 3525 y(W)-8 b(e)24
b(have)g(placed)f(this)i(chapter)e(at)h(the)h(beginning)g(of)f(the)g
(\223grammar)6 b(\224)23 b(part)h(of)1030 3633 y(the)h(book)h(because)e
(working)i(on)f(the)g(or)o(der)f(of)h(wor)o(ds)f(in)i(sentences)f(is)g
(a)f(start)h(at)1030 3741 y(understanding)31 b(their)g(syntax.)55
b(W)-8 b(e)31 b(will)g(see)g(that)f(this)i(is)f(what)g(a)f(VMM)g(does.)
1030 3849 y(HMMs)e(operate)g(at)g(a)h(higher)g(level)f(of)h
(abstraction)f(by)h(postulating)h(additional)1030 3957
y(\223hidden\224)24 b(str)o(uctur)o(e,)g(and)g(that)h(allows)g(us)g(to)
g(look)g(at)f(the)h(or)o(der)f(of)g FC(categories)h Fy(of)1030
4065 y(wor)o(ds.)42 b(After)25 b(developing)h(the)g(theory)h(of)f(HMMs)
g(in)g(this)h(chapter)-6 b(,)27 b(we)f(look)h(at)1030
4173 y(the)c(application)f(of)g(HMMs)g(to)h(part-of-speech)d(tagging.)
31 b(The)23 b(last)f(two)h(chapters)1030 4280 y(in)d(this)f(part)g
(then)g(deal)g(with)h(the)f(pr)o(obabilistic)f(formalization)h(of)g
(cor)o(e)g(notions)i(of)1030 4388 y(grammar)f(like)h(phrase)f(str)o
(uctur)o(e.)p eop
%%Page: 294 2
294 1 bop 75 345 a FC(294)3041 b Fv(9)75 b(Markov)20
b(Models)839 621 y Fu(9.1)124 b(Markov)30 b(Models)1113
818 y Fy(Often)25 b(we)g(want)g(to)g(consider)g(a)f(sequence)h(\(per)o
(haps)f(thr)o(ough)h(time\))g(of)g(random)1113 926 y(variables)c(that)h
FC(ar)o(en')m(t)g Fy(independent,)g(but)g(rather)f(the)h(value)f(of)h
(each)g(variable)e(de-)1113 1034 y(pends)29 b(on)g(pr)o(evious)f
(elements)h(in)g(the)f(sequence.)50 b(For)28 b(many)h(such)g(systems,)i
(it)1113 1142 y(seems)23 b(r)o(easonable)d(to)j(assume)f(that)h(all)f
(we)g(need)g(to)g(pr)o(edict)f(the)h(futur)o(e)g(random)1113
1250 y(variables)j(is)i(the)f(value)g(of)g(the)g(pr)o(esent)g(random)g
(variable,)g(and)g(we)g(don't)h(need)1113 1358 y(to)g(know)g(the)g
(values)e(of)i(all)f(the)g(past)g(random)h(variables)e(in)i(the)f
(sequence.)42 b(For)1113 1466 y(example,)20 b(if)g(the)h(random)g
(variables)f(measur)o(e)f(the)i(number)g(of)g(books)g(in)h(the)e(uni-)
1113 1574 y(versity)25 b(library)-9 b(,)25 b(then,)i(knowing)f(how)g
(many)g(books)f(wer)o(e)g(in)g(the)g(library)g(today)1113
1682 y(might)j(be)e(an)h(adequate)e(pr)o(edictor)h(of)h(how)g(many)g
(books)h(ther)o(e)e(will)h(be)g(tomor)o(-)1113 1789 y(r)o(ow)-8
b(,)25 b(and)f(we)h(don't)f(r)o(eally)g(need)g(to)h(additionally)f
(know)h(how)h(many)e(books)h(the)1113 1897 y(library)c(had)f(last)h
(week,)g(let)g(alone)g(last)g(year)-6 b(.)25 b(That)c(is,)g(futur)o(e)f
(elements)i(of)f(the)g(se-)1113 2005 y(quence)k(ar)o(e)e(conditionally)
j(independent)f(of)f(past)h(elements,)g(given)g(the)g(pr)o(esent)1113
2113 y(element.)1196 2221 y(Suppose)31 b Fw(X)49 b Ft(=)42
b(\()p Fw(X)1867 2233 y Fs(1)1905 2221 y Fw(;)14 b(:)g(:)g(:)f(;)h(X)
2158 2233 y Fr(T)2210 2221 y Ft(\))32 b Fy(is)g(a)f(sequence)g(of)h
(random)f(variables)f(taking)1113 2329 y(values)21 b(in)h(some)g
(\002nite)g(set)g(S)f(=)h Fq(f)p Fw(s)2234 2341 y Fs(1)2270
2329 y Fw(;)14 b(:)g(:)g(:)g(;)g(s)2494 2341 y Fr(N)2557
2329 y Fq(g)p Fy(,)21 b(the)g(state)g(space.)27 b(Then)22
b(the)g FC(Markov)-3524 b Fz(M)t Fx(A)t(R)t(K)t(O)t(V)16
b(A)t(S)t(S)t(U)t(M)t(P)t(T)t(I)t(O)t(N)1113 2437 y FC(Pr)o(operties)21
b Fy(ar)o(e:)1113 2605 y Fp(Limited)e(Horizon:)1279 2804
y Fw(P)12 b Ft(\()p Fw(X)1445 2816 y Fr(t)p Fs(+1)1581
2804 y Ft(=)23 b Fw(s)1708 2816 y Fr(k)1749 2804 y Fq(j)p
Fw(X)1841 2816 y Fs(1)1878 2804 y Fw(;)14 b(:)g(:)g(:)f(;)h(X)2131
2816 y Fr(t)2160 2804 y Ft(\))24 b(=)e Fw(P)12 b Ft(\()p
Fw(X)2469 2816 y Fr(t)p Fs(+1)2606 2804 y Ft(=)22 b Fw(s)2732
2816 y Fr(k)2773 2804 y Fq(j)p Fw(X)2865 2816 y Fr(t)2894
2804 y Ft(\))-2097 b Fy(\(9.1\))1113 3003 y Fp(T)-5 b(ime)21
b(invariant)d(\(stationary\):)2216 3202 y Ft(=)k Fw(P)12
b Ft(\()p Fw(X)2469 3214 y Fs(2)2529 3202 y Ft(=)23 b
Fw(s)2656 3214 y Fr(k)2697 3202 y Fq(j)p Fw(X)2789 3214
y Fs(1)2826 3202 y Ft(\))-2029 b Fy(\(9.2\))1196 3401
y Fw(X)35 b Fy(is)29 b(then)h(said)e(to)h(be)g(a)f(Markov)g(chain,)j
(or)e(to)g(have)g(the)g(Markov)f(pr)o(operty)-9 b(.)1113
3509 y(One)21 b(can)g(describe)f(a)g(Markov)g(chain)h(by)g(a)f
(stochastic)h(transition)h(matrix)e Fw(A)p Fy(:)1113
3676 y Fw(a)1157 3688 y Fr(ij)1238 3676 y Ft(=)j Fw(P)12
b Ft(\()p Fw(X)1492 3688 y Fr(t)p Fs(+1)1628 3676 y Ft(=)23
b Fw(s)1755 3688 y Fr(j)1790 3676 y Fq(j)p Fw(X)1882
3688 y Fr(t)1934 3676 y Ft(=)g Fw(s)2061 3688 y Fr(i)2088
3676 y Ft(\))-1291 b Fy(\(9.3\))1113 3844 y(Her)o(e,)19
b Fw(a)1378 3856 y Fr(ij)1460 3844 y Fq(\025)k Ft(0)p
Fw(;)14 b Fq(8)p Fw(i;)g(j)23 b Fy(and)1959 3782 y Fo(P)2046
3802 y Fr(N)2046 3869 y(j)s Fs(=1)2179 3844 y Fw(a)2223
3856 y Fr(ij)2304 3844 y Ft(=)g(1)p Fw(;)14 b Fq(8)p
Fw(i)p Fy(.)1196 3952 y(Additionally)23 b(one)f(needs)h(to)g(specify)f
Ft(\005)p Fy(,)h(the)f(pr)o(obabilities)g(of)h(dif)o(fer)o(ent)d
(initial)1113 4060 y(states)h(for)f(the)h(Markov)f(chain:)1113
4227 y Fw(\031)1160 4239 y Fr(i)1211 4227 y Ft(=)j Fw(P)12
b Ft(\()p Fw(X)1465 4239 y Fs(1)1525 4227 y Ft(=)23 b
Fw(s)1652 4239 y Fr(i)1679 4227 y Ft(\))-882 b Fy(\(9.4\))1113
4395 y(Her)o(e,)1338 4333 y Fo(P)1426 4353 y Fr(N)1426
4420 y(i)p Fs(=1)1552 4395 y Fw(\031)1599 4407 y Fr(i)1655
4395 y Ft(=)29 b(1)p Fy(.)34 b(The)24 b(need)f(for)h(this)h(vector)e
(can)h(be)f(avoided)g(by)h(specifying)1113 4503 y(that)h(the)g(Markov)g
(model)g(always)g(starts)g(of)o(f)f(in)h(a)g(certain)g(extra)f(initial)
h(state,)h Fw(s)3772 4515 y Fs(0)3809 4503 y Fy(,)1113
4611 y(and)19 b(then)h(using)g(transitions)h(fr)o(om)e(that)g(state)g
(contained)g(within)i(the)e(matrix)h Fw(A)f Fy(to)1113
4719 y(specify)h(the)h(pr)o(obabilities)g(that)f(used)h(to)g(be)f(r)o
(ecor)o(ded)f(in)i Ft(\005)p Fy(.)p eop
%%Page: 295 3
295 2 bop 1030 345 a Fv(9.1)75 b(Markov)19 b(Models)1949
b FC(295)1883 842 y
 tx@Dict begin tx@NodeDict begin {5.76158 2 div 6.94444 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@M-1-1-1 11 {InitCnode
} NewNode end end
 1883 842 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  5.76158 2 div 6.94444
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end


@endspecial Fw(h)2371 831 y
 tx@Dict begin tx@NodeDict begin {5.28589 2 div 4.30554 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@M-1-1-2 11 {InitCnode
} NewNode end end
 2371 831 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  5.28589 2 div 4.30554
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fw(a)2853 823 y
 tx@Dict begin tx@NodeDict begin {5.03125 2 div 4.30554 1.94444 add
2 div 2 copy 1.94444 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@M-1-1-3
11 {InitCnode } NewNode end end
 2853 823 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  5.03125 2 div 4.30554
1.94444 add 2 div 2 copy 1.94444 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore end
 
@endspecial Fw(p)1888 1326 y
 tx@Dict begin tx@NodeDict begin {4.65627 2 div 4.30554 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@M-1-2-1 11 {InitCnode
} NewNode end end
 1888 1326 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  4.65627 2 div 4.30554
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fw(e)2377 1334
y
 tx@Dict begin tx@NodeDict begin {3.61111 2 div 6.15079 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@M-1-2-2 11 {InitCnode
} NewNode end end
 2377 1334 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.61111 2 div 6.15079
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial
Fw(t)2859 1335 y
 tx@Dict begin tx@NodeDict begin {3.44513 2 div 6.59525 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@M-1-2-3 11 {InitCnode
} NewNode end end
 2859 1335 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  3.44513 2 div 6.59525
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end


@endspecial Fw(i)2392 1798 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 3.28294 } false /N@M-1-3-2
16 {InitRnode } NewNode end end
 2392 1798 a 2392 1798 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-2
/N@M-1-2-2 InitNC { yB yA sub xB xA sub Atan dup 12.  add /AngleA ED
12.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end

2392 1798 a 2392 1798 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2392 1798 a 2392 1798 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 21.98499 6.15079
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2392
1798 a 2301 1823 a Fw(star)r(t)2392 1798 y
 tx@Dict begin PutEnd  end
 2392 1798
a 2392 1798 a
 tx@Dict begin PutEnd  end
 2392 1798 a 2392 1798 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-1
/N@M-1-2-1 InitNC { yB yA sub xB xA sub Atan dup -20.  add /AngleA
ED -20.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 2392 1798 a 2392
1798 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2392 1798 a 2392 1798 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 12.77782 6.44444
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2392 1798 a 2339 1824
a Ft(1)p Fw(:)p Ft(0)2392 1798 y
 tx@Dict begin PutEnd  end
 2392 1798 a 2392 1798
a
 tx@Dict begin PutEnd  end
 2392 1798 a 2392 1798 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-2
/N@M-1-1-1 InitNC { yB yA sub xB xA sub Atan dup 5.  add /AngleA ED
5.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 2392 1798 a 2392 1798 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2392
1798 a 2392 1798 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 12.77782 6.44444
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2392 1798 a 2339 1824 a Ft(0)p Fw(:)p
Ft(4)2392 1798 y
 tx@Dict begin PutEnd  end
 2392 1798 a 2392 1798 a
 tx@Dict begin PutEnd  end
 2392 1798 a
2392 1798 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-2
/N@M-1-2-3 InitNC { yB yA sub xB xA sub Atan dup 20.  add /AngleA ED
20.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 2392 1798 a 2392 1798 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2392 1798 a 2392
1798 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 12.77782 6.44444
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2392 1798 a 2339 1824 a Ft(0)p Fw(:)p Ft(3)2392
1798 y
 tx@Dict begin PutEnd  end
 2392 1798 a 2392 1798 a
 tx@Dict begin PutEnd  end
 2392 1798 a 2392 1798
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-3
/N@M-1-2-2 InitNC { yB yA sub xB xA sub Atan dup 20.  add /AngleA ED
20.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 2392 1798 a 2392 1798 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2392 1798 a 2392 1798 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 12.77782 6.44444
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2392
1798 a 2339 1824 a Ft(0)p Fw(:)p Ft(4)2392 1798 y
 tx@Dict begin PutEnd  end
 2392
1798 a 2392 1798 a
 tx@Dict begin PutEnd  end
 2392 1798 a 2392 1798 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-3
/N@M-1-1-3 InitNC { yB yA sub xB xA sub Atan dup -20.  add /AngleA
ED -20.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 2392 1798
a 2392 1798 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2392 1798 a 2392 1798 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 12.77782 6.44444
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2392 1798 a 2339
1824 a Ft(0)p Fw(:)p Ft(6)2392 1798 y
 tx@Dict begin PutEnd  end
 2392 1798 a 2392
1798 a
 tx@Dict begin PutEnd  end
 2392 1798 a 2392 1798 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-2
/N@M-1-1-2 InitNC { yB yA sub xB xA sub Atan dup -20.  add /AngleA
ED -20.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 2392 1798 a 2392 1798
a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2392 1798 a 2392 1798 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 12.77782 6.44444
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2392 1798 a 2339 1824 a Ft(0)p
Fw(:)p Ft(3)2392 1798 y
 tx@Dict begin PutEnd  end
 2392 1798 a 2392 1798 a
 tx@Dict begin PutEnd  end
 2392
1798 a 2392 1798 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-2
/N@M-1-1-2 InitNC { /AngleA 45.  def /AngleB 135.  def 6.  6.  NCCurve
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2392 1798 a 2392 1798 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y ED /X ED /NAngle 0 def /NCLW 0 def } ifelse /Sin
NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def /l 6.3889 def
/r 6.3889 def /h 3.1615 def /d 3.28294 def /flag true def VPutAdjust
LPutCoor end PutBegin  end
 2392 1798
a 2339 1825 a Ft(0)p Fw(:)p Ft(6)2392 1798 y
 tx@Dict begin PutEnd  end
 2392 1798
a 2392 1798 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-2
/N@M-1-1-3 InitNC { yB yA sub xB xA sub Atan dup -20.  add /AngleA
ED -20.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 2392 1798 a 2392 1798 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2392 1798 a 2392
1798 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 12.77782 6.44444
0.0 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2392 1798 a 2339 1824 a Ft(0)p Fw(:)p Ft(4)2392
1798 y
 tx@Dict begin PutEnd  end
 2392 1798 a 2392 1798 a
 tx@Dict begin PutEnd  end
 2392 1798 a 2392 1798
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-3
/N@M-1-1-3 InitNC { /AngleA 45.  def /AngleB 135.  def 6.  6.  NCCurve
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2392 1798 a 2392 1798 a
 tx@Dict begin tx@NodeDict begin /t 0.5 def tx@NodeDict /HPutPos known
{ VPutPos } { CP /Y ED /X ED /NAngle 0 def /NCLW 0 def } ifelse /Sin
NAngle sin def /Cos NAngle cos def /s 5.0 NCLW add def /l 6.3889 def
/r 6.3889 def /h 3.1615 def /d 3.28294 def /flag true def VPutAdjust
LPutCoor end PutBegin  end
 2392 1798 a 2339 1825 a Ft(1)p
Fw(:)p Ft(0)2392 1798 y
 tx@Dict begin PutEnd  end
 2392 1798 a 2392 1798 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-1
/N@M-1-2-2 InitNC { yB yA sub xB xA sub Atan dup 15.  add /AngleA ED
15.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 2392
1798 a 2392 1798 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2392 1798 a 2392 1798 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 12.77782 6.44444
0.0 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 2392 1798
a 2339 1824 a Ft(1)p Fw(:)p Ft(0)2392 1798 y
 tx@Dict begin PutEnd  end
 2392 1798
a 2392 1798 a
 tx@Dict begin PutEnd  end
 2392 1798 a 1892 2044 a Fn(Figure)17 b(9.1)76
b Fm(A)18 b(Markov)g(model.)1113 2312 y Fy(Fr)o(om)27
b(this)i(general)d(description,)j(it)f(should)g(be)f(clear)g(that)g
(the)g(wor)o(d)g Fw(n)p Fy(-gram)1030 2420 y(models)f(we)f(saw)g(in)h
(Chapter)e(6)h(ar)o(e)e(Markov)i(models.)39 b(Markov)24
b(models)i(can)f(be)1030 2528 y(used)c(whenever)h(one)g(wants)g(to)g
(model)g(the)g(pr)o(obability)f(of)h(a)f(linear)h(sequence)g(of)1030
2636 y(events.)35 b(For)24 b(example,)g(they)g(have)f(also)h(been)g
(used)g(in)g Fm(NLP)g Fy(for)f(modeling)i(valid)1030
2744 y(phone)j(sequences)f(in)h(speech)f(r)o(ecognition,)i(and)e(for)f
(sequences)i(of)f(speech)g(acts)1030 2852 y(in)21 b(dialog)g(systems.)
1113 2960 y(Alternatively)-9 b(,)29 b(one)f(can)g(r)o(epr)o(esent)e(a)i
(Markov)f(chain)h(by)g(a)g(state)g(diagram)f(as)1030
3068 y(in)d(Figur)o(e)g(9.1.)33 b(Her)o(e,)23 b(the)h(states)f(ar)o(e)f
(shown)j(as)f(cir)o(cles)f(ar)o(ound)g(the)h(state)f(name,)1030
3176 y(and)31 b(the)g(single)h(start)f(state)f(is)i(indicated)e(with)i
(an)f(incoming)i(arr)o(ow)-8 b(.)56 b(Possible)1030 3284
y(transitions)29 b(ar)o(e)e(shown)j(by)e(arr)o(ows)f(connecting)j
(states,)f(and)f(these)g(ar)o(cs)f(ar)o(e)g(la-)1030
3392 y(beled)20 b(with)h(the)f(pr)o(obability)g(of)g(this)h(transition)
g(being)g(followed,)f(given)h(that)f(you)1030 3500 y(ar)o(e)27
b(in)h(the)h(state)f(at)f(the)i(tail)f(of)g(the)g(arr)o(ow)-8
b(.)47 b(T)-7 b(ransitions)29 b(with)g(zer)o(o)e(pr)o(obability)1030
3608 y(ar)o(e)22 b(omitted)j(fr)o(om)e(the)h(diagram.)34
b(Note)24 b(that)g(the)g(pr)o(obabilities)f(of)h(the)g(outgoing)1030
3716 y(ar)o(cs)e(fr)o(om)i(each)f(state)g(sum)h(to)g(1.)33
b(Fr)o(om)24 b(this)g(r)o(epr)o(esentation,)f(it)h(should)g(be)f(clear)
1030 3823 y(that)f(a)g(Markov)g(model)h(can)f(be)g(thought)i(of)f(as)f
(a)g(\(nondeterministic\))h(\002nite)g(state)1030 3931
y(automaton)f(with)h(pr)o(obabilities)e(attached)f(to)j(each)e(ar)o(c.)
27 b(The)21 b(Markov)g(pr)o(operties)1030 4039 y(ensur)o(e)26
b(that)h(we)f(have)h(a)f(\002nite)h(state)f(automaton.)44
b(Ther)o(e)26 b(ar)o(e)f(no)i(long)h(distance)1030 4147
y(dependencies,)21 b(and)h(wher)o(e)f(one)h(ends)g(up)g(next)g(depends)
f(simply)h(on)h(what)f(state)1030 4255 y(one)f(is)g(in.)1113
4363 y(In)g(a)g(visible)g(Markov)g(model,)g(we)g(know)h(what)f(states)g
(the)g(machine)h(is)f(passing)1030 4471 y(thr)o(ough,)26
b(so)f(the)g(state)f(sequence)h(or)g(some)g(deterministic)g(function)h
(of)f(it)g(can)f(be)1030 4579 y(r)o(egar)o(ded)18 b(as)j(the)f(output.)
1113 4687 y(The)30 b(pr)o(obability)g(of)g(a)g(sequence)g(of)h(states)f
(\(that)f(is,)k(a)d(sequence)g(of)h(random)p eop
%%Page: 296 4
296 3 bop 75 345 a FC(296)3041 b Fv(9)75 b(Markov)20
b(Models)1113 617 y Fy(variables\))g Fw(X)1563 629 y
Fs(1)1600 617 y Fw(;)14 b(:)g(:)g(:)f(;)h(X)1853 629
y Fr(T)1926 617 y Fy(is)21 b(easily)g(calculated)f(for)h(a)f(Markov)g
(chain.)26 b(W)-8 b(e)21 b(\002nd)h(that)1113 725 y(we)e(need)g(mer)o
(ely)g(calculate)g(the)g(pr)o(oduct)g(of)g(the)h(pr)o(obabilities)f
(that)g(occur)g(on)h(the)1113 833 y(ar)o(cs)f(or)h(in)g(the)g
(stochastic)g(matrix:)1113 1007 y Fw(P)12 b Ft(\()p Fw(X)1279
1019 y Fs(1)1316 1007 y Fw(;)i(:)g(:)g(:)g(;)g(X)1570
1019 y Fr(T)1622 1007 y Ft(\))83 b(=)g Fw(P)12 b Ft(\()p
Fw(X)2051 1019 y Fs(1)2088 1007 y Ft(\))p Fw(P)g Ft(\()p
Fw(X)2286 1019 y Fs(2)2323 1007 y Fq(j)p Fw(X)2415 1019
y Fs(1)2452 1007 y Ft(\))p Fw(P)g Ft(\()p Fw(X)2650 1019
y Fs(3)2688 1007 y Fq(j)p Fw(X)2780 1019 y Fs(1)2817
1007 y Fw(;)i(X)2923 1019 y Fs(2)2960 1007 y Ft(\))g
Fq(\001)g(\001)g(\001)g Fw(P)e Ft(\()p Fw(X)3283 1019
y Fr(T)3335 1007 y Fq(j)p Fw(X)3427 1019 y Fs(1)3464
1007 y Fw(;)i(:)g(:)g(:)f(;)h(X)3717 1019 y Fr(T)9 b
Fl(\000)p Fs(1)3854 1007 y Ft(\))1737 1140 y(=)83 b Fw(P)12
b Ft(\()p Fw(X)2051 1152 y Fs(1)2088 1140 y Ft(\))p Fw(P)g
Ft(\()p Fw(X)2286 1152 y Fs(2)2323 1140 y Fq(j)p Fw(X)2415
1152 y Fs(1)2452 1140 y Ft(\))p Fw(P)g Ft(\()p Fw(X)2650
1152 y Fs(3)2688 1140 y Fq(j)p Fw(X)2780 1152 y Fs(2)2817
1140 y Ft(\))i Fq(\001)g(\001)g(\001)g Fw(P)e Ft(\()p
Fw(X)3140 1152 y Fr(T)3192 1140 y Fq(j)p Fw(X)3284 1152
y Fr(T)d Fl(\000)p Fs(1)3421 1140 y Ft(\))1737 1346 y(=)83
b Fw(\031)1932 1358 y Fr(X)1986 1366 y Fk(1)2037 1242
y Fr(T)9 b Fl(\000)p Fs(1)2050 1267 y Fo(Y)2049 1443
y Fr(t)p Fs(=1)2184 1346 y Fw(a)2228 1358 y Fr(X)2282
1366 y Fj(t)2310 1358 y Fr(X)2364 1366 y Fj(t)p Fk(+1)1113
1586 y Fy(So,)20 b(using)i(the)f(Markov)f(model)h(in)g(Figur)o(e)g
(9.1,)e(we)i(have:)1113 1760 y Fw(P)12 b Ft(\()p Fw(t;)i(i;)g(p)p
Ft(\))83 b(=)f Fw(P)12 b Ft(\()p Fw(X)1813 1772 y Fs(1)1873
1760 y Ft(=)23 b Fw(t)p Ft(\))p Fw(P)12 b Ft(\()p Fw(X)2189
1772 y Fs(2)2250 1760 y Ft(=)22 b Fw(i)p Fq(j)p Fw(X)2458
1772 y Fs(1)2518 1760 y Ft(=)h Fw(t)p Ft(\))p Fw(P)12
b Ft(\()p Fw(X)2834 1772 y Fs(3)2894 1760 y Ft(=)23 b
Fw(p)p Fq(j)p Fw(X)3116 1772 y Fs(2)3176 1760 y Ft(=)f
Fw(i)p Ft(\))1500 1893 y(=)82 b(1)p Fw(:)p Ft(0)18 b
Fq(\002)g Ft(0)p Fw(:)p Ft(3)f Fq(\002)h Ft(0)p Fw(:)p
Ft(6)1500 2026 y(=)82 b(0)p Fw(:)p Ft(18)1196 2200 y
Fy(Note)32 b(that)f(what)h(is)g(important)f(is)h(whether)g(we)f
FC(can)h Fy(encode)f(a)g(pr)o(ocess)g(as)g(a)1113 2308
y(Markov)d(pr)o(ocess,)h(not)h(whether)e(we)h(most)g(naturally)f(do.)49
b(For)28 b(example,)i(r)o(ecall)1113 2416 y(the)23 b
Fw(n)p Fy(-gram)f(wor)o(d)g(models)h(that)f(we)h(saw)f(in)i(Chapter)d
(6.)31 b(One)23 b(might)g(think)h(that,)1113 2524 y(for)c
Fw(n)j Fq(\025)f Ft(3)p Fy(,)e(such)g(a)g(model)g(is)h(not)g(a)e
(Markov)h(model)g(because)f(it)h(violates)h(the)f(Lim-)1113
2632 y(ited)30 b(Horizon)h(condition)h(\226)e(we)g(ar)o(e)f(looking)j
(a)e(little)h(into)g(earlier)e(history)-9 b(.)56 b(But)1113
2740 y(we)23 b(can)f(r)o(eformulate)g(any)g Fw(n)p Fy(-gram)g(model)h
(as)f(a)h(visible)g(Markov)f(model)h(by)f(sim-)1113 2848
y(ply)f(encoding)g(the)f(appr)o(opriate)e(amount)j(of)g(history)g(into)
g(the)g(state)f(space)f(\(states)1113 2956 y(ar)o(e)k(then)h
Ft(\()p Fw(n)e Fq(\000)e Ft(1\))p Fy(-grams,)k(for)g(example)g(\()p
FC(was)p Fy(,)g FC(walking)p Fy(,)g FC(down)p Fy(\))g(would)g(be)g(a)g
(state)1113 3064 y(in)k(a)f(four)o(gram)g(model\).)45
b(In)28 b(general,)g(any)g(\002xed)f(\002nite)h(amount)g(of)f(history)i
(can)1113 3172 y(always)c(be)g(encoded)g(in)h(this)g(way)f(by)g(simply)
h(elaborating)f(the)h(state)f(space)f(as)h(a)1113 3280
y(cr)o(osspr)o(oduct)20 b(of)g(multiple)h(pr)o(evious)f(states.)25
b(In)c(such)g(cases,)f(we)g(sometimes)i(talk)1113 3388
y(of)k(an)g Fw(m)1401 3358 y Fi(th)1480 3388 y FC(order)g
Fy(Markov)f(model,)j(wher)o(e)d Fw(m)h Fy(is)h(the)f(number)g(of)g(pr)o
(evious)g(states)1113 3496 y(that)33 b(we)g(ar)o(e)e(using)j(to)f(pr)o
(edict)f(the)h(next)g(state.)61 b(Note,)36 b(thus,)g(that)d(an)f
Fw(n)p Fy(-gram)1113 3604 y(model)21 b(is)g(equivalent)g(to)g(an)g
Ft(\()p Fw(n)d Fq(\000)g Ft(1\))2317 3573 y Fh(th)2395
3604 y Fy(or)o(der)i(Markov)g(model.)1113 3740 y Fn(Exercise)g(9-1)1113
3835 y Fm(Build)e(a)i(Markov)e(Model)h(similar)f(to)h(Figur)o(e)e(9.1)j
(for)f(one)g(of)g(the)h(types)f(of)g(phone)h(numbers)1113
3922 y(in)f(T)-7 b(able)19 b(4.2.)839 4133 y Fu(9.2)124
b(Hidden)29 b(Markov)h(Models)1113 4331 y Fy(In)k(an)g(HMM,)f(you)h
(don't)h(know)g(the)f(state)f(sequence)i(that)f(the)g(model)g(passes)
1113 4439 y(thr)o(ough,)21 b(but)g(only)h(some)f(pr)o(obabilistic)f
(function)i(of)f(it.)p eop
%%Page: 297 5
297 4 bop 1030 345 a Fv(9.2)75 b(Hidden)19 b(Markov)g(Models)1706
b FC(297)1906 775 y
 tx@Dict begin tx@NodeDict begin {20.45981 2 div 15.49992 10.49992
add 2 div 2 copy 10.49992 sub 4 2 roll Pyth 3.0 add 0.8 add} false
/N@M-1-1-1 11 {InitCnode } NewNode end end
 1906 775 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  20.45981 2 div 15.49992
10.49992 add 2 div 2 copy 10.49992 sub 4 2 roll Pyth 3.0 add CLW 2
div add 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore end


@endspecial -53 x Fy(Cola)1906 830 y(Pr)o(ef.)2586 775
y
 tx@Dict begin tx@NodeDict begin {36.2097 2 div 15.49992 10.49992 add
2 div 2 copy 10.49992 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@M-1-1-2
11 {InitCnode } NewNode end end
 2586 775 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  36.2097 2 div 15.49992
10.49992 add 2 div 2 copy 10.49992 sub 4 2 roll Pyth 3.0 add CLW 2
div add 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore end
 
@endspecial -53
x Fy(Iced)20 b(T)-8 b(ea)2652 830 y(Pr)o(ef.)2736 1364
y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 3.28294 } false /N@M-1-2-2
16 {InitRnode } NewNode end end
 2736 1364 a 2736 1364 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-1
/N@M-1-1-2 InitNC { yB yA sub xB xA sub Atan dup 25.  add /AngleA ED
25.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 2736 1364 a 2736 1364 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2736
1364 a 2736 1364 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 12.5 6.92993
0.21497 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add
exch } PutCoor PutBegin  end
 2736 1364 a 2684 1391 a Fy(0.3)2736
1364 y
 tx@Dict begin PutEnd  end
 2736 1364 a 2736 1364 a
 tx@Dict begin PutEnd  end
 2736 1364 a 2736 1364
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-2
/N@M-1-1-1 InitNC { yB yA sub xB xA sub Atan dup 25.  add /AngleA ED
25.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 2736 1364 a 2736 1364 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2736 1364 a 2736 1364 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 12.5 6.92993
0.21497 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add
exch } PutCoor PutBegin  end
 2736
1364 a 2684 1391 a Fy(0.5)2736 1364 y
 tx@Dict begin PutEnd  end
 2736 1364 a 2736
1364 a
 tx@Dict begin PutEnd  end
 2736 1364 a 2736 1364 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-2
/N@M-1-1-1 InitNC { yB yA sub xB xA sub Atan dup 8.  add /AngleA ED
8.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 2736 1364 a 2736 1364
a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2736 1364 a 2736 1364 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 18.87964 6.46997
0.13493 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add
exch } PutCoor PutBegin  end
 2736 1364 a 2658 1390 a FC(start)2736
1364 y
 tx@Dict begin PutEnd  end
 2736 1364 a 2736 1364 a
 tx@Dict begin PutEnd  end
 2736 1364 a 2736 1364
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-2
/N@M-1-1-2 InitNC { /AngleA 45.  def /AngleB -45.  def 6.  6.  NCCurve
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2736 1364 a 2736 1364 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2736 1364 a 2736 1364 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 12.5 6.92993
0.21497 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add
exch } PutCoor PutBegin  end
 2736
1364 a 2684 1391 a Fy(0.5)2736 1364 y
 tx@Dict begin PutEnd  end
 2736 1364 a 2736
1364 a
 tx@Dict begin PutEnd  end
 2736 1364 a 2736 1364 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-1
/N@M-1-1-1 InitNC { /AngleA -135.  def /AngleB 135.  def 6.  6.  NCCurve
 } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 2736 1364 a 2736 1364
a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2736 1364 a 2736 1364 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 12.5 6.92993
0.21497 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add
exch } PutCoor PutBegin  end
 2736 1364 a 2684 1391 a Fy(0.7)2736
1364 y
 tx@Dict begin PutEnd  end
 2736 1364 a 2736 1364 a
 tx@Dict begin PutEnd  end
 2736 1364 a 1030 1518
a Fn(Figure)22 b(9.2)75 b Fm(The)22 b(crazy)h(soft)f(drink)f(machine,)j
(showing)f(the)g(states)f(of)h(the)g(machine)g(and)1030
1617 y(the)c(state)h(transition)f(pr)o(obabilities.)1030
1860 y Fp(Example)24 b(1:)119 b Fy(Suppose)27 b(you)g(have)e(a)h(crazy)
g(soft)g(drink)h(machine:)37 b(it)27 b(can)f(be)g(in)1030
1968 y(two)21 b(states,)f(cola)h(pr)o(eferring)e(\(CP\))h(and)g(iced)g
(tea)g(pr)o(eferring)f(\(IP\),)g(but)i(it)g(switches)1030
2076 y(between)g(them)g(randomly)g(after)e(each)i(pur)o(chase,)e(as)i
(shown)h(in)f(Figur)o(e)f(1.)1113 2183 y(Now)-8 b(,)20
b(if,)g(when)g(you)g(put)f(in)h(your)g(coin,)g(the)f(machine)h(always)f
(put)h(out)g(a)e(cola)i(if)1030 2291 y(it)e(was)g(in)g(the)f(cola)h(pr)
o(eferring)e(state)h(and)h(an)f(iced)g(tea)g(when)i(it)f(was)f(in)h
(the)g(iced)f(tea)1030 2399 y(pr)o(eferring)h(state,)h(then)i(we)e
(would)h(have)f(a)g(visible)h(Markov)f(model.)26 b(But)19
b(instead,)1030 2507 y(it)f(only)i(has)e(a)g(tendency)g(to)g(do)h
(this.)25 b(So)18 b(we)g(need)g(symbol)h(emission)h(pr)o(obabilities)
1030 2615 y(for)h(the)f(observations:)1030 2762 y Fw(P)12
b Ft(\()p Fw(O)1190 2774 y Fr(t)1243 2762 y Ft(=)22 b
Fw(k)s Fq(j)p Fw(X)1468 2774 y Fr(t)1520 2762 y Ft(=)h
Fw(s)1647 2774 y Fr(i)1675 2762 y Fw(;)14 b(X)1781 2774
y Fr(t)p Fs(+1)1917 2762 y Ft(=)22 b Fw(s)2043 2774 y
Fr(j)2078 2762 y Ft(\))h(=)g Fw(b)2257 2774 y Fr(ij)s(k)1030
2908 y Fy(For)j(this)h(machine,)g(the)g(output)f(is)h(actually)e
(independent)h(of)g Fw(s)3152 2920 y Fr(j)3187 2908 y
Fy(,)h(and)f(so)g(can)g(be)1030 3016 y(described)20 b(by)h(the)f
(following)j(pr)o(obability)d(matrix:)1246 3162 y(Output)h(pr)o
(obability)f(given)h(Fr)o(om)g(state)1454 3309 y(cola)100
b(iced)20 b(tea)165 b(lemonade)1758 3417 y(ice_t)332
b(lem)1246 3525 y(CP)122 b(0.6)208 b(0.1)382 b(0.3)1261
3633 y(IP)138 b(0.1)208 b(0.7)382 b(0.2)1113 3772 y(What)25
b(is)g(the)f(pr)o(obability)h(of)f(seeing)h(the)g(output)g(sequence)g
({lem,)g(ice_t})f(if)g(the)1030 3880 y(machine)d(always)g(starts)f(of)o
(f)g(in)h(the)g(cola)g(pr)o(eferring)e(state?)1030 4108
y Fp(Solution:)81 b Fy(W)-8 b(e)23 b(need)g(to)g(consider)g(all)f
(paths)h(that)g(might)h(be)e(taken)h(thr)o(ough)g(the)1030
4216 y(HMM,)j(and)g(then)i(to)f(sum)g(over)g(them.)45
b(W)-8 b(e)27 b(know)h(the)f(machine)g(starts)g(in)g(state)1030
4324 y(CP)-11 b(.)22 b(Ther)o(e)g(ar)o(e)f(then)h(four)g(possibilities)
i(depending)e(on)h(which)g(of)f(the)h(two)g(states)1030
4432 y(the)e(machine)g(is)g(in)g(at)g(the)g(other)g(two)g(time)g
(instants.)26 b(So)21 b(the)g(total)g(pr)o(obability)f(is:)1030
4579 y Ft(0)p Fw(:)p Ft(7)e Fq(\002)g Ft(0)p Fw(:)p Ft(3)f
Fq(\002)h Ft(0)p Fw(:)p Ft(7)g Fq(\002)g Ft(0)p Fw(:)p
Ft(1)f(+)h(0)p Fw(:)p Ft(7)g Fq(\002)g Ft(0)p Fw(:)p
Ft(3)f Fq(\002)h Ft(0)p Fw(:)p Ft(3)g Fq(\002)g Ft(0)p
Fw(:)p Ft(1)82 b(+)1030 4712 y(0)p Fw(:)p Ft(3)18 b Fq(\002)g
Ft(0)p Fw(:)p Ft(3)f Fq(\002)h Ft(0)p Fw(:)p Ft(5)g Fq(\002)g
Ft(0)p Fw(:)p Ft(7)f(+)h(0)p Fw(:)p Ft(3)g Fq(\002)g
Ft(0)p Fw(:)p Ft(3)f Fq(\002)h Ft(0)p Fw(:)p Ft(5)g Fq(\002)g
Ft(0)p Fw(:)p Ft(7)82 b(=)h(0)p Fw(:)p Ft(084)p eop
%%Page: 298 6
298 5 bop 75 345 a FC(298)3041 b Fv(9)75 b(Markov)20
b(Models)1113 617 y Fn(Exercise)g(9-2)1113 713 y Fm(What)j(is)e(the)h
(pr)o(obability)f(of)h(seeing)f(the)h(output)g(sequence)g({col,lem)e(})
i(if)f(the)i(machine)g(al-)1113 799 y(ways)c(starts)f(of)o(f)g(in)h
(the)g(ice)g(tea)g(pr)o(eferring)d(state?)789 969 y Fg(9.2.1)124
b(Why)25 b(use)g(HMMs?)1113 1136 y Fy(HMMs)j(ar)o(e)g(useful)h(when)g
(one)g(can)g(think)h(of)f(underlying)g(events)g(pr)o(obabilisti-)1113
1244 y(cally)f(generating)g(surface)f(events.)48 b(One)28
b(widespr)o(ead)f(use)h(of)g(this)h(is)f(tagging)h(\226)1113
1352 y(assigning)f(parts)f(of)g(speech)g(\(or)g(other)g
(classi\002ers\))g(to)h(the)f(wor)o(ds)g(in)g(a)g(text.)44
b(W)-8 b(e)1113 1460 y(think)27 b(of)e(ther)o(e)g(being)h(an)g
(underlying)g(Markov)f(chain)h(of)g(parts)f(of)h(speech)f(fr)o(om)1113
1567 y(which)32 b(the)f(actual)g(wor)o(ds)g(of)g(the)g(text)g(ar)o(e)f
(generated.)55 b(Such)31 b(models)h(ar)o(e)e(dis-)1113
1675 y(cussed)21 b(in)g(Chapter)f(10.)1196 1783 y(When)25
b(this)h(general)e(model)h(is)g(suitable,)g(the)g(further)f(r)o(eason)g
(that)h(HMMs)f(ar)o(e)1113 1891 y(very)i(useful)g(is)h(that)g(they)f
(ar)o(e)f(one)i(of)g(a)f(class)g(of)g(models)h(for)g(which)g(ther)o(e)f
(exist)1113 1999 y(ef)o(\002cient)20 b(methods)h(of)f(training)h(thr)o
(ough)g(use)f(of)h(the)f(Expectation)g(Maximization)1113
2107 y(\(EM\))k(algorithm.)38 b(Given)26 b(plenty)f(of)g(data)f(that)h
(we)g(assume)g(to)g(be)g(generated)f(by)1113 2215 y FC(some)18
b Fy(HMM)f(\226)g(wher)o(e)g(the)g(model)h(ar)o(chitectur)o(e)e(is)i
(\002xed)f(but)h(not)g(the)g(pr)o(obabilities)1113 2323
y(on)33 b(the)g(ar)o(cs)e(\226)h(this)h(algorithm)g(allows)g(us)g(to)g
(automatically)f(learn)g(the)g(model)1113 2431 y(parameters)19
b(that)i(best)g(account)g(for)f(the)h(observed)f(data.)1196
2539 y(Another)27 b(simple)g(illustration)h(of)e(how)i(we)e(can)h(use)f
(HMMs)g(is)h(in)h(generating)1113 2647 y(parameters)k(for)h(linear)g
(interpolation)h(of)f Fw(n)p Fy(-gram)g(models.)63 b(W)-8
b(e)34 b(discussed)f(in)1113 2755 y(Chapter)20 b(6)g(that)h(one)g(way)g
(to)g(estimate)g(the)f(pr)o(obability)h(of)g(a)f(sentence:)1113
2922 y Fw(P)12 b Ft(\()p Fy(Sue)20 b(drank)h(her)f(beer)g(befor)o(e)g
(the)h(meal)f(arrived)o Ft(\))1113 3089 y Fy(was)28 b(with)g(an)g
Fw(n)p Fy(-gram)f(model,)i(such)f(as)g(a)f(trigram)g(model,)j(but)e
(that)f(just)i(using)1113 3197 y(an)20 b Fw(n)p Fy(-gram)g(model)g
(with)h(\002xed)f Fw(n)g Fy(tended)g(to)g(suf)o(fer)f(because)h(of)g
(data)f(sparseness.)1113 3305 y(Recall)i(fr)o(om)g(Section)g(6.3.1)f
(that)h(one)h(idea)e(of)h(how)i(to)e(smooth)i Fw(n)p
Fy(-gram)e(estimates)1113 3413 y(was)27 b(to)h(use)f(linear)g
(interpolation)h(of)g Fw(n)p Fy(-gram)e(estimates)i(for)f(various)g
Fw(n)p Fy(,)h(for)f(ex-)1113 3521 y(ample:)1113 3688
y Fw(P)1178 3701 y Fh(li)1216 3688 y Ft(\()p Fw(w)1307
3700 y Fr(n)1353 3688 y Fq(j)p Fw(w)1435 3700 y Fr(n)p
Fl(\000)p Fs(1)1565 3688 y Fw(;)14 b(w)1661 3700 y Fr(n)p
Fl(\000)p Fs(2)1792 3688 y Ft(\))23 b(=)g Fw(\025)1983
3700 y Fs(1)2021 3688 y Fw(P)2074 3700 y Fs(1)2111 3688
y Ft(\()p Fw(w)2202 3700 y Fr(n)2248 3688 y Ft(\))c(+)f
Fw(\025)2430 3700 y Fs(2)2468 3688 y Fw(P)2521 3700 y
Fs(2)2558 3688 y Ft(\()p Fw(w)2649 3700 y Fr(n)2695 3688
y Fq(j)p Fw(w)2777 3700 y Fr(n)p Fl(\000)p Fs(1)2908
3688 y Ft(\))g(+)g Fw(\025)3089 3700 y Fs(3)3127 3688
y Fw(P)3180 3700 y Fs(3)3218 3688 y Ft(\()p Fw(w)3309
3700 y Fr(n)3355 3688 y Fq(j)p Fw(w)3437 3700 y Fr(n)p
Fl(\000)p Fs(1)3567 3688 y Fw(;)c(w)3663 3700 y Fr(n)p
Fl(\000)p Fs(2)3794 3688 y Ft(\))1196 3855 y Fy(This)24
b(way)f(we)g(would)h(get)f(some)g(idea)g(of)g(how)h(likely)g(a)e
(particular)g(wor)o(d)h(was,)1113 3963 y(even)k(if)g(our)h(coverage)e
(of)i(trigrams)f(is)h(sparse.)44 b(The)28 b(question,)i(then,)f(is)f
(how)g(to)1113 4071 y(set)20 b(the)g(parameters)e Fw(\025)1851
4083 y Fr(i)1879 4071 y Fy(.)25 b(While)c(we)f(could)f(make)h(r)o
(easonable)f(guesses)h(as)f(to)h(what)1113 4179 y(parameter)26
b(values)h(to)g(use)h(\(and)e(we)h(know)i(that)e(together)g(they)h
(must)g(obey)f(the)1113 4287 y(stochastic)20 b(constraint)1876
4225 y Fo(P)1963 4312 y Fr(i)2005 4287 y Fw(\025)2053
4299 y Fr(i)2104 4287 y Ft(=)j(1)p Fy(\),)18 b(it)i(seems)f(that)g(we)h
(should)g(be)f(able)f(to)i(\002nd)f(the)1113 4395 y(optimal)i(values)g
(automatically)-9 b(.)25 b(And,)20 b(indeed,)g(we)h(can)f(\(Jelinek)g
(1990\).)1196 4503 y(The)c(key)h(insight)h(is)f(that)f(we)g(can)g
(build)h(an)f(HMM)g(with)h(hidden)f(states)h(that)f(r)o(ep-)1113
4611 y(r)o(esent)23 b(the)g(choice)h(of)f(whether)g(to)h(use)f(the)h
(unigram,)g(bigram,)f(or)g(trigram)h(pr)o(ob-)1113 4719
y(abilities.)32 b(The)23 b(HMM)g(training)g(algorithm)h(will)g
(determine)e(the)h(optimal)h(weight)p eop
%%Page: 299 7
299 6 bop 1030 345 a Fv(9.2)75 b(Hidden)19 b(Markov)g(Models)1706
b FC(299)1030 780 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 3.28294 } false /N@M-1-1-1
16 {InitRnode } NewNode end end
 1030 780 a 2014 780 a
 tx@Dict begin tx@NodeDict begin {16.5718 11.12733 27.69913 13.84956
3.28294 } false /N@M-1-1-3 16 {InitRnode } NewNode end end
 2014 780 a
2053 780 a
 tx@Dict begin tx@NodeDict begin {18.1738 2 div 6.94444 1.49998 add
2 div 2 copy 1.49998 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A
11 {InitCnode } NewNode end end
 2053 780 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  18.1738 2 div 6.94444
1.49998 add 2 div 2 copy 1.49998 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore end
 
@endspecial
Fw(\025)2101 792 y Fs(1)p Fr(ab)3114 780 y
 tx@Dict begin tx@NodeDict begin {20.62546 12.13544 32.7609 16.38045
3.28294 } false /N@M-1-1-4 16 {InitRnode } NewNode end end
 3114 780 a
3153 780 a
 tx@Dict begin tx@NodeDict begin {23.3593 2 div 8.49002 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode
} NewNode end end
 3153 780 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  23.3593 2 div 8.49002
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial
Fw(w)3214 750 y Fr(b)3248 780 y Fw(w)3309 750 y Fs(1)3759
780 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 3.28294 } false /N@M-1-1-5
16 {InitRnode } NewNode end end
 3759 780 a 1030 1416 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 3.28294 } false /N@M-1-2-1
16 {InitRnode } NewNode end end
 1030 1416 a 1384 1416 a
 tx@Dict begin tx@NodeDict begin {20.80122 12.3112 33.11243 16.55621
3.28294 } false /N@M-1-2-2 16 {InitRnode } NewNode end end

1384 1416 a 1423 1416 a
 tx@Dict begin tx@NodeDict begin {23.71082 2 div 8.49002 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode
} NewNode end end
 1423 1416 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  23.71082 2 div 8.49002
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end


@endspecial Fw(w)1484 1386 y Fr(a)1525 1416 y Fw(w)1586
1386 y Fr(b)2014 1416 y
 tx@Dict begin tx@NodeDict begin {16.5718 11.12733 27.69913 13.84956
3.28294 } false /N@M-1-2-3 16 {InitRnode } NewNode end end
 2014 1416 a 2053 1416 a
 tx@Dict begin tx@NodeDict begin {18.1738 2 div 6.94444 1.49998 add
2 div 2 copy 1.49998 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A
11 {InitCnode } NewNode end end
 2053
1416 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  18.1738 2 div 6.94444
1.49998 add 2 div 2 copy 1.49998 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore end
 
@endspecial Fw(\025)2101
1428 y Fs(2)p Fr(ab)3114 1416 y
 tx@Dict begin tx@NodeDict begin {20.62546 12.13544 32.7609 16.38045
3.28294 } false /N@M-1-2-4 16 {InitRnode } NewNode end end
 3114 1416 a 3153 1416
a
 tx@Dict begin tx@NodeDict begin {23.3593 2 div 8.49002 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode
} NewNode end end
 3153 1416 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  23.3593 2 div 8.49002
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial
Fw(w)3214 1386 y Fr(b)3248 1416 y Fw(w)3309 1386 y Fs(2)3759
1416 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 3.28294 } false /N@M-1-2-5
16 {InitRnode } NewNode end end
 3759 1416 a 1030 2071 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 3.28294 } false /N@M-1-3-1
16 {InitRnode } NewNode end end
 1030 2071 a 2014 2071
a
 tx@Dict begin tx@NodeDict begin {16.5718 11.12733 27.69913 13.84956
3.28294 } false /N@M-1-3-3 16 {InitRnode } NewNode end end
 2014 2071 a 2053 2071 a
 tx@Dict begin tx@NodeDict begin {18.1738 2 div 6.94444 1.49998 add
2 div 2 copy 1.49998 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A
11 {InitCnode } NewNode end end
 2053 2071 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  18.1738 2 div 6.94444
1.49998 add 2 div 2 copy 1.49998 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore end


@endspecial Fw(\025)2101 2083 y Fs(3)p Fr(ab)3096 2071
y
 tx@Dict begin tx@NodeDict begin {22.8206 14.33058 37.15118 18.57559
3.28294 } false /N@M-1-3-4 16 {InitRnode } NewNode end end
 3096 2071 a 3135 2071 a
 tx@Dict begin tx@NodeDict begin {27.74957 2 div 8.49002 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode
} NewNode end end
 3135 2071 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  27.74957 2 div 8.49002
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
end


@endspecial Fw(w)3196 2040 y Fr(b)3230 2071 y Fw(w)3291
2040 y Fr(M)3759 2071 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 3.28294 } false /N@M-1-3-5
16 {InitRnode } NewNode end end
 3759 2071 a 3759 2071 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-2
/N@M-1-1-3 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3759
2071 a 3759 2071 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 3759 2071 a 3759 2071 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 22.71173 6.94444
1.49998 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add
exch } PutCoor PutBegin  end
 3759 2071
a 3665 2093 a Fw(\017)22 b Ft(:)h Fw(\025)3815 2105 y
Fs(1)3759 2071 y
 tx@Dict begin PutEnd  end
 3759 2071 a 3759 2071 a
 tx@Dict begin PutEnd  end
 3759 2071 a
3759 2071 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-2
/N@M-1-2-3 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3759 2071 a 3759 2071 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 3759 2071 a 3759
2071 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 22.71173 6.94444
1.49998 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add
exch } PutCoor PutBegin  end
 3759 2071 a 3665 2093 a Fw(\017)f Ft(:)h Fw(\025)3815
2105 y Fs(2)3759 2071 y
 tx@Dict begin PutEnd  end
 3759 2071 a 3759 2071 a
 tx@Dict begin PutEnd  end
 3759
2071 a 3759 2071 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-2
/N@M-1-3-3 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3759 2071 a 3759 2071 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 3759 2071
a 3759 2071 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 22.71173 6.94444
1.49998 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add
exch } PutCoor PutBegin  end
 3759 2071 a 3665 2093 a Fw(\017)f Ft(:)h
Fw(\025)3815 2105 y Fs(3)3759 2071 y
 tx@Dict begin PutEnd  end
 3759 2071 a 3759
2071 a
 tx@Dict begin PutEnd  end
 3759 2071 a 3759 2071 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-3
/N@M-1-1-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3759 2071 a 3759 2071
a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 3759 2071 a 3759 2071 a
 tx@Dict begin NAngle  RotBegin  end
 3759 2071 a 3759 2071 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 37.26056 6.24
1.75 NAngle 90 add  NAngle  sub Uput exch pop add a PtoC h1 add exch
w1 add exch } PutCoor PutBegin  end
 3759
2071 a 3604 2089 a Fr(w)3654 2064 y Fk(1)3686 2089 y
Fs(:)p Fr(P)3747 2097 y Fk(1)3780 2089 y Fs(\()p Fr(w)3856
2064 y Fk(1)3888 2089 y Fs(\))3759 2071 y
 tx@Dict begin PutEnd  end
 3759 2071 a
3759 2071 a
 tx@Dict begin RotEnd  end
 3759 2071 a 3759 2071 a
 tx@Dict begin PutEnd  end
 3759 2071 a 3759
2071 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-3
/N@M-1-2-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3759 2071 a 3759 2071 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 3759 2071 a 3759 2071
a
 tx@Dict begin NAngle  RotBegin  end
 3759 2071 a 3759 2071 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 37.26056 6.24
1.75 NAngle 90 add  NAngle  sub Uput exch pop add a PtoC h1 add exch
w1 add exch } PutCoor PutBegin  end
 3759 2071 a 3604 2089 a Fr(w)3654
2064 y Fk(2)3686 2089 y Fs(:)p Fr(P)3747 2097 y Fk(1)3780
2089 y Fs(\()p Fr(w)3856 2064 y Fk(2)3888 2089 y Fs(\))3759
2071 y
 tx@Dict begin PutEnd  end
 3759 2071 a 3759 2071 a
 tx@Dict begin RotEnd  end
 3759 2071 a 3759 2071
a
 tx@Dict begin PutEnd  end
 3759 2071 a 3759 2071 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-3
/N@M-1-3-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3759 2071 a 3759 2071 a
 tx@Dict begin tx@NodeDict begin /t 0.75 def LPut end PutBegin  end
 3759
2071 a 3759 2071 a
 tx@Dict begin NAngle  RotBegin  end
 3759 2071 a 3759 2071 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 44.38556 6.43446
1.75 NAngle 90 add  NAngle  sub Uput exch pop add a PtoC h1 add exch
w1 add exch } PutCoor PutBegin  end
 3759 2071
a 3575 2090 a Fr(w)3625 2065 y Fj(M)3686 2090 y Fs(:)p
Fr(P)3747 2098 y Fk(1)3780 2090 y Fs(\()p Fr(w)3856 2065
y Fj(M)3917 2090 y Fs(\))3759 2071 y
 tx@Dict begin PutEnd  end
 3759 2071 a 3759
2071 a
 tx@Dict begin RotEnd  end
 3759 2071 a 3759 2071 a
 tx@Dict begin PutEnd  end
 3759 2071 a 3759 2071
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-3
/N@M-1-1-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3759 2071 a 3759 2071 a
 tx@Dict begin tx@NodeDict begin /t 0.25 def LPut end PutBegin  end
 3759 2071 a 3759 2071 a
 tx@Dict begin NAngle  RotBegin  end
 3759
2071 a 3759 2071 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 49.27563 6.49
1.75 NAngle 90 add  NAngle  sub Uput exch pop add a PtoC h1 add exch
w1 add exch } PutCoor PutBegin  end
 3759 2071 a 3554 2090 a Fr(w)3604
2065 y Fk(1)3636 2090 y Fs(:)p Fr(P)3697 2098 y Fk(2)3730
2090 y Fs(\()p Fr(w)3806 2065 y Fk(1)3838 2090 y Fl(j)p
Fr(w)3908 2065 y Fj(b)3937 2090 y Fs(\))3759 2071 y
 tx@Dict begin PutEnd  end
 3759
2071 a 3759 2071 a
 tx@Dict begin RotEnd  end
 3759 2071 a 3759 2071 a
 tx@Dict begin PutEnd  end
 3759 2071
a 3759 2071 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-3
/N@M-1-2-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3759 2071 a 3759 2071 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 3759 2071 a 3759
2071 a
 tx@Dict begin NAngle  RotBegin  end
 3759 2071 a 3759 2071 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 49.27563 6.49
1.75 NAngle 90 add  NAngle  sub Uput exch pop add a PtoC h1 add exch
w1 add exch } PutCoor PutBegin  end
 3759 2071 a 3554 2090
a Fr(w)3604 2065 y Fk(2)3636 2090 y Fs(:)p Fr(P)3697
2098 y Fk(2)3730 2090 y Fs(\()p Fr(w)3806 2065 y Fk(2)3838
2090 y Fl(j)p Fr(w)3908 2065 y Fj(b)3937 2090 y Fs(\))3759
2071 y
 tx@Dict begin PutEnd  end
 3759 2071 a 3759 2071 a
 tx@Dict begin RotEnd  end
 3759 2071 a 3759 2071
a
 tx@Dict begin PutEnd  end
 3759 2071 a 3759 2071 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-3
/N@M-1-3-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3759 2071 a 3759 2071 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 3759
2071 a 3759 2071 a
 tx@Dict begin NAngle  RotBegin  end
 3759 2071 a 3759 2071 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 56.40063 6.49
1.75 NAngle 90 add  NAngle  sub Uput exch pop add a PtoC h1 add exch
w1 add exch } PutCoor PutBegin  end
 3759 2071
a 3525 2090 a Fr(w)3575 2065 y Fj(M)3636 2090 y Fs(:)p
Fr(P)3697 2098 y Fk(2)3730 2090 y Fs(\()p Fr(w)3806 2065
y Fj(M)3867 2090 y Fl(j)p Fr(w)3937 2065 y Fj(b)3967
2090 y Fs(\))3759 2071 y
 tx@Dict begin PutEnd  end
 3759 2071 a 3759 2071 a
 tx@Dict begin RotEnd  end
 3759
2071 a 3759 2071 a
 tx@Dict begin PutEnd  end
 3759 2071 a 3759 2071 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-3
/N@M-1-1-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3759 2071
a 3759 2071 a
 tx@Dict begin tx@NodeDict begin /t 0.85 def LPut end PutBegin  end
 3759 2071 a 3759 2071 a
 tx@Dict begin NAngle  RotBegin  end
 3759 2071 a 3759
2071 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 61.99619 6.49
1.75 NAngle 90 sub  NAngle  sub Uput exch pop add a PtoC h1 add exch
w1 add exch } PutCoor PutBegin  end
 3759 2071 a 3501 2090 a Fr(w)3551 2065 y Fk(1)3583
2090 y Fs(:)p Fr(P)3644 2098 y Fk(3)3677 2090 y Fs(\()p
Fr(w)3753 2065 y Fk(1)3785 2090 y Fl(j)p Fr(w)3855 2065
y Fj(a)3890 2090 y Fr(;w)3960 2065 y Fj(b)3990 2090 y
Fs(\))3759 2071 y
 tx@Dict begin PutEnd  end
 3759 2071 a 3759 2071 a
 tx@Dict begin RotEnd  end
 3759 2071 a
3759 2071 a
 tx@Dict begin PutEnd  end
 3759 2071 a 3759 2071 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-3
/N@M-1-2-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3759 2071 a 3759
2071 a
 tx@Dict begin tx@NodeDict begin /t 0.3 def LPut end PutBegin  end
 3759 2071 a 3759 2071 a
 tx@Dict begin NAngle  RotBegin  end
 3759 2071 a 3759 2071
a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 61.99619 6.49
1.75 NAngle 90 sub  NAngle  sub Uput exch pop add a PtoC h1 add exch
w1 add exch } PutCoor PutBegin  end
 3759 2071 a 3501 2090 a Fr(w)3551 2065 y Fk(2)3583
2090 y Fs(:)p Fr(P)3644 2098 y Fk(3)3677 2090 y Fs(\()p
Fr(w)3753 2065 y Fk(2)3785 2090 y Fl(j)p Fr(w)3855 2065
y Fj(a)3890 2090 y Fr(;w)3960 2065 y Fj(b)3990 2090 y
Fs(\))3759 2071 y
 tx@Dict begin PutEnd  end
 3759 2071 a 3759 2071 a
 tx@Dict begin RotEnd  end
 3759 2071 a
3759 2071 a
 tx@Dict begin PutEnd  end
 3759 2071 a 3759 2071 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-3
/N@M-1-3-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3759 2071 a 3759
2071 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 3759 2071 a 3759 2071 a
 tx@Dict begin NAngle  RotBegin  end
 3759 2071 a 3759 2071
a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 69.12119 6.49
1.75 NAngle 90 sub  NAngle  sub Uput exch pop add a PtoC h1 add exch
w1 add exch } PutCoor PutBegin  end
 3759 2071 a 3472 2090 a Fr(w)3522 2065 y Fj(M)3583
2090 y Fs(:)p Fr(P)3644 2098 y Fk(3)3677 2090 y Fs(\()p
Fr(w)3753 2065 y Fj(M)3814 2090 y Fl(j)p Fr(w)3884 2065
y Fj(a)3920 2090 y Fr(;w)3990 2065 y Fj(b)4020 2090 y
Fs(\))3759 2071 y
 tx@Dict begin PutEnd  end
 3759 2071 a 3759 2071 a
 tx@Dict begin RotEnd  end
 3759 2071 a
3759 2071 a
 tx@Dict begin PutEnd  end
 3759 2071 a 3759 2071 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-1
/N@M-1-2-2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 5.0 -2
0 add DotLine  grestore  grestore end
 3759 2071 a 3759
2071 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-1
/N@M-1-2-2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 5.0 -2
0 add DotLine  grestore  grestore end
 3759 2071 a 3759 2071 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-1
/N@M-1-2-2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 5.0 -2
0 add DotLine  grestore  grestore end
 3759 2071 a 3759 2071
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-4
/N@M-1-1-5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 5.0 -2
0 add DotLine  grestore  grestore end
 3759 2071 a 3759 2071 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-4
/N@M-1-2-5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 5.0 -2
0 add DotLine  grestore  grestore end
 3759 2071 a 3759 2071 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-4
/N@M-1-3-5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 5.0 -2
0 add DotLine  grestore  grestore end
 3759
2071 a 3759 2071 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-4
/N@M-1-1-5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 5.0 -2
0 add DotLine  grestore  grestore end
 3759 2071 a 3759 2071 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-4
/N@M-1-2-5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 5.0 -2
0 add DotLine  grestore  grestore end
 3759 2071
a 3759 2071 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-4
/N@M-1-3-5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 5.0 -2
0 add DotLine  grestore  grestore end
 3759 2071 a 3759 2071 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-4
/N@M-1-1-5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 5.0 -2
0 add DotLine  grestore  grestore end
 3759 2071 a 3759
2071 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-4
/N@M-1-2-5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 5.0 -2
0 add DotLine  grestore  grestore end
 3759 2071 a 3759 2071 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-4
/N@M-1-3-5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 5.0 -2
0 add DotLine  grestore  grestore end
 3759 2071 a 3759 2071
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@M-1-2-4 /N@M-1-3-4 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 5.0 0 0 add DotLine  grestore  grestore end
 3759 2071 a 1030 2401 a Fn(Figure)c(9.3)75 b Fm(A)19
b(section)h(of)f(an)i(HMM)e(for)f(a)i(linearly)f(interpolated)g
(language)g(model.)24 b(The)1030 2500 y(notation)18 b
Ff(o)k Fe(:)f Ff(p)16 b Fm(on)h(ar)o(cs)f(means)h(that)i(this)e
(transition)g(is)f(made)g(with)i(pr)o(obability)e Ff(p)p
Fm(,)g(and)h(that)1030 2599 y(an)j Ff(o)e Fm(is)h(output)g(when)g(this)
g(transition)h(is)e(made)g(\(with)i(pr)o(obability)d(1\).)1030
2869 y Fy(to)24 b(give)f(to)g(the)g(ar)o(cs)f(entering)i(each)e(of)h
(these)h(hidden)f(states,)g(which)h(in)g(turn)f(r)o(ep-)1030
2977 y(r)o(esents)i(the)g(amount)h(of)g(the)f(pr)o(obability)g(mass)g
(that)h(should)g(be)f(determined)f(by)1030 3085 y(each)c
Fw(n)p Fy(-gram)g(model)h(via)g(setting)g(the)g(parameters)e
Fw(\025)2783 3097 y Fr(i)2832 3085 y Fy(above.)1113 3193
y(Concr)o(etely)-9 b(,)26 b(we)f(build)h(an)f(HMM)g(with)h(four)g
(states)f(for)g(each)g(wor)o(d)g(pair)-6 b(,)26 b(one)1030
3301 y(for)16 b(the)g(basic)f(wor)o(d)g(pair)-6 b(,)16
b(and)f(thr)o(ee)g(r)o(epr)o(esenting)g(each)g(choice)h(of)g
Fw(n)p Fy(-gram)f(model)1030 3409 y(for)h(calculating)h(the)g(next)f
(transition.)25 b(A)17 b(fragment)f(of)h(the)f(HMM)g(is)h(shown)h(in)f
(Fig-)1030 3517 y(ur)o(e)24 b(9.3.)36 b(Note)25 b(how)h(this)f(HMM)f
(assigns)i(the)e(same)h(pr)o(obabilities)f(as)h(the)g(earlier)1030
3625 y(equation:)g(ther)o(e)16 b(ar)o(e)g(thr)o(ee)h(ways)g(for)g
Fw(w)2328 3595 y Fr(c)2380 3625 y Fy(to)h(follow)g Fw(w)2784
3595 y Fr(a)2825 3625 y Fw(w)2886 3595 y Fr(b)2938 3625
y Fy(and)f(the)g(total)h(pr)o(obabil-)1030 3733 y(ity)g(of)f(seeing)h
Fw(w)1547 3703 y Fr(c)1599 3733 y Fy(next)f(is)h(then)g(the)g(sum)g(of)
f(each)g(of)g(the)h Fw(n)p Fy(-gram)f(pr)o(obabilities)g(that)1030
3841 y(adorn)25 b(the)h(ar)o(cs)e(multiplied)i(by)f(the)h(corr)o
(esponding)g(parameter)d Fw(\025)3267 3853 y Fr(i)3295
3841 y Fy(.)40 b(The)25 b(HMM)1030 3949 y(training)h(algorithm)f(that)g
(we)g(develop)g(in)g(this)h(chapter)e(can)h(then)g(be)g(applied)f(to)
1030 4057 y(this)19 b(network,)g(and)f(used)g(to)g(impr)o(ove)g
(initial)g(estimates)h(for)f(the)g(parameters)f Fw(\025)3633
4069 y Fr(iab)3726 4057 y Fy(.)1030 4165 y(Ther)o(e)g(ar)o(e)f(two)i
(things)h(to)f(note.)25 b(This)19 b(conversion)f(works)h(by)f(adding)f
FC(epsilon)h(tran-)-3508 b Fx(E)t(P)t(S)t(I)t(L)t(O)t(N)17
b(T)t(R)t(A)t(N)t(S)t(I)t(T)t(I)s(O)t(N)s(S)1030 4272
y FC(sitions)27 b Fy(\226)g(that)f(is)i(transitions)g(that)f(we)f(wish)
i(to)f(say)g(do)g(not)h(pr)o(oduce)d(an)i(output)1030
4380 y(symbol.)57 b(Secondly)-9 b(,)33 b(as)e(pr)o(esented,)h(we)f(now)
h(have)e(separate)g(parameters)f Fw(\025)3653 4392 y
Fr(iab)1030 4488 y Fy(for)i(each)g(wor)o(d)g(pair)-6
b(.)56 b(But)31 b(we)g(would)h(not)g(want)g(to)f(adjust)h(these)f
(parameters)1030 4596 y(separately)-9 b(,)24 b(as)g(this)i(would)f
(make)f(our)h(sparse)f(data)g(pr)o(oblem)g(worse)h(not)h(better)-6
b(.)1030 4704 y(Rather)g(,)23 b(for)f(a)g(\002xed)h Fw(i)p
Fy(,)f(we)h(wish)h(to)f(keep)f(all)h(\(or)f(at)g(least)h(classes)f
(of\))h(the)g Fw(\025)3512 4716 y Fr(iab)3628 4704 y
Fy(pa-)p eop
%%Page: 300 8
300 7 bop 75 345 a FC(300)3041 b Fv(9)75 b(Markov)20
b(Models)1060 610 y Fy(Set)g(of)h(states)773 b Fw(S)27
b Ft(=)c Fq(f)p Fw(s)2511 622 y Fs(1)2548 610 y Fw(;)14
b(:)g(:)g(:)f(s)2734 622 y Fr(N)2797 610 y Fq(g)1060
718 y Fy(Output)21 b(alphabet)595 b Fw(K)28 b Ft(=)23
b Fq(f)p Fw(k)2536 730 y Fs(1)2573 718 y Fw(;)14 b(:)g(:)g(:)f(;)h(k)
2800 730 y Fr(M)2874 718 y Fq(g)23 b Ft(=)f Fq(f)p Ft(1)p
Fw(;)14 b(:)g(:)g(:)f(;)h(M)9 b Fq(g)1060 904 y Fy(Intial)21
b(state)f(pr)o(obabilities)340 b Ft(\005)23 b(=)f Fq(f)p
Fw(\031)2525 916 y Fr(i)2553 904 y Fq(g)p Fw(;)14 b(i)22
b Fq(2)h Fw(S)1060 1011 y Fy(State)d(transition)h(pr)o(obabilities)171
b Fw(A)23 b Ft(=)f Fq(f)p Fw(a)2522 1023 y Fr(ij)2580
1011 y Fq(g)p Fw(;)14 b(i;)g(j)27 b Fq(2)d Fw(S)1060
1119 y Fy(Symbol)d(emission)h(pr)o(obabilities)100 b
Fw(B)27 b Ft(=)22 b Fq(f)p Fw(b)2519 1131 y Fr(ij)s(k)2614
1119 y Fq(g)p Fw(;)14 b(i;)g(j)27 b Fq(2)c Fw(S;)14 b(k)26
b Fq(2)d Fw(K)1060 1305 y Fy(State)d(sequence)668 b Fw(X)29
b Ft(=)23 b(\()p Fw(X)2551 1317 y Fs(1)2588 1305 y Fw(;)14
b(:)g(:)g(:)f(;)h(X)2841 1317 y Fr(T)9 b Fs(+1)2977 1305
y Ft(\))84 b Fw(X)3162 1317 y Fr(t)3214 1305 y Ft(:)23
b Fw(S)28 b Fq(7!)23 b(f)p Ft(1)p Fw(;)14 b(:)g(:)g(:)e(;)i(N)9
b Fq(g)1060 1413 y Fy(Output)21 b(sequence)578 b Fw(O)25
b Ft(=)e(\()p Fw(o)2512 1425 y Fs(1)2550 1413 y Fw(;)14
b(:)g(:)g(:)f(;)h(o)2774 1425 y Fr(T)2827 1413 y Ft(\))83
b Fw(o)2982 1425 y Fr(t)3035 1413 y Fq(2)23 b Fw(K)1694
1591 y Fn(T)-8 b(able)19 b(9.1)75 b Fm(Notation)19 b(used)f(in)h(the)h
(HMM)e(chapter)-6 b(.)1113 1861 y Fy(rameters)22 b(having)g(the)h(same)
f(value,)f(which)i(we)g(do)f(by)g(using)h FC(tied)f(states)p
Fy(.)30 b(Discus-)1113 1969 y(sion)24 b(of)g(both)g(of)f(these)h
(extensions)g(to)g(the)g(basic)f(HMM)f(model)i(will)g(be)f(deferr)o(ed)
1113 2077 y(to)e(Section)g(9.4.)789 2329 y Fg(9.2.2)124
b(General)24 b(form)h(of)g(an)f(HMM)1113 2496 y Fy(An)17
b(HMM)f(is)h(speci\002ed)g(by)g(a)f(\002ve-tuple)g(\()p
Fw(S)5 b Fy(,)17 b Fw(K)6 b Fy(,)17 b Ft(\005)p Fy(,)h
Fw(A)p Fy(,)f Fw(B)t Fy(\),)g(wher)o(e)g Fw(S)k Fy(and)c
Fw(K)22 b Fy(ar)o(e)15 b(the)1113 2604 y(set)21 b(of)g(states)f(and)h
(the)g(output)g(alphabet,)e(and)i Ft(\005)p Fy(,)g Fw(A)p
Fy(,)f(and)h Fw(B)k Fy(ar)o(e)19 b(the)i(pr)o(obabilities)1113
2712 y(for)29 b(the)g(initial)g(state,)h(state)f(transitions,)i(and)e
(symbol)h(emissions,)i(r)o(espectively)-9 b(.)1113 2819
y(The)26 b(notation)i(that)e(we)g(use)g(in)h(this)g(chapter)e(is)i
(summarized)e(in)i(T)-8 b(able)26 b(9.1.)41 b(The)1113
2927 y(random)24 b(variables)e Fw(X)1853 2939 y Fr(t)1906
2927 y Fy(map)h(fr)o(om)g(state)h(names)f(to)h(corr)o(esponding)g
(integers.)34 b(In)1113 3035 y(the)24 b(version)g(pr)o(esented)e(her)o
(e,)h(the)h(symbol)g(emitted)g(at)f(time)g Fw(t)h Fy(depends)f(on)h
(both)1113 3143 y(the)e(state)f(at)g(time)h Fw(t)g Fy(and)f(at)g(time)h
Fw(t)d Ft(+)g(1)p Fy(.)28 b(This)22 b(is)g(sometimes)h(called)e(a)g
FC(ar)o(c-emission)-3483 b Fx(A)t(R)t(C)t Fz(-)t Fx(E)t(M)t(I)t(S)t(S)t
(I)s(O)s(N)15 b Fz(H)t(M)t(M)1113 3251 y FC(HMM)p Fy(,)32
b(because)f(we)i(can)e(think)j(of)e(the)g(symbol)h(as)f(coming)h(of)o
(f)f(the)g(ar)o(c,)h(as)f(in)1113 3359 y(Figur)o(e)23
b(9.3.)33 b(An)24 b(alternative)e(formulation)j(is)f(a)f
FC(state-emission)h(HMM)p Fy(,)f(wher)o(e)g(the)-3533
b Fx(S)t(TAT)t(E)t Fz(-)t Fx(E)t(M)t(I)t(S)s(S)s(I)s(O)s(N)15
b Fz(H)t(M)t(M)1113 3467 y Fy(symbol)24 b(emitted)f(at)g(time)g
Fw(t)g Fy(depends)f(just)i(on)g(the)f(state)g(at)f(time)i
Fw(t)p Fy(.)32 b(The)23 b(HMM)f(in)1113 3575 y(Example)28
b(1)g(is)h(a)g(state-emission)g(HMM.)49 b(But)29 b(we)f(can)h(also)g(r)
o(egar)o(d)d(it)j(as)g(a)f(ar)o(c-)1113 3683 y(emission)j(HMM)e(by)h
(simply)h(setting)f(up)g(the)g Fw(b)2717 3695 y Fr(ij)s(k)2841
3683 y Fy(parameters)e(so)j(that)e Fq(8)p Fw(k)3661 3653
y Fl(0)3684 3683 y Fw(;)14 b(k)3767 3653 y Fl(00)3809
3683 y Fy(,)1113 3791 y Fw(b)1149 3803 y Fr(ij)s(k)1238
3787 y Fd(0)1289 3791 y Ft(=)23 b Fw(b)1413 3803 y Fr(ij)s(k)1502
3787 y Fd(00)1549 3791 y Fy(.)i(This)c(is)g(discussed)g(further)f(in)i
(Section)e(9.4.)1196 3899 y(Given)f(a)f(speci\002cation)h(of)f(an)g
(HMM,)f(it)i(is)g(perfectly)e(straightforwar)o(d)g(to)i(simu-)1113
4007 y(late)i(the)h(r)o(unning)h(of)e(a)g(Markov)g(pr)o(ocess,)g(and)g
(to)h(pr)o(oduce)e(an)i(output)g(sequence.)1113 4115
y(One)28 b(can)g(do)g(it)g(with)h(the)f(pr)o(ogram)g(in)g(Figur)o(e)g
(9.4.)46 b(However)-6 b(,)29 b(by)f(itself,)i(doing)1113
4223 y(this)22 b(is)g(not)g(terribly)f(inter)o(esting.)27
b(The)22 b(inter)o(est)f(in)g(HMMs)g(comes)h(fr)o(om)f
FC(assuming)1113 4330 y Fy(that)30 b(some)g(set)g(of)g(data)f(was)h
(generated)f(by)h(a)f(HMM,)g(and)g(then)i(being)f(able)f(to)1113
4438 y(calculate)20 b(pr)o(obabilities)g(and)g(pr)o(obable)g
(underlying)h(state)g(sequences.)p eop
%%Page: 301 9
301 8 bop 1030 345 a Fv(9.3)75 b(The)19 b(Thr)o(ee)f(Fundamental)g
(Questions)g(for)g(HMMs)1028 b FC(301)1125 610 y Fi(1)42
b Fw(t)23 b Ft(:=)g(1;)1125 718 y Fi(2)42 b Fy(Start)20
b(in)h(state)f Fw(s)1712 730 y Fr(i)1761 718 y Fy(with)h(pr)o
(obability)g Fw(\031)2424 730 y Fr(i)2472 718 y Fy(\(i.e.,)f
Fw(X)7 b Ft(1)22 b(=)g Fw(i)p Fy(\))1125 826 y Fi(3)42
b Fp(forever)p 1196 839 273 4 v 42 w(do)p 1510 839 97
4 v 1125 934 a Fi(4)335 b Fy(Move)20 b(fr)o(om)h(state)f
Fw(s)2149 946 y Fr(i)2197 934 y Fy(to)h(state)g Fw(s)2521
946 y Fr(j)2576 934 y Fy(with)h(pr)o(obabilitiy)f Fw(a)3261
946 y Fr(ij)3340 934 y Fy(\(i.e.,)e Fw(X)3583 946 y Fr(t)p
Fs(+1)3719 934 y Ft(=)k Fw(j)5 b Fy(\))1125 1042 y Fi(5)335
b Fy(Emit)21 b(observation)g(symbol)h Fw(o)2469 1054
y Fr(t)2521 1042 y Ft(=)h Fw(k)h Fy(with)d(pr)o(obability)g
Fw(b)3328 1054 y Fr(ij)s(k)1125 1149 y Fi(6)335 b Fw(t)23
b Ft(:=)g Fw(t)18 b Ft(+)g(1)1125 1257 y Fi(7)42 b Fp(od)p
1196 1270 V 1635 1531 a Fn(Figure)18 b(9.4)75 b Fm(A)19
b(pr)o(ogram)e(for)h(a)h(Markov)f(pr)o(ocess.)756 1805
y Fu(9.3)124 b(The)29 b(Three)g(Fundamental)h(Questions)g(for)f(HMMs)
1030 2002 y Fy(Ther)o(e)j(ar)o(e)g(thr)o(ee)g(fundamental)g(questions)j
(that)e(we)g(want)g(to)h(know)g(about)f(an)1030 2110
y(HMM:)1092 2285 y(1.)41 b(Given)32 b(a)f(model)h Fw(\026)43
b Ft(=)f(\()p Fw(A;)14 b(B)t(;)g Ft(\005\))p Fy(,)35
b(how)e(do)e(we)h(ef)o(\002ciently)f(compute)h(how)1196
2393 y(likely)21 b(a)g(certain)f(observation)h(is,)g(that)f(is)i
Fw(P)12 b Ft(\()p Fw(O)r Fq(j)p Fw(\026)p Ft(\))p Fy(?)1092
2567 y(2.)41 b(Given)23 b(the)g(observation)g(sequence)g
Fw(O)j Fy(and)c(a)g(model)h Fw(\026)p Fy(,)g(how)h(do)f(we)g(choose)
1196 2675 y(a)d(state)h(sequence)g Ft(\()p Fw(X)1908
2687 y Fs(1)1945 2675 y Fw(;)14 b(:)g(:)g(:)g(;)g(X)2199
2687 y Fr(T)9 b Fs(+1)2335 2675 y Ft(\))21 b Fy(that)f(best)h(explains)
g(the)g(observations?)1092 2849 y(3.)41 b(Given)36 b(an)f(observation)h
(sequence)f Fw(O)r Fy(,)40 b(and)34 b(a)h(space)g(of)g(possible)h
(models)1196 2957 y(found)31 b(by)g(varying)g(the)h(model)f(parameters)
f Fw(\026)42 b Ft(=)g(\()p Fw(A;)14 b(B)t(;)g(\031)s
Ft(\))p Fy(,)34 b(how)e(do)g(we)1196 3065 y(\002nd)21
b(the)g(model)g(that)g(best)f(explains)h(the)g(observed)f(data?)1030
3239 y(Normally)-9 b(,)26 b(the)f(pr)o(oblems)g(we)g(deal)f(with)i(ar)o
(e)e(not)i(like)f(the)g(soft)g(drink)h(machine.)1030
3347 y(W)-8 b(e)16 b(don't)g(know)h(the)f(parameters)f(and)g(have)g(to)
i(estimate)e(them)h(fr)o(om)g(data.)23 b(That's)1030
3455 y(the)16 b(thir)o(d)g(question.)25 b(The)16 b(\002rst)h(question)g
(can)f(be)g(used)g(to)g(decide)f(between)h(models)1030
3563 y(which)25 b(is)g(best.)36 b(The)24 b(second)g(question)i(lets)f
(us)f(guess)h(what)f(path)g(was)g(pr)o(obably)1030 3671
y(followed)f(thr)o(ough)g(the)f(Markov)g(chain,)h(and)f(this)h(hidden)f
(path)g(can)h(be)f(used)g(for)1030 3779 y(classi\002cation,)j(for)f
(instance)g(in)g(applications)h(to)f(part)f(of)h(speech)g(tagging,)h
(as)f(we)1030 3887 y(see)d(in)g(Chapter)f(10.)706 4139
y Fg(9.3.1)124 b(Finding)26 b(the)e(probability)i(of)f(an)g
(observation)1030 4306 y Fy(Given)16 b(the)g(observation)g(sequence)g
Fw(O)26 b Ft(=)d(\()p Fw(o)2448 4318 y Fs(1)2485 4306
y Fw(;)14 b(:)g(:)g(:)g(;)g(o)2710 4318 y Fr(T)2762 4306
y Ft(\))i Fy(and)g(a)f(model)h Fw(\026)23 b Ft(=)g(\()p
Fw(A;)14 b(B)t(;)g Ft(\005\))p Fy(,)1030 4414 y(we)i(wish)h(to)g(know)g
(how)g(to)g(ef)o(\002ciently)f(compute)g Fw(P)c Ft(\()p
Fw(O)r Fq(j)p Fw(\026)p Ft(\))17 b Fy(\226)f(the)h(pr)o(obability)e(of)
h(the)1030 4522 y(observation)26 b(given)g(the)f(model.)40
b(This)27 b(pr)o(ocess)e(is)h(often)f(r)o(eferr)o(ed)e(to)j(as)f
(\223decod-)1030 4630 y(ing\224.)p eop
%%Page: 302 10
302 9 bop 75 345 a FC(302)3041 b Fv(9)75 b(Markov)20
b(Models)1196 617 y Fy(For)h(any)g(state)f(sequence)h
Fw(X)30 b Ft(=)22 b(\()p Fw(X)2333 629 y Fs(1)2370 617
y Fw(;)14 b(:)g(:)g(:)g(;)g(X)2624 629 y Fr(T)9 b Fs(+1)2760
617 y Ft(\))p Fy(,)1113 861 y Fw(P)j Ft(\()p Fw(O)r Fq(j)p
Fw(X)r(;)i(\026)p Ft(\))84 b(=)1750 757 y Fr(T)1721 782
y Fo(Y)1719 958 y Fr(t)p Fs(=1)1842 861 y Fw(P)12 b Ft(\()p
Fw(o)1979 873 y Fr(t)2009 861 y Fq(j)p Fw(X)2101 873
y Fr(t)2130 861 y Fw(;)i(X)2236 873 y Fr(t)p Fs(+1)2349
861 y Fw(;)g(\026)p Ft(\))-1639 b Fy(\(9.5\))1572 1057
y Ft(=)82 b Fw(b)1755 1069 y Fr(X)1809 1077 y Fk(1)1842
1069 y Fr(X)1896 1077 y Fk(2)1929 1069 y Fr(o)1962 1077
y Fk(1)1998 1057 y Fw(b)2034 1069 y Fr(X)2088 1077 y
Fk(2)2121 1069 y Fr(X)2175 1077 y Fk(3)2207 1069 y Fr(o)2240
1077 y Fk(2)2291 1057 y Fq(\001)14 b(\001)g(\001)f Fw(b)2437
1069 y Fr(X)2491 1077 y Fj(T)2537 1069 y Fr(X)2591 1077
y Fj(T)7 b Fk(+1)2708 1069 y Fr(o)2741 1077 y Fj(T)1113
1226 y Fy(and,)1113 1394 y Fw(P)12 b Ft(\()p Fw(X)7 b
Fq(j)p Fw(\026)p Ft(\))23 b(=)g Fw(\031)1549 1406 y Fr(X)1603
1414 y Fk(1)1640 1394 y Fw(a)1684 1406 y Fr(X)1738 1414
y Fk(1)1771 1406 y Fr(X)1825 1414 y Fk(2)1862 1394 y
Fw(a)1906 1406 y Fr(X)1960 1414 y Fk(2)1992 1406 y Fr(X)2046
1414 y Fk(3)2097 1394 y Fq(\001)14 b(\001)g(\001)g Fw(a)2252
1406 y Fr(X)2306 1414 y Fj(T)2352 1406 y Fr(X)2406 1414
y Fj(T)7 b Fk(+1)829 1394 y Fy(\(9.6\))1113 1562 y(Now)-8
b(,)1113 1731 y Fw(P)12 b Ft(\()p Fw(O)r(;)i(X)7 b Fq(j)p
Fw(\026)p Ft(\))23 b(=)g Fw(P)12 b Ft(\()p Fw(O)r Fq(j)p
Fw(X)r(;)i(\026)p Ft(\))p Fw(P)e Ft(\()p Fw(X)7 b Fq(j)p
Fw(\026)p Ft(\))-1428 b Fy(\(9.7\))1113 1899 y(Ther)o(efor)o(e,)1113
2067 y Fw(P)12 b Ft(\()p Fw(O)r Fq(j)p Fw(\026)p Ft(\))84
b(=)1612 1988 y Fo(X)1642 2167 y Fr(X)1746 2067 y Fw(P)12
b Ft(\()p Fw(O)r Fq(j)p Fw(X)r(;)i(\026)p Ft(\))p Fw(P)e
Ft(\()p Fw(X)7 b Fq(j)p Fw(\026)p Ft(\))-1570 b Fy(\(9.8\))1464
2360 y Ft(=)1710 2281 y Fo(X)1612 2459 y Fr(X)1666 2467
y Fk(1)1699 2459 y Fl(\001\001\001)o Fr(X)1812 2467 y
Fj(T)7 b Fk(+1)1943 2360 y Fw(\031)1990 2372 y Fr(X)2044
2380 y Fk(1)2126 2256 y Fr(T)2097 2281 y Fo(Y)2095 2457
y Fr(t)p Fs(=1)2218 2360 y Fw(a)2262 2372 y Fr(X)2316
2380 y Fj(t)2344 2372 y Fr(X)2398 2380 y Fj(t)p Fk(+1)2501
2360 y Fw(b)2537 2372 y Fr(X)2591 2380 y Fj(t)2619 2372
y Fr(X)2673 2380 y Fj(t)p Fk(+1)2772 2372 y Fr(o)2805
2380 y Fj(t)1196 2611 y Fy(This)34 b(derivation)g(is)g(quite)g
(straightforwar)o(d.)63 b(It)34 b(is)g(what)g(we)g(did)f(in)i(Exam-)
1113 2719 y(ple)e(1)f(to)i(work)f(out)g(the)h(pr)o(obability)e(of)h(an)
g(observation)g(sequence.)62 b(W)-8 b(e)33 b(sim-)1113
2827 y(ply)18 b(summed)h(the)f(pr)o(obability)f(of)h(the)g(observation)
g(occurring)h(accor)o(ding)e(to)h(each)1113 2935 y(possible)k(state)f
(sequence.)28 b(But,)21 b(unfortunately)-9 b(,)21 b(dir)o(ect)f
(evaluation)i(of)f(the)g(r)o(esult-)1113 3043 y(ing)30
b(expr)o(ession)g(is)g(hopelessly)g(inef)o(\002cient.)52
b(For)30 b(the)g(general)f(case)g(\(wher)o(e)f(one)1113
3151 y(can)23 b(start)g(in)h(any)f(state,)h(and)f(move)g(to)h(any)f
(other)h(at)f(each)g(step\),)g(the)h(calculation)1113
3259 y(r)o(equir)o(es)c Ft(\(2)p Fw(T)29 b Ft(+)18 b(1\))g
Fq(\001)h Fw(N)1877 3229 y Fr(T)9 b Fs(+1)2034 3259 y
Fy(multiplications.)1113 3391 y Fn(Exercise)20 b(9-3)1113
3486 y Fm(Con\002rm)f(this)g(claim.)1196 3639 y Fy(The)d(secr)o(et)f
(to)h(avoiding)g(this)g(complexity)h(is)f(the)g(general)f(technique)h
(of)g FC(dynamic)-3615 b Fx(D)t(Y)t(N)t(A)t(M)t(I)t(C)17
b(P)t(R)t(O)t(G)t(R)t(A)t(M)t(M)t(I)t(N)s(G)1113 3747
y FC(pr)o(ogramming)24 b Fy(or)j FC(memoization)f Fy(by)g(which)i(we)f
(r)o(emember)e(partial)h(r)o(esults)g(rather)-3277 b
Fx(M)t(E)t(M)t(O)t(I)t(Z)t(AT)t(I)t(O)s(N)1113 3855 y
Fy(than)35 b(r)o(ecomputing)g(them.)68 b(This)36 b(general)e(concept)h
(cr)o(ops)f(up)h(in)g(many)g(other)1113 3963 y(places)18
b(in)h(computational)g(linguistics,)h(such)f(as)f(chart)g(parsing,)h
(and)f(in)h(computer)1113 4071 y(science)g(mor)o(e)h(generally)f(\(see)
g(\(Cormen)g(et)g(al.)g(1990:)e(Ch.)j(16\))e(for)h(a)g(general)g(intr)o
(o-)1113 4179 y(duction\).)30 b(For)23 b(algorithms)g(such)f(as)g
Fm(HMM)p Fy(s,)g(the)h(dynamic)f(pr)o(ogramming)h(pr)o(ob-)1113
4287 y(lem)i(is)h(generally)f(described)f(in)i(terms)f(of)g(tr)o
(ellises)g(\(also)g(called)g(lattices\).)38 b(Her)o(e,)1113
4395 y(we)24 b(make)f(a)g(squar)o(e)g(array)g(of)g(states)h(versus)f
(time,)i(and)e(compute)h(the)g(pr)o(obabili-)1113 4503
y(ties)18 b(of)g(being)h(at)e(each)h(state)f(at)h(each)g(time)g(in)g
(terms)h(of)f(the)g(pr)o(obabilities)f(for)h(being)1113
4611 y(in)24 b(each)e(state)h(at)g(the)g(pr)o(eceding)f(time)i
(instant.)33 b(This)24 b(is)f(all)g(best)g(seen)h(in)f(pictur)o(es)1113
4719 y(\226)j(see)h(Figur)o(es)f(9.5)f(and)h(9.6.)42
b(A)27 b(tr)o(ellis)f(can)g(r)o(ecor)o(d)f(the)i(pr)o(obability)f(of)h
(all)f(initial)p eop
%%Page: 303 11
303 10 bop 1030 345 a Fv(9.3)75 b(The)19 b(Thr)o(ee)f(Fundamental)g
(Questions)g(for)g(HMMs)1028 b FC(303)1432 661 y
 tx@Dict begin tx@NodeDict begin {4.30554 1.49998 9.17363 4.5868 3.28294
} false /N@M-1-1-2 16 {InitRnode } NewNode end end
 1432
661 a Fw(s)1471 673 y Fs(1)1710 661 y
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 3.28294 } false /N@M-1-1-3
16 {InitRnode } NewNode end end
 1710 661 a 1741
661 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode } NewNode
end end
 1741 661 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial
2127 661 a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 3.28294 } false /N@M-1-1-4
16 {InitRnode } NewNode end end
 2127 661 a 2159 661 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode } NewNode
end end
 2159 661 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 2641 661 a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 3.28294 } false /N@M-1-1-5
16 {InitRnode } NewNode end end
 2641 661 a 2672 661
a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode } NewNode
end end
 2672 661 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 3578
661 a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 3.28294 } false /N@M-1-1-7
16 {InitRnode } NewNode end end
 3578 661 a 3610 661 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode } NewNode
end end
 3610 661 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 1432 1124 a
 tx@Dict begin tx@NodeDict begin {4.30554 1.49998 9.17363 4.5868 3.28294
} false /N@M-1-2-2 16 {InitRnode } NewNode end end
 1432 1124 a Fw(s)1471
1136 y Fs(2)1710 1124 y
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 3.28294 } false /N@M-1-2-3
16 {InitRnode } NewNode end end
 1710 1124 a 1741 1124 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode } NewNode
end end
 1741
1124 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 2127 1124
a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 3.28294 } false /N@M-1-2-4
16 {InitRnode } NewNode end end
 2127 1124 a 2159 1124 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode } NewNode
end end
 2159 1124 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end


@endspecial 2641 1124 a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 3.28294 } false /N@M-1-2-5
16 {InitRnode } NewNode end end
 2641 1124 a 2672 1124 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode } NewNode
end end
 2672
1124 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 3578 1124
a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 3.28294 } false /N@M-1-2-7
16 {InitRnode } NewNode end end
 3578 1124 a 3610 1124 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode } NewNode
end end
 3610 1124 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end


@endspecial 1065 1586 a
 tx@Dict begin tx@NodeDict begin {6.92993 0.21497 0.0 0.0 3.28294 }
false /N@M-1-3-1 16 {InitRnode } NewNode end end
 1065 1586 a Fy(State)1450 1586
y
 tx@Dict begin tx@NodeDict begin {6.44444 0.0 5.00002 2.5 3.28294 }
false /N@M-1-3-2 16 {InitRnode } NewNode end end
 1450 1586 a Ft(3)1710 1586 y
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 3.28294 } false /N@M-1-3-3
16 {InitRnode } NewNode end end
 1710 1586 a 1741 1586
a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode } NewNode
end end
 1741 1586 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial
2127 1586 a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 3.28294 } false /N@M-1-3-4
16 {InitRnode } NewNode end end
 2127 1586 a 2159 1586 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode } NewNode
end end
 2159 1586 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 2641 1586 a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 3.28294 } false /N@M-1-3-5
16 {InitRnode } NewNode end end
 2641 1586 a 2672
1586 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode } NewNode
end end
 2672 1586 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial
3578 1586 a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 3.28294 } false /N@M-1-3-7
16 {InitRnode } NewNode end end
 3578 1586 a 3610 1586 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode } NewNode
end end
 3610 1586 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 1065 2048 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 3.28294 } false /N@M-1-4-1
16 {InitRnode } NewNode end end
 1065 2048 a 1420
2510 a
 tx@Dict begin tx@NodeDict begin {4.30554 1.49998 12.27223 6.13611
3.28294 } false /N@M-1-5-2 16 {InitRnode } NewNode end end
 1420 2510 a Fw(s)1459 2522 y Fr(N)1710 2510 y
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 3.28294 } false /N@M-1-5-3
16 {InitRnode } NewNode end end

1710 2510 a 1741 2510 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode } NewNode
end end
 1741 2510 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end


@endspecial 2127 2510 a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 3.28294 } false /N@M-1-5-4
16 {InitRnode } NewNode end end
 2127 2510 a 2159 2510 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode } NewNode
end end
 2159
2510 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 2641 2510
a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 3.28294 } false /N@M-1-5-5
16 {InitRnode } NewNode end end
 2641 2510 a 2672 2510 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode } NewNode
end end
 2672 2510 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end


@endspecial 3578 2510 a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 3.28294 } false /N@M-1-5-7
16 {InitRnode } NewNode end end
 3578 2510 a 3610 2510 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode } NewNode
end end
 3610
2510 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 1721 2778
a
 tx@Dict begin tx@NodeDict begin {6.44444 0.0 5.00002 2.5 3.28294 }
false /N@M-1-6-3 16 {InitRnode } NewNode end end
 1721 2778 a Ft(1)2138 2778 y
 tx@Dict begin tx@NodeDict begin {6.44444 0.0 5.00002 2.5 3.28294 }
false /N@M-1-6-4 16 {InitRnode } NewNode end end
 2138 2778 a Ft(2)2545
2778 y
 tx@Dict begin tx@NodeDict begin {6.92993 14.64484 30.72084 15.36041
3.28294 } false /N@M-1-6-5 16 {InitRnode } NewNode end end
 2545 2778 a Fy(3)2545 2886 y(T)-5 b(ime,)21 b
Fw(t)3508 2778 y
 tx@Dict begin tx@NodeDict begin {6.83331 0.83333 24.4548 12.2274 3.28294
} false /N@M-1-6-7 16 {InitRnode } NewNode end end
 3508 2778 a Fw(T)30 b Ft(+)18 b(1)3712
2778 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@M-1-3-2 /N@M-1-5-2 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 5.0 0 0 add DotLine  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@M-1-3-3 /N@M-1-5-3 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 5.0 0 0 add DotLine  grestore  grestore end
 3712 2778 a 3712 2778
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@M-1-3-4 /N@M-1-5-4 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 5.0 0 0 add DotLine  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@M-1-3-6 /N@M-1-5-6 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 5.0 0 0 add DotLine  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@M-1-3-7 /N@M-1-5-7 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 5.0 0 0 add DotLine  grestore  grestore end
 3712
2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-3
/N@M-1-1-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-3
/N@M-1-2-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778
a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-3
/N@M-1-3-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-3
/N@M-1-5-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778 a 3712
2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-3
/N@M-1-1-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-3
/N@M-1-2-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778 a 3712 2778
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-3
/N@M-1-3-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-3
/N@M-1-5-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-3
/N@M-1-1-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712
2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-3
/N@M-1-2-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-3
/N@M-1-3-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778
a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-3
/N@M-1-5-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-5-3
/N@M-1-1-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778 a 3712
2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-5-3
/N@M-1-2-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-5-3
/N@M-1-3-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778 a 3712 2778
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-5-3
/N@M-1-5-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-4
/N@M-1-1-5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-4
/N@M-1-2-5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712
2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-4
/N@M-1-3-5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-4
/N@M-1-5-5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778
a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-4
/N@M-1-1-5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-4
/N@M-1-2-5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778 a 3712
2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-4
/N@M-1-3-5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-4
/N@M-1-5-5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778 a 3712 2778
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-4
/N@M-1-1-5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-4
/N@M-1-2-5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-4
/N@M-1-3-5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712
2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-4
/N@M-1-5-5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-5-4
/N@M-1-1-5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778
a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-5-4
/N@M-1-2-5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-5-4
/N@M-1-3-5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778 a 3712
2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-5-4
/N@M-1-5-5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-5
/N@M-1-1-7 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 3.0 -2
0 add DotLine  grestore  grestore end
 3712 2778 a 3712 2778
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-5
/N@M-1-2-7 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 3.0 -2
0 add DotLine  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-5
/N@M-1-3-7 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 3.0 -2
0 add DotLine  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-5
/N@M-1-5-7 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 3.0 -2
0 add DotLine  grestore  grestore end
 3712
2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-5
/N@M-1-1-7 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 3.0 -2
0 add DotLine  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-5
/N@M-1-2-7 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 3.0 -2
0 add DotLine  grestore  grestore end
 3712 2778
a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-5
/N@M-1-3-7 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 3.0 -2
0 add DotLine  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-5
/N@M-1-5-7 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 3.0 -2
0 add DotLine  grestore  grestore end
 3712 2778 a 3712
2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-5
/N@M-1-1-7 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 3.0 -2
0 add DotLine  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-5
/N@M-1-2-7 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 3.0 -2
0 add DotLine  grestore  grestore end
 3712 2778 a 3712 2778
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-5
/N@M-1-3-7 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 3.0 -2
0 add DotLine  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-5
/N@M-1-5-7 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 3.0 -2
0 add DotLine  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-5-5
/N@M-1-1-7 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 3.0 -2
0 add DotLine  grestore  grestore end
 3712
2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-5-5
/N@M-1-2-7 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 3.0 -2
0 add DotLine  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-5-5
/N@M-1-3-7 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 3.0 -2
0 add DotLine  grestore  grestore end
 3712 2778
a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-5-5
/N@M-1-5-7 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 3.0 -2
0 add DotLine  grestore  grestore end
 3712 2778 a 3712 2778 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-5
/N@M-1-5-7 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 3.0 -2
0 add DotLine  grestore  grestore end
 3712 2778 a 1030
3128 a Fn(Figure)27 b(9.5)75 b Fm(T)-7 b(r)o(ellis)26
b(algorithms:)41 b(The)29 b(tr)o(ellis.)49 b(The)28 b(tr)o(ellis)f(is)g
(a)i(squar)o(e)e(array)g(of)h(states)1030 3227 y(versus)22
b(times.)34 b(A)22 b(node)h(at)g Fe(\()p Ff(s)1921 3235
y Fc(i)1947 3227 y Ff(;)13 b(t)p Fe(\))22 b Fm(can)i(stor)o(e)d
(information)i(about)g(state)g(sequences)f(which)1030
3326 y(include)h Ff(X)1363 3334 y Fc(t)1422 3326 y Fe(=)30
b Ff(i)p Fm(.)37 b(The)24 b(lines)e(show)i(the)g(connections)g(between)
h(nodes.)36 b(Her)o(e)22 b(we)i(have)g(a)1030 3425 y(fully)16
b(inter)o(connected)h(HMM)f(wher)o(e)h(one)g(can)g(move)g(fr)o(om)f
(any)h(state)g(to)g(any)g(other)g(at)h(each)1030 3524
y(step.)1030 3794 y Fy(subpaths)f(of)h(the)f(HMM)g(that)g(end)g(in)h(a)
f(certain)f(state)h(at)g(a)g(certain)g(time.)24 b(The)17
b(pr)o(ob-)1030 3902 y(ability)24 b(of)g(longer)g(subpaths)g(can)g
(then)g(be)g(worked)g(out)g(in)g(terms)g(of)g(one)g(shorter)1030
4010 y(subpaths.)1030 4118 y Fp(The)c(forward)i(procedure)1030
4284 y Fy(The)c(form)g(of)g(caching)g(that)g(is)h(indicated)e(in)h
(these)h(diagrams)e(is)h(called)g(the)g FC(forward)-3510
b Fx(F)t(O)t(R)r(W)o(A)t(R)t(D)17 b(P)t(R)t(O)t(C)t(E)t(D)t(U)t(R)t(E)
1030 4392 y FC(pr)o(ocedur)o(e)p Fy(.)25 b(W)-8 b(e)20
b(describe)g(it)h(in)h(terms)e(of)h(forwar)o(d)f(variables:)1030
4566 y Fw(\013)1083 4578 y Fr(i)1111 4566 y Ft(\()p Fw(t)p
Ft(\))j(=)g Fw(P)12 b Ft(\()p Fw(o)1453 4578 y Fs(1)1491
4566 y Fw(o)1531 4578 y Fs(2)1582 4566 y Fq(\001)i(\001)g(\001)g
Fw(o)1733 4578 y Fr(t)p Fl(\000)p Fs(1)1847 4566 y Fw(;)g(X)1953
4578 y Fr(t)2005 4566 y Ft(=)23 b Fw(i)p Fq(j)p Fw(\026)p
Ft(\))-1481 b Fy(\(9.9\))p eop
%%Page: 304 12
304 11 bop 75 345 a FC(304)3041 b Fv(9)75 b(Markov)20
b(Models)1923 721 y
 tx@Dict begin tx@NodeDict begin {22.48853 17.48853 39.97705 19.98853
3.28294 } false /N@M-1-1-1 16 {InitRnode } NewNode end end
 1923 721 a 2013 721 a
 tx@Dict begin tx@NodeDict begin {18.37247 2 div 15.49992 10.49992
add 2 div 2 copy 10.49992 sub 4 2 roll Pyth 3.0 add 0.8 add} false
/N@A 11 {InitCnode } NewNode end end
 2013 721 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  18.37247 2 div 15.49992
10.49992 add 2 div 2 copy 10.49992 sub 4 2 roll Pyth 3.0 add CLW 2
div add 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore end
 
@endspecial 2051 668 a Fw(s)2090
680 y Fs(1)2013 776 y Fr(\013)2056 784 y Fk(1)2088 776
y Fs(\()p Fr(t)p Fs(\))1923 1338 y
 tx@Dict begin tx@NodeDict begin {22.48853 17.48853 39.97705 19.98853
3.28294 } false /N@M-1-2-1 16 {InitRnode } NewNode end end
 1923 1338 a 2013 1338
a
 tx@Dict begin tx@NodeDict begin {18.37247 2 div 15.49992 10.49992
add 2 div 2 copy 10.49992 sub 4 2 roll Pyth 3.0 add 0.8 add} false
/N@A 11 {InitCnode } NewNode end end
 2013 1338 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  18.37247 2 div 15.49992
10.49992 add 2 div 2 copy 10.49992 sub 4 2 roll Pyth 3.0 add CLW 2
div add 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore end
 
@endspecial
2051 1284 a Fw(s)2090 1296 y Fs(2)2013 1392 y Fr(\013)2056
1400 y Fk(2)2088 1392 y Fs(\()p Fr(t)p Fs(\))1923 1993
y
 tx@Dict begin tx@NodeDict begin {22.48853 17.48853 39.97705 19.98853
3.28294 } false /N@M-1-3-1 16 {InitRnode } NewNode end end
 1923 1993 a 2013 1993 a
 tx@Dict begin tx@NodeDict begin {18.37247 2 div 15.49992 10.49992
add 2 div 2 copy 10.49992 sub 4 2 roll Pyth 3.0 add 0.8 add} false
/N@A 11 {InitCnode } NewNode end end
 2013 1993 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  18.37247 2 div 15.49992
10.49992 add 2 div 2 copy 10.49992 sub 4 2 roll Pyth 3.0 add CLW 2
div add 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore end


@endspecial 2051 1940 a Fw(s)2090 1952 y Fs(3)2013 2048
y Fr(\013)2056 2056 y Fk(3)2088 2048 y Fs(\()p Fr(t)p
Fs(\))2615 1993 y
 tx@Dict begin tx@NodeDict begin {27.1882 22.1882 49.3764 24.6882 3.28294
} false /N@M-1-3-2 16 {InitRnode } NewNode end end
 2615 1993 a 2688 1993 a
 tx@Dict begin tx@NodeDict begin {31.9725 2 div 15.49992 10.49992 add
2 div 2 copy 10.49992 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A
11 {InitCnode } NewNode end end
 2688 1993 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  31.9725 2 div 15.49992
10.49992 add 2 div 2 copy 10.49992 sub 4 2 roll Pyth 3.0 add CLW 2
div add 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore end
 
@endspecial 2784 1940 a Fw(s)2823
1952 y Fr(j)2688 2048 y(\013)2731 2056 y Fj(j)2762 2048
y Fs(\()p Fr(t)15 b Fs(+)g(1\))2089 2490 y
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 3.28294 } false /N@M-1-4-1
16 {InitRnode } NewNode end end
 2089 2490
a 1917 2967 a
 tx@Dict begin tx@NodeDict begin {23.21428 18.21428 41.42856 20.71428
3.28294 } false /N@M-1-5-1 16 {InitRnode } NewNode end end
 1917 2967 a 2002 2967 a
 tx@Dict begin tx@NodeDict begin {20.8933 2 div 15.49992 10.49992 add
2 div 2 copy 10.49992 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A
11 {InitCnode } NewNode end end
 2002 2967 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  20.8933 2 div 15.49992
10.49992 add 2 div 2 copy 10.49992 sub 4 2 roll Pyth 3.0 add CLW 2
div add 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore end
 
@endspecial 2038 2914 a Fw(s)2077 2926 y
Fr(N)2002 3022 y(\013)2045 3030 y Fj(N)2099 3022 y Fs(\()p
Fr(t)p Fs(\))2074 3340 y
 tx@Dict begin tx@NodeDict begin {6.15079 0.0 3.61111 1.80556 3.28294
} false /N@M-1-6-1 16 {InitRnode } NewNode end end
 2074 3340 a Fw(t)2734 3340 y
 tx@Dict begin tx@NodeDict begin {6.44444 0.83333 20.83327 10.41663
3.28294 } false /N@M-1-6-2 16 {InitRnode } NewNode end end

2734 3340 a Fw(t)j Ft(+)g(1)2907 3340 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@M-1-3-1 /N@M-1-5-1 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 5.0 0 0 add DotLine  grestore  grestore end
 2907 3340 a 2907
3340 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-1
/N@M-1-3-2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 2907 3340 a 2907 3340 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2907 3340 a 2907 3340
a
 tx@Dict begin NAngle  RotBegin  end
 2907 3340 a 2907 3340 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 33.24246 6.94444
2.86108 NAngle 90 add  NAngle  sub Uput exch pop add a PtoC h1 add
exch w1 add exch } PutCoor PutBegin  end
 2907 3340 a 2769 3357 a Fw(a)2813
3369 y Fs(1)p Fr(j)2881 3357 y Fw(b)2917 3369 y Fs(1)p
Fr(j)s(o)3013 3377 y Fj(t)2907 3340 y
 tx@Dict begin PutEnd  end
 2907 3340 a 2907
3340 a
 tx@Dict begin RotEnd  end
 2907 3340 a 2907 3340 a
 tx@Dict begin PutEnd  end
 2907 3340 a 2907 3340
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-1
/N@M-1-3-2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 2907 3340 a 2907 3340 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2907 3340 a 2907 3340 a
 tx@Dict begin NAngle  RotBegin  end
 2907
3340 a 2907 3340 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 33.24246 6.94444
2.86108 NAngle 90 sub  NAngle  sub Uput exch pop add a PtoC h1 add
exch w1 add exch } PutCoor PutBegin  end
 2907 3340 a 2769 3357 a Fw(a)2813
3369 y Fs(2)p Fr(j)2881 3357 y Fw(b)2917 3369 y Fs(2)p
Fr(j)s(o)3013 3377 y Fj(t)2907 3340 y
 tx@Dict begin PutEnd  end
 2907 3340 a 2907
3340 a
 tx@Dict begin RotEnd  end
 2907 3340 a 2907 3340 a
 tx@Dict begin PutEnd  end
 2907 3340 a 2907 3340
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-1
/N@M-1-3-2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 2907 3340 a 2907 3340 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2907 3340 a 2907 3340 a
 tx@Dict begin NAngle  RotBegin  end
 2907
3340 a 2907 3340 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 33.24246 6.94444
2.86108 NAngle 90 sub  NAngle  sub Uput exch pop add a PtoC h1 add
exch w1 add exch } PutCoor PutBegin  end
 2907 3340 a 2769 3357 a Fw(a)2813
3369 y Fs(3)p Fr(j)2881 3357 y Fw(b)2917 3369 y Fs(3)p
Fr(j)s(o)3013 3377 y Fj(t)2907 3340 y
 tx@Dict begin PutEnd  end
 2907 3340 a 2907
3340 a
 tx@Dict begin RotEnd  end
 2907 3340 a 2907 3340 a
 tx@Dict begin PutEnd  end
 2907 3340 a 2907 3340
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-5-1
/N@M-1-3-2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 2907 3340 a 2907 3340 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2907 3340 a 2907 3340 a
 tx@Dict begin NAngle  RotBegin  end
 2907
3340 a 2907 3340 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 39.43967 6.94444
2.86108 NAngle 90 sub  NAngle  sub Uput exch pop add a PtoC h1 add
exch w1 add exch } PutCoor PutBegin  end
 2907 3340 a 2743 3357 a Fw(a)2787
3369 y Fr(N)6 b(j)2881 3357 y Fw(b)2917 3369 y Fr(N)g(j)s(o)3039
3377 y Fj(t)2907 3340 y
 tx@Dict begin PutEnd  end
 2907 3340 a 2907 3340 a
 tx@Dict begin RotEnd  end
 2907
3340 a 2907 3340 a
 tx@Dict begin PutEnd  end
 2907 3340 a 1113 3494 a Fn(Figure)23
b(9.6)76 b Fm(T)-7 b(r)o(ellis)22 b(algorithms:)33 b(Closeup)23
b(of)h(the)h(computation)h(of)e(forwar)o(d)f(pr)o(obabili-)1113
3593 y(ties)f(at)h(one)f(node.)34 b(The)23 b(forwar)o(d)e(pr)o
(obability)g Ff(\013)2569 3601 y Fc(j)2602 3593 y Fe(\()p
Ff(t)e Fe(+)h(1\))i Fm(is)g(calculated)h(by)f(summing)g(the)1113
3692 y(pr)o(oduct)g(of)g(the)i(pr)o(obabilities)d(on)i(each)h(incoming)
e(ar)o(c)h(with)g(the)h(forwar)o(d)d(pr)o(obability)h(of)1113
3791 y(the)d(originating)f(node.)1113 4061 y Fy(The)i(forwar)o(d)e
(variable)g Fw(\013)1959 4073 y Fr(i)1987 4061 y Ft(\()p
Fw(t)p Ft(\))i Fy(is)f(stor)o(ed)g(at)g Ft(\()p Fw(s)2587
4073 y Fr(i)2615 4061 y Fw(;)14 b(t)p Ft(\))20 b Fy(in)g(the)g(tr)o
(ellis)f(and)g(expr)o(esses)f(the)1113 4169 y(total)24
b(pr)o(obability)g(of)g(ending)g(up)g(in)h(state)e Fw(s)2564
4181 y Fr(i)2616 4169 y Fy(at)g(time)i Fw(t)e Fy(\(given)h(that)g(the)h
(observa-)1113 4277 y(tions)f Fw(o)1356 4289 y Fs(1)1414
4277 y Fq(\001)c Fw(o)1497 4289 y Fr(t)p Fl(\000)p Fs(1)1635
4277 y Fy(wer)o(e)i(seen\).)33 b(It)23 b(is)h(calculated)e(by)h
(summing)i(pr)o(obabilities)e(for)g(all)1113 4385 y(incoming)28
b(ar)o(cs)d(at)h(a)g(tr)o(ellis)h(node.)42 b(W)-8 b(e)27
b(calculate)f(the)g(forwar)o(d)f(variables)h(in)g(the)1113
4493 y(tr)o(ellis)21 b(left)f(to)h(right)g(using)h(the)f(following)h
(pr)o(ocedur)o(e:)p eop
%%Page: 305 13
305 12 bop 1030 345 a Fv(9.3)75 b(The)19 b(Thr)o(ee)f(Fundamental)g
(Questions)g(for)g(HMMs)1028 b FC(305)1092 617 y Fy(1.)41
b(Initialization)1196 818 y Fw(\013)1249 830 y Fr(i)1277
818 y Ft(\(1\))23 b(=)g Fw(\031)1541 830 y Fr(i)1569
818 y Fw(;)96 b Ft(1)23 b Fq(\024)g Fw(i)f Fq(\024)h
Fw(N)1092 1018 y Fy(2.)41 b(Induction)1196 1273 y Fw(\013)1249
1285 y Fr(j)1284 1273 y Ft(\()p Fw(t)19 b Ft(+)f(1\))23
b(=)1663 1169 y Fr(N)1632 1194 y Fo(X)1639 1371 y Fr(i)p
Fs(=1)1766 1273 y Fw(\013)1819 1285 y Fr(i)1847 1273
y Ft(\()p Fw(t)p Ft(\))p Fw(a)1985 1285 y Fr(ij)2044
1273 y Fw(b)2080 1285 y Fr(ij)s(o)2166 1293 y Fj(t)2198
1273 y Fw(;)97 b Ft(1)23 b Fq(\024)f Fw(t)h Fq(\024)g
Fw(T)7 b(;)14 b Ft(1)22 b Fq(\024)h Fw(j)28 b Fq(\024)22
b Fw(N)1092 1540 y Fy(3.)41 b(T)-8 b(otal)1196 1794 y
Fw(P)12 b Ft(\()p Fw(O)r Fq(j)p Fw(\026)p Ft(\))24 b(=)1605
1690 y Fr(N)1575 1715 y Fo(X)1581 1892 y Fr(i)p Fs(=1)1709
1794 y Fw(\013)1762 1806 y Fr(i)1789 1794 y Ft(\()p Fw(T)30
b Ft(+)18 b(1\))1030 2069 y Fy(This)j(is)f(a)g(much)g(cheaper)f
(algorithm)i(that)f(r)o(equir)o(es)f(only)i Ft(2)p Fw(N)3054
2039 y Fs(2)3090 2069 y Fw(T)31 b Fy(multiplications.)1030
2302 y Fp(The)20 b(backward)g(procedure)1030 2468 y Fy(It)f(should)i
(be)e(obvious)h(that)f(we)h(do)f(not)h(need)f(to)h(cache)e(r)o(esults)i
(working)g(forwar)o(d)1030 2576 y(thr)o(ough)k(time)h(like)f(this,)h
(but)f(rather)f(that)g(we)h(could)g(also)g(work)h(backwar)o(d.)33
b(The)1030 2684 y FC(backward)22 b(pr)o(ocedur)o(e)f
Fy(computes)i(backwar)o(d)e(variables)g(which)i(ar)o(e)e(the)i(total)f
(pr)o(ob-)-3558 b Fx(B)t(A)t(C)t(K)t(W)o(A)t(R)t(D)16
b(P)t(R)t(O)t(C)t(E)t(D)t(U)t(R)t(E)1030 2792 y Fy(ability)k(of)g
(seeing)h(the)f(r)o(est)f(of)h(the)h(observation)f(sequence)g(given)h
(that)f(we)g(wer)o(e)f(in)1030 2900 y(state)25 b Fw(s)1265
2912 y Fr(i)1318 2900 y Fy(at)g(time)g Fw(t)p Fy(.)39
b(The)25 b(r)o(eal)f(r)o(eason)h(for)g(intr)o(oducing)h(this)g(less)g
(intuitive)f(calcu-)1030 3008 y(lation,)h(though,)h(is)e(because)f(use)
h(of)g(a)f(combination)j(of)d(forwar)o(d)g(and)g(backwar)o(d)1030
3116 y(pr)o(obabilities)i(is)g(vital)g(for)g(solving)h(the)g(thir)o(d)e
(pr)o(oblem)h(of)g(parameter)f(r)o(eestima-)1030 3224
y(tion.)1113 3332 y(De\002ne)c(backwar)o(d)e(variables)1030
3500 y Fw(\014)1077 3512 y Fr(i)1105 3500 y Ft(\()p Fw(t)p
Ft(\))k(=)g Fw(P)12 b Ft(\()p Fw(o)1447 3512 y Fr(t)1490
3500 y Fq(\001)i(\001)g(\001)g Fw(o)1641 3512 y Fr(T)1694
3500 y Fq(j)p Fw(X)1786 3512 y Fr(t)1838 3500 y Ft(=)22
b Fw(i;)14 b(\026)p Ft(\))-1368 b Fy(\(9.10\))1030 3669
y(Then)16 b(we)g(can)f(calculate)g(backwar)o(d)f(variables)h(working)i
(fr)o(om)e(right)h(to)g(left)g(thr)o(ough)1030 3777 y(the)21
b(tr)o(ellis)g(as)f(follows:)1092 3946 y(1.)41 b(Initialization)1196
4146 y Fw(\014)1243 4158 y Fr(i)1271 4146 y Ft(\()p Fw(T)29
b Ft(+)18 b(1\))23 b(=)g(1)p Fw(;)96 b Ft(1)23 b Fq(\024)g
Fw(i)f Fq(\024)h Fw(N)1092 4347 y Fy(2.)41 b(Induction)1196
4601 y Fw(\014)1243 4613 y Fr(i)1271 4601 y Ft(\()p Fw(t)p
Ft(\))23 b(=)1506 4497 y Fr(N)1476 4522 y Fo(X)1478 4699
y Fr(j)s Fs(=1)1610 4601 y Fw(a)1654 4613 y Fr(ij)1712
4601 y Fw(b)1748 4613 y Fr(ij)s(o)1834 4621 y Fj(t)1866
4601 y Fw(\014)1913 4613 y Fr(j)1948 4601 y Ft(\()p Fw(t)c
Ft(+)f(1\))p Fw(;)97 b Ft(1)22 b Fq(\024)h Fw(t)g Fq(\024)g
Fw(T)7 b(;)14 b Ft(1)22 b Fq(\024)g Fw(i)h Fq(\024)g
Fw(N)p eop
%%Page: 306 14
306 13 bop 75 345 a FC(306)3041 b Fv(9)75 b(Markov)20
b(Models)p 2044 642 4 108 v 2629 610 a Fy(Output)p 2044
750 V 2350 718 a(lem)187 b(ice_t)f(cola)1598 826 y(T)-5
b(ime)21 b(\()p Fw(t)p Fy(\):)p 2044 858 V 322 w(1)306
b(2)266 b(3)327 b(4)p 1460 861 2022 4 v 1626 937 a Fw(\013)1679
949 y Fr(C)t(P)1786 937 y Ft(\()p Fw(t)p Ft(\))p 2044
969 4 108 v 320 w Fy(1.0)222 b(0.21)119 b(0.0462)97 b(0.021294)1635
1045 y Fw(\013)1688 1057 y Fr(I)5 b(P)1777 1045 y Ft(\()p
Fw(t)p Ft(\))p 2044 1116 4 147 v 329 w Fy(0.0)222 b(0.09)119
b(0.0378)97 b(0.010206)1510 1192 y Fw(P)12 b Ft(\()p
Fw(o)1647 1204 y Fs(1)1699 1192 y Fq(\001)i(\001)g(\001)f
Fw(o)1849 1204 y Fr(t)p Fl(\000)p Fs(1)1964 1192 y Ft(\))p
2044 1224 4 108 v 204 w Fy(1.0)243 b(0.3)161 b(0.084)f(0.0315)p
1460 1227 2022 4 v 1629 1303 a Fw(\014)1676 1315 y Fr(C)t(P)1783
1303 y Ft(\()p Fw(t)p Ft(\))p 2044 1335 4 108 v 260 w
Fy(0.0315)139 b(0.045)159 b(0.6)265 b(1.0)1638 1411 y
Fw(\014)1685 1423 y Fr(I)5 b(P)1774 1411 y Ft(\()p Fw(t)p
Ft(\))p 2044 1482 4 147 v 290 w Fy(0.029)160 b(0.245)f(0.1)265
b(1.0)1541 1558 y Fw(P)12 b Ft(\()p Fw(o)1678 1570 y
Fs(1)1730 1558 y Fq(\001)i(\001)g(\001)f Fw(o)1880 1570
y Fr(T)1933 1558 y Ft(\))p 2044 1590 4 108 v 172 w Fy(0.0315)p
1460 1593 2022 4 v 1631 1669 a Fw(\015)1674 1681 y Fr(C)t(P)1781
1669 y Ft(\()p Fw(t)p Ft(\))p 2044 1701 4 108 v 325 w
Fy(1.0)243 b(0.3)182 b(0.88)201 b(0.676)1640 1777 y Fw(\015)1683
1789 y Fr(I)5 b(P)1772 1777 y Ft(\()p Fw(t)p Ft(\))p
2044 1848 4 147 v 334 w Fy(0.0)243 b(0.7)182 b(0.12)201
b(0.324)1712 1911 y Fo(c)1704 1932 y Fw(X)1773 1944 y
Fr(t)p 2044 1964 4 116 v 2197 1932 a Fy(CP)255 b(IP)214
b(CP)260 b(CP)p 1460 1967 2022 4 v 1634 2043 a Fw(\016)1671
2055 y Fr(C)t(P)1778 2043 y Ft(\()p Fw(t)p Ft(\))p 2044
2075 4 108 v 328 w Fy(1.0)222 b(0.21)119 b(0.0315)97
b(0.019404)1643 2151 y Fw(\016)1680 2163 y Fr(I)5 b(P)1769
2151 y Ft(\()p Fw(t)p Ft(\))p 2044 2183 V 337 w Fy(0.0)222
b(0.09)119 b(0.0315)97 b(0.008316)1625 2259 y Fw( )1679
2271 y Fr(C)t(P)1786 2259 y Ft(\()p Fw(t)p Ft(\))p 2044
2291 V 666 w Fy(CP)213 b(IP)276 b(CP)1634 2367 y Fw( )1688
2379 y Fr(I)5 b(P)1778 2367 y Ft(\()p Fw(t)p Ft(\))p
2044 2438 4 147 v 674 w Fy(CP)213 b(IP)276 b(CP)1728
2496 y Ft(^)1704 2516 y Fw(X)1773 2528 y Fr(t)p 2044
2549 4 112 v 2197 2516 a Fy(CP)255 b(IP)214 b(CP)260
b(CP)1651 2628 y Fw(P)12 b Ft(\()1772 2607 y(^)1748 2628
y Fw(X)6 b Ft(\))p 2044 2660 V 241 w Fy(0.019404)1520
2805 y Fn(T)-8 b(able)18 b(9.2)75 b Fm(V)-7 b(ariable)19
b(calculations)g(for)f Ff(O)24 b Fe(=)d Fm(\(lem,)d(ice_t,)g(cola\).)
1175 3065 y Fy(3.)41 b(T)-8 b(otal)1279 3319 y Fw(P)12
b Ft(\()p Fw(O)r Fq(j)p Fw(\026)p Ft(\))24 b(=)1688 3215
y Fr(N)1658 3240 y Fo(X)1664 3417 y Fr(i)p Fs(=1)1792
3319 y Fw(\031)1839 3331 y Fr(i)1867 3319 y Fw(\014)1914
3331 y Fr(i)1941 3319 y Ft(\(1\))1196 3586 y Fy(T)-8
b(able)21 b(9.2)g(shows)i(the)f(calculation)g(of)g(forwar)o(d)e(and)h
(backwar)o(d)f(variables,)h(and)1113 3694 y(certain)d(other)h
(variables)f(that)g(we)h(will)g(come)g(to)g(later)f(for)h(the)g(soft)g
(drink)f(machine)1113 3802 y(fr)o(om)i(Example)g(1,)g(given)h(the)g
(observation)g(sequence)g Fw(O)26 b Ft(=)d Fy(\(lem,)d(ice_t,)g(cola\))
o(.)1113 4035 y Fp(Combining)f(them)1113 4201 y Fy(Mor)o(e)j(generally)
-9 b(,)22 b(in)h(fact,)g(we)f(can)h(use)f(any)h(combination)h(of)f
(forwar)o(d)e(and)i(back-)1113 4309 y(war)o(d)d(caching)i(to)g(work)g
(out)f(the)h(pr)o(obability)f(of)g(an)g(observation)h(sequence.)28
b(Ob-)1113 4417 y(serve)20 b(that:)1113 4586 y Fw(P)12
b Ft(\()p Fw(O)r(;)i(X)1381 4598 y Fr(t)1434 4586 y Ft(=)22
b Fw(i)p Fq(j)p Fw(\026)p Ft(\))83 b(=)g Fw(P)12 b Ft(\()p
Fw(o)2023 4598 y Fs(1)2074 4586 y Fq(\001)i(\001)g(\001)g
Fw(o)2225 4598 y Fr(T)2278 4586 y Fw(;)g(X)2384 4598
y Fr(t)2436 4586 y Ft(=)22 b Fw(i)p Fq(j)p Fw(\026)p
Ft(\))1738 4719 y(=)83 b Fw(P)12 b Ft(\()p Fw(o)2023
4731 y Fs(1)2074 4719 y Fq(\001)i(\001)g(\001)g Fw(o)2225
4731 y Fr(t)p Fl(\000)p Fs(1)2340 4719 y Fw(;)g(X)2446
4731 y Fr(t)2498 4719 y Ft(=)22 b Fw(i;)14 b(o)2691 4731
y Fr(t)2734 4719 y Fq(\001)g(\001)g(\001)g Fw(o)2885
4731 y Fr(T)2937 4719 y Fq(j)p Fw(\026)p Ft(\))p eop
%%Page: 307 15
307 14 bop 1030 345 a Fv(9.3)75 b(The)19 b(Thr)o(ee)f(Fundamental)g
(Questions)g(for)g(HMMs)1028 b FC(307)1655 617 y Ft(=)83
b Fw(P)12 b Ft(\()p Fw(o)1940 629 y Fs(1)1991 617 y Fq(\001)i(\001)g
(\001)g Fw(o)2142 629 y Fr(t)p Fl(\000)p Fs(1)2257 617
y Fw(;)g(X)2363 629 y Fr(t)2415 617 y Ft(=)22 b Fw(i)p
Fq(j)p Fw(\026)p Ft(\))p Fw(P)12 b Ft(\()p Fw(o)2773
629 y Fr(t)2817 617 y Fq(\001)i(\001)g(\001)f Fw(o)2967
629 y Fr(T)3020 617 y Fq(j)p Fw(o)3083 629 y Fs(1)3134
617 y Fq(\001)h(\001)g(\001)g Fw(o)3285 629 y Fr(t)p
Fl(\000)p Fs(1)3399 617 y Fw(;)g(X)3505 629 y Fr(t)3557
617 y Ft(=)23 b Fw(i;)14 b(\026)p Ft(\))1655 750 y(=)83
b Fw(P)12 b Ft(\()p Fw(o)1940 762 y Fs(1)1991 750 y Fq(\001)i(\001)g
(\001)g Fw(o)2142 762 y Fr(t)p Fl(\000)p Fs(1)2257 750
y Fw(;)g(X)2363 762 y Fr(t)2415 750 y Ft(=)22 b Fw(i)p
Fq(j)p Fw(\026)p Ft(\))p Fw(P)12 b Ft(\()p Fw(o)2773
762 y Fr(t)2817 750 y Fq(\001)i(\001)g(\001)f Fw(o)2967
762 y Fr(T)3020 750 y Fq(j)p Fw(X)3112 762 y Fr(t)3164
750 y Ft(=)23 b Fw(i;)14 b(\026)p Ft(\))1655 883 y(=)83
b Fw(\013)1856 895 y Fr(i)1884 883 y Ft(\()p Fw(t)p Ft(\))p
Fw(\014)2025 895 y Fr(i)2053 883 y Ft(\()p Fw(t)p Ft(\))1030
1057 y Fy(Ther)o(efor)o(e:)1030 1286 y Fw(P)12 b Ft(\()p
Fw(O)r Fq(j)p Fw(\026)p Ft(\))24 b(=)1439 1182 y Fr(N)1409
1207 y Fo(X)1415 1384 y Fr(i)p Fs(=1)1543 1286 y Fw(\013)1596
1298 y Fr(i)1623 1286 y Ft(\()p Fw(t)p Ft(\))p Fw(\014)1764
1298 y Fr(i)1793 1286 y Ft(\()p Fw(t)p Ft(\))p Fw(;)97
b Ft(1)23 b Fq(\024)f Fw(t)h Fq(\024)g Fw(T)29 b Ft(+)18
b(1)-1794 b Fy(\(9.1)-5 b(1\))1030 1527 y(The)21 b(pr)o(evious)f
(equations)i(wer)o(e)e(special)g(cases)g(of)h(this)g(one.)706
1779 y Fg(9.3.2)124 b(Finding)26 b(the)e(best)h(state)h(sequence)1030
1945 y Fy(The)d(second)h(pr)o(oblem)f(was)g(wor)o(ded)f(somewhat)i
(vaguely)f(as)g(\223\002nding)h(the)f(state)1030 2053
y(sequence)16 b(that)h(best)f(explains)g(the)g(observations\224.)24
b(That)16 b(is)h(because)e(ther)o(e)g(is)i(mor)o(e)1030
2161 y(than)24 b(one)g(way)f(to)h(think)h(about)e(doing)i(this.)34
b(One)24 b(way)g(to)g(pr)o(oceed)e(would)i(be)f(to)1030
2269 y(choose)f(the)f(states)g(individually)-9 b(.)27
b(That)21 b(is,)g(for)g(each)g Fw(t)p Fy(,)g Ft(1)i Fq(\024)g
Fw(t)h Fq(\024)f Fw(T)30 b Ft(+)18 b(1)p Fy(,)j(we)g(would)1030
2377 y(\002nd)g Fw(X)1269 2389 y Fr(t)1319 2377 y Fy(that)g(maximizes)f
Fw(P)12 b Ft(\()p Fw(X)2066 2389 y Fr(t)2095 2377 y Fq(j)p
Fw(O)r(;)i(\026)p Ft(\))p Fy(.)1113 2485 y(Let)1030 2659
y Fw(\015)1073 2671 y Fr(i)1101 2659 y Ft(\()p Fw(t)p
Ft(\))83 b(=)g Fw(P)12 b Ft(\()p Fw(X)1592 2671 y Fr(t)1644
2659 y Ft(=)23 b Fw(i)p Fq(j)p Fw(O)r(;)14 b(\026)p Ft(\))-1263
b Fy(\(9.12\))1278 2832 y Ft(=)1436 2776 y Fw(P)12 b
Ft(\()p Fw(X)1602 2788 y Fr(t)1654 2776 y Ft(=)23 b Fw(i;)14
b(O)r Fq(j)p Fw(\026)p Ft(\))p 1436 2813 543 4 v 1573
2889 a Fw(P)e Ft(\()p Fw(O)r Fq(j)p Fw(\026)p Ft(\))1278
3061 y(=)1553 3005 y Fw(\013)1606 3017 y Fr(i)1634 3005
y Ft(\()p Fw(t)p Ft(\))p Fw(\014)1775 3017 y Fr(i)1803
3005 y Ft(\()p Fw(t)p Ft(\))p 1436 3042 580 4 v 1436
3071 a Fo(P)1523 3092 y Fr(N)1523 3158 y(j)s Fs(=1)1656
3133 y Fw(\013)1709 3145 y Fr(j)1744 3133 y Ft(\()p Fw(t)p
Ft(\))p Fw(\014)1885 3145 y Fr(j)1921 3133 y Ft(\()p
Fw(t)p Ft(\))1113 3328 y Fy(The)21 b(individually)g(most)g(likely)h
(state)2375 3307 y Fo(c)2367 3328 y Fw(X)2436 3340 y
Fr(t)2486 3328 y Fy(is:)1038 3481 y Fo(c)1030 3502 y
Fw(X)1099 3514 y Fr(t)1151 3502 y Ft(=)h(arg)13 b(max)1272
3572 y Fs(1)p Fl(\024)p Fr(i)p Fl(\024)p Fr(N)1538 3502
y Fw(\015)1581 3514 y Fr(i)1608 3502 y Ft(\()p Fw(t)p
Ft(\))p Fw(;)98 b Ft(1)22 b Fq(\024)h Fw(t)g Fq(\024)g
Fw(T)29 b Ft(+)18 b(1)-1614 b Fy(\(9.13\))1030 3726 y(This)16
b(quantity)h(maximizes)f(the)f(expected)g(number)h(of)g(states)f(that)h
(will)g(be)g(guessed)1030 3834 y(corr)o(ectly)-9 b(.)29
b(However)-6 b(,)22 b(it)g(may)h(yield)f(a)f(quite)i(unlikely)g(state)f
FC(sequence)p Fy(.)32 b(Ther)o(efor)o(e,)1030 3942 y(this)d(is)g(not)g
(the)g(method)g(that)f(is)h(normally)g(used,)h(but)f(rather)e(the)i(V)
-5 b(iterbi)29 b(algo-)1030 4049 y(rithm,)21 b(which)h(ef)o
(\002ciently)e(computes)h(the)g(most)h(likely)f(state)g(sequence.)1030
4284 y Fp(V)-5 b(iterbi)19 b(algorithm)1030 4450 y Fy(Commonly)k(we)d
(want)h(to)g(\002nd)g(the)g(most)h(likely)f(complete)g(path,)f(that)h
(is:)1030 4625 y Ft(arg)14 b(max)1143 4694 y Fr(X)1329
4625 y Fw(P)e Ft(\()p Fw(X)7 b Fq(j)p Fw(O)r(;)14 b(\026)p
Ft(\))p eop
%%Page: 308 16
308 15 bop 75 345 a FC(308)3041 b Fv(9)75 b(Markov)20
b(Models)1113 617 y Fy(T)-8 b(o)21 b(do)g(this,)g(it)g(is)h(suf)o
(\002cient)e(to)h(maximize)g(for)f(a)g(\002xed)h Fw(O)r
Fy(:)1113 765 y Ft(arg)14 b(max)1226 834 y Fr(X)1412
765 y Fw(P)e Ft(\()p Fw(X)r(;)i(O)r Fq(j)p Fw(\026)p
Ft(\))1196 950 y Fy(An)25 b(ef)o(\002cient)g(tr)o(ellis)g(algorithm)i
(for)e(computing)i(this)f(path)f(is)h(the)g FC(V)-6 b(iterbi)26
b(algo-)-3463 b Fz(V)t Fx(I)t(T)t(E)t(R)t(B)t(I)16 b(A)t(L)t(G)t(O)t(R)
t(I)t(T)t(H)t(M)1113 1058 y FC(rithm)p Fy(.)25 b(De\002ne:)1113
1205 y Fw(\016)1150 1217 y Fr(j)1185 1205 y Ft(\()p Fw(t)p
Ft(\))f(=)96 b(max)1390 1259 y Fr(X)1444 1267 y Fk(1)1477
1259 y Fl(\001\001\001)o Fr(X)1590 1267 y Fj(t)p Fd(\000)p
Fk(1)1705 1205 y Fw(P)12 b Ft(\()p Fw(X)1871 1217 y Fs(1)1922
1205 y Fq(\001)i(\001)g(\001)g Fw(X)2102 1217 y Fr(t)p
Fl(\000)p Fs(1)2216 1205 y Fw(;)g(o)2293 1217 y Fs(1)2344
1205 y Fq(\001)g(\001)g(\001)g Fw(o)2495 1217 y Fr(t)p
Fl(\000)p Fs(1)2609 1205 y Fw(;)g(X)2715 1217 y Fr(t)2767
1205 y Ft(=)23 b Fw(j)5 b Fq(j)p Fw(\026)p Ft(\))1113
1390 y Fy(This)23 b(variable)f(stor)o(es)h(for)f(each)h(point)g(in)h
(the)f(tr)o(ellis)f(the)h(pr)o(obability)g(of)g(the)g(most)1113
1498 y(pr)o(obable)28 b(path)h(that)h(leads)e(to)i(that)g(node.)51
b(The)29 b(corr)o(esponding)h(variable)e Fw( )3700 1510
y Fr(j)3735 1498 y Ft(\()p Fw(t)p Ft(\))1113 1606 y Fy(then)h(r)o(ecor)
o(ds)e(the)h(node)h(of)f(the)g(incoming)i(ar)o(c)d(that)i(led)f(to)g
(this)i(most)f(pr)o(obable)1113 1714 y(path.)38 b(Using)25
b(dynamic)g(pr)o(ogramming,)h(we)f(calculate)f(the)h(most)h(pr)o
(obable)e(path)1113 1822 y(thr)o(ough)d(the)g(whole)h(tr)o(ellis)e(as)h
(follows:)1175 1969 y(1.)41 b(Initialization)1279 2143
y Fw(\016)1316 2155 y Fr(j)1351 2143 y Ft(\(1\))23 b(=)g
Fw(\031)1615 2155 y Fr(j)1650 2143 y Fw(;)97 b Ft(1)23
b Fq(\024)f Fw(j)28 b Fq(\024)23 b Fw(N)1175 2317 y Fy(2.)41
b(Induction)1279 2490 y Fw(\016)1316 2502 y Fr(j)1351
2490 y Ft(\()p Fw(t)19 b Ft(+)f(1\))23 b(=)55 b(max)1699
2544 y Fs(1)p Fl(\024)p Fr(i)p Fl(\024)p Fr(N)1932 2490
y Fw(\016)1969 2502 y Fr(i)1997 2490 y Ft(\()p Fw(t)p
Ft(\))p Fw(a)2135 2502 y Fr(ij)2194 2490 y Fw(b)2230
2502 y Fr(ij)s(o)2316 2510 y Fj(t)2348 2490 y Fw(;)97
b Ft(1)23 b Fq(\024)f Fw(j)28 b Fq(\024)23 b Fw(N)1279
2697 y Fy(Stor)o(e)d(backtrace)1279 2871 y Fw( )1333
2883 y Fr(j)1368 2871 y Ft(\()p Fw(t)f Ft(+)f(1\))23
b(=)f(arg)14 b(max)1749 2941 y Fs(1)p Fl(\024)p Fr(i)p
Fl(\024)p Fr(N)2015 2871 y Fw(\016)2052 2883 y Fr(i)2080
2871 y Ft(\()p Fw(t)p Ft(\))p Fw(a)2218 2883 y Fr(ij)2277
2871 y Fw(b)2313 2883 y Fr(ij)s(o)2399 2891 y Fj(t)2431
2871 y Fw(;)g Ft(1)23 b Fq(\024)f Fw(j)28 b Fq(\024)23
b Fw(N)1175 3094 y Fy(3.)41 b(T)-8 b(ermination)20 b(and)e(path)g(r)o
(eadout)f(\(by)h(backtracking\).)24 b(The)19 b(most)g(likely)g(state)
1279 3202 y(sequence)i(is)g(worked)g(out)g(fr)o(om)f(the)h(right)h
(backwar)o(ds:)1303 3354 y Ft(^)1279 3375 y Fw(X)1348
3387 y Fr(T)9 b Fs(+1)1567 3375 y Ft(=)83 b(arg)13 b(max)1748
3445 y Fs(1)p Fl(\024)p Fr(i)p Fl(\024)p Fr(N)2014 3375
y Fw(\016)2051 3387 y Fr(i)2078 3375 y Ft(\()p Fw(T)30
b Ft(+)18 b(1\))1410 3555 y(^)1386 3576 y Fw(X)1455 3588
y Fr(t)1567 3576 y Ft(=)83 b Fw( )1787 3588 y Fs(^)1769
3603 y Fr(X)1823 3611 y Fj(t)p Fk(+1)1926 3576 y Ft(\()p
Fw(t)19 b Ft(+)f(1\))1280 3730 y Fw(P)12 b Ft(\()1400
3709 y(^)1377 3730 y Fw(X)6 b Ft(\))83 b(=)115 b(max)1715
3783 y Fs(1)p Fl(\024)p Fr(i)p Fl(\024)p Fr(N)1948 3730
y Fw(\016)1985 3742 y Fr(i)2012 3730 y Ft(\()p Fw(T)30
b Ft(+)18 b(1\))1113 3963 y Fy(In)29 b(these)h(calculations,)h(one)e
(may)h(get)f(ties.)50 b(W)-8 b(e)30 b(assume)f(that)g(in)h(that)f(case)
f(one)1113 4071 y(path)19 b(is)g(chosen)g(randomly)-9
b(.)25 b(In)19 b(practical)f(applications,)g(people)h(commonly)h(want)
1113 4179 y(to)j(work)h(out)f(not)g(only)h(the)f(best)g(state)f
(sequence)h(but)g(the)g Fw(n)p Fy(-best)f(sequences)h(or)g(a)1113
4287 y(graph)e(of)g(likely)h(paths.)27 b(In)22 b(or)o(der)e(to)i(do)f
(this)h(people)f(often)h(stor)o(e)f(the)g Fw(m)j(<)g(n)d
Fy(best)1113 4395 y(pr)o(evious)f(states)h(at)f(a)h(node.)1196
4503 y(T)-8 b(able)17 b(9.2)f(above)h(shows)h(the)g(computation)g(of)f
(the)h(most)g(likely)g(states)f(and)g(state)1113 4611
y(sequence)h(under)g(both)h(these)f(interpr)o(etations)g(\226)f(for)h
(this)h(example,)f(they)g(pr)o(ove)f(to)1113 4719 y(be)j(identical.)p
eop
%%Page: 309 17
309 16 bop 1030 345 a Fv(9.3)75 b(The)19 b(Thr)o(ee)f(Fundamental)g
(Questions)g(for)g(HMMs)1028 b FC(309)706 617 y Fg(9.3.3)124
b(The)25 b(third)g(problem:)30 b(Parameter)23 b(estimation)1030
784 y Fy(Given)30 b(a)f(certain)g(observation)g(sequence,)j(we)d(want)h
(to)g(\002nd)f(the)h(values)f(of)g(the)1030 892 y(model)j(parameters)e
Fw(\026)43 b Ft(=)g(\()p Fw(A;)14 b(B)t(;)g(\031)s Ft(\))33
b Fy(which)f(best)g(explain)f(what)h(we)f(observed.)1030
999 y(Using)e(Maximum)f(Likelihood)h(Estimation,)h(that)e(means)h(we)f
(want)g(to)h(\002nd)f(the)1030 1107 y(values)20 b(that)h(maximize)f
Fw(P)12 b Ft(\()p Fw(O)r Fq(j)p Fw(\026)p Ft(\))p Fy(:)1030
1272 y Ft(arg)i(max)1152 1338 y Fr(\026)1329 1272 y Fw(P)e
Ft(\()p Fw(O)1491 1284 y Fh(training)1701 1272 y Fq(j)p
Fw(\026)p Ft(\))-1101 b Fy(\(9.14\))1030 1484 y(Ther)o(e)23
b(is)h(no)h(known)g(analytic)f(method)g(to)h(choose)g
Fw(\026)f Fy(to)g(maximize)f Fw(P)12 b Ft(\()p Fw(O)r
Fq(j)p Fw(\026)p Ft(\))p Fy(.)37 b(But)1030 1592 y(we)30
b(can)g(locally)h(maximize)f(it)h(by)f(an)g(iterative)g(hill-climbing)i
(algorithm.)55 b(This)1030 1700 y(algorithm)24 b(is)g(the)f(Baum-W)-8
b(elch)23 b(or)g(Forwar)o(d-Backwar)o(d)d(algorithm,)k(which)h(is)e(a)
1030 1808 y(special)29 b(case)g(of)h(the)f(Expectation)h(Maximization)f
(method)h(which)g(we)g(cover)o(ed)1030 1916 y(in)d(gr)o(eater)f
(generality)h(in)g(Section)g(14.2.2.)41 b(It)27 b(works)h(like)f(this.)
45 b(W)-8 b(e)27 b(don't)h(know)1030 2024 y(what)22 b(the)g(model)h
(is,)f(but)g(we)g(can)g(work)g(out)h(the)f(pr)o(obability)f(of)h(the)g
(observation)1030 2132 y(sequence)k(using)g(some)g(\(per)o(haps)e
(randomly)i(chosen\))f(model.)40 b(Looking)27 b(at)e(that)1030
2240 y(calculation,)c(we)f(can)h(see)f(which)i(state)e(transitions)i
(and)e(symbol)i(emissions)g(wer)o(e)1030 2348 y(pr)o(obably)31
b(used)g(the)h(most.)58 b(By)31 b(incr)o(easing)h(the)f(pr)o(obability)
g(of)h(those,)i(we)e(can)1030 2456 y(choose)19 b(a)e(r)o(evised)g
(model)h(which)h(gives)f(a)g(higher)g(pr)o(obability)g(to)g(the)g
(observation)1030 2564 y(sequence.)57 b(This)32 b(maximization)g(pr)o
(ocess)e(is)i(often)f(r)o(eferr)o(ed)e(to)i(as)g FC(training)g
Fy(the)-3139 b Fx(T)t(R)t(A)t(I)t(N)t(I)t(N)t(G)1030
2672 y Fy(model)21 b(and)f(is)i(performed)d(on)j FC(training)e(data)p
Fy(.)-2086 b Fx(T)t(R)t(A)t(I)t(N)t(I)t(N)t(G)15 b(D)t(ATA)1113
2780 y Fy(De\002ne)31 b Fw(p)1428 2792 y Fr(t)1457 2780
y Ft(\()p Fw(i;)14 b(j)5 b Ft(\))p Fw(;)14 b Ft(1)42
b Fq(\024)f Fw(t)h Fq(\024)f Fw(T)7 b(;)14 b Ft(1)41
b Fq(\024)h Fw(i;)14 b(j)46 b Fq(\024)41 b Fw(N)f Fy(as)31
b(shown)h(below)-8 b(.)57 b(This)31 b(is)g(the)1030 2888
y(pr)o(obability)20 b(of)g(traversing)h(a)f(certain)f(ar)o(c)h(at)g
(time)g Fw(t)h Fy(given)g(observation)f(sequence)1030
2995 y Fw(O)r Fy(;)h(see)g(Figur)o(e)f(9.7.)1030 3282
y Fw(p)1072 3294 y Fr(t)1101 3282 y Ft(\()p Fw(i;)14
b(j)5 b Ft(\))83 b(=)g Fw(P)12 b Ft(\()p Fw(X)1667 3294
y Fr(t)1719 3282 y Ft(=)22 b Fw(i;)14 b(X)1941 3294 y
Fr(t)p Fs(+1)2077 3282 y Ft(=)23 b Fw(j)5 b Fq(j)p Fw(O)r(;)14
b(\026)p Ft(\))-1706 b Fy(\(9.15\))1353 3493 y Ft(=)1511
3437 y Fw(P)12 b Ft(\()p Fw(X)1677 3449 y Fr(t)1729 3437
y Ft(=)22 b Fw(i;)14 b(X)1951 3449 y Fr(t)p Fs(+1)2087
3437 y Ft(=)23 b Fw(j;)14 b(O)r Fq(j)p Fw(\026)p Ft(\))p
1511 3474 907 4 v 1830 3550 a Fw(P)e Ft(\()p Fw(O)r Fq(j)p
Fw(\026)p Ft(\))1353 3762 y(=)1511 3705 y Fw(\013)1564
3717 y Fr(i)1591 3705 y Ft(\()p Fw(t)p Ft(\))p Fw(a)1729
3717 y Fr(ij)1788 3705 y Fw(b)1824 3717 y Fr(ij)s(o)1910
3725 y Fj(t)1943 3705 y Fw(\014)1990 3717 y Fr(j)2025
3705 y Ft(\()p Fw(t)18 b Ft(+)g(1\))p 1511 3742 752 4
v 1554 3772 a Fo(P)1642 3792 y Fr(N)1642 3859 y(m)p Fs(=1)1803
3834 y Fw(\013)1856 3846 y Fr(m)1919 3834 y Ft(\()p Fw(t)p
Ft(\))p Fw(\014)2060 3846 y Fr(m)2124 3834 y Ft(\()p
Fw(t)p Ft(\))1353 4049 y(=)1819 3993 y Fw(\013)1872 4005
y Fr(i)1899 3993 y Ft(\()p Fw(t)p Ft(\))p Fw(a)2037 4005
y Fr(ij)2096 3993 y Fw(b)2132 4005 y Fr(ij)s(o)2218 4013
y Fj(t)2251 3993 y Fw(\014)2298 4005 y Fr(j)2333 3993
y Ft(\()p Fw(t)g Ft(+)g(1\))p 1511 4030 1368 4 v 1511
4059 a Fo(P)1598 4080 y Fr(N)1598 4147 y(m)p Fs(=1)1759
4059 y Fo(P)1847 4080 y Fr(N)1847 4147 y(n)p Fs(=1)1990
4122 y Fw(\013)2043 4134 y Fr(m)2106 4122 y Ft(\()p Fw(t)p
Ft(\))p Fw(a)2244 4134 y Fr(mn)2349 4122 y Fw(b)2385
4134 y Fr(mno)2518 4142 y Fj(t)2549 4122 y Fw(\014)2596
4134 y Fr(n)2641 4122 y Ft(\()p Fw(t)h Ft(+)f(1\))1030
4307 y Fy(Note)j(that)g Fw(\015)1440 4319 y Fr(i)1467
4307 y Ft(\()p Fw(t)p Ft(\))j(=)1673 4245 y Fo(P)1760
4265 y Fr(N)1760 4332 y(j)s Fs(=1)1893 4307 y Fw(p)1935
4319 y Fr(t)1964 4307 y Ft(\()p Fw(i;)14 b(j)5 b Ft(\))p
Fy(.)1113 4415 y(Now)-8 b(,)21 b(if)g(we)g(sum)g(over)g(the)g(time)g
(index,)f(this)h(gives)g(us)g(expectations)g(\(counts\):)1066
4551 y Fr(T)1030 4576 y Fo(X)1035 4752 y Fr(t)p Fs(=1)1164
4655 y Fw(\015)1207 4667 y Fr(i)1234 4655 y Ft(\()p Fw(t)p
Ft(\))j(=)f Fy(expected)c(number)i(of)g(transitions)h(fr)o(om)e(state)g
Fw(i)h Fy(in)g Fw(O)p eop
%%Page: 310 18
310 17 bop 75 345 a FC(310)3041 b Fv(9)75 b(Markov)20
b(Models)1662 657 y
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 3.28294 } false /N@M-1-1-1
16 {InitRnode } NewNode end end
 1662 657 a 1694 657 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode } NewNode
end end
 1694 657 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 3218 657 a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 3.28294 } false /N@M-1-1-4
16 {InitRnode } NewNode end end
 3218
657 a 3249 657 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode } NewNode
end end
 3249 657 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end


@endspecial 1662 960 a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 3.28294 } false /N@M-1-2-1
16 {InitRnode } NewNode end end
 1662 960 a 1694 960 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode } NewNode
end end
 1694 960
a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 3218 960 a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 3.28294 } false /N@M-1-2-4
16 {InitRnode } NewNode end end
 3218
960 a 3249 960 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode } NewNode
end end
 3249 960 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end


@endspecial 1662 1280 a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 3.28294 } false /N@M-1-3-1
16 {InitRnode } NewNode end end
 1662 1280 a 1694 1280 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode } NewNode
end end
 1694
1280 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 2134 1280
a
 tx@Dict begin tx@NodeDict begin {10.23482 7.42926 17.66406 8.83203
3.28294 } false /N@M-1-3-2 16 {InitRnode } NewNode end end
 2134 1280 a 2174 1280 a
 tx@Dict begin tx@NodeDict begin {8.01678 2 div 4.30554 1.49998 add
2 div 2 copy 1.49998 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A
11 {InitCnode } NewNode end end
 2174 1280 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  8.01678 2 div 4.30554
1.49998 add 2 div 2 copy 1.49998 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore end


@endspecial Fw(s)2213 1292 y Fr(i)2642 1280 y
 tx@Dict begin tx@NodeDict begin {10.3168 8.87234 19.18915 9.59457
3.28294 } false /N@M-1-3-3 16 {InitRnode } NewNode end end
 2642 1280
a 2685 1280 a
 tx@Dict begin tx@NodeDict begin {8.90106 2 div 4.30554 2.86108 add
2 div 2 copy 2.86108 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A
11 {InitCnode } NewNode end end
 2685 1280 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  8.90106 2 div 4.30554
2.86108 add 2 div 2 copy 2.86108 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore end
 
@endspecial
Fw(s)2724 1292 y Fr(j)3218 1280 y
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 3.28294 } false /N@M-1-3-4
16 {InitRnode } NewNode end end
 3218 1280 a 3249 1280
a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode } NewNode
end end
 3249 1280 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial
1694 1583 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 0.0 0.0 3.28294 } false /N@M-1-4-1
16 {InitRnode } NewNode end end
 1694 1583 a 1662 1885 a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 3.28294 } false /N@M-1-5-1
16 {InitRnode } NewNode end end
 1662 1885 a 1694
1885 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode } NewNode
end end
 1694 1885 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial
3218 1885 a
 tx@Dict begin tx@NodeDict begin {3.8 3.8 7.6 3.8 3.28294 } false /N@M-1-5-4
16 {InitRnode } NewNode end end
 3218 1885 a 3249 1885 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@A 11 {InitCnode } NewNode
end end
 3249 1885 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0. setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore end
 
@endspecial 1607 2188 a
 tx@Dict begin tx@NodeDict begin {6.44444 0.83333 20.83327 10.41663
3.28294 } false /N@M-1-6-1 16 {InitRnode } NewNode end end
 1607 2188 a Fw(t)e
Fq(\000)h Ft(1)2193 2188 y
 tx@Dict begin tx@NodeDict begin {6.15079 0.0 3.61111 1.80556 3.28294
} false /N@M-1-6-2 16 {InitRnode } NewNode end end
 2193 2188 a Fw(t)2635 2188
y
 tx@Dict begin tx@NodeDict begin {6.44444 0.83333 20.83327 10.41663
3.28294 } false /N@M-1-6-3 16 {InitRnode } NewNode end end
 2635 2188 a Fw(t)g Ft(+)f(1)3163 2188 y
 tx@Dict begin tx@NodeDict begin {6.44444 0.83333 20.83327 10.41663
3.28294 } false /N@M-1-6-4 16 {InitRnode } NewNode end end
 3163 2188 a
Fw(t)g Ft(+)g(2)3336 2188 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@M-1-3-1 /N@M-1-5-1 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 5.0 0 0 add DotLine  grestore  grestore end
 3336 2188 a 3336 2188 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@M-1-3-4 /N@M-1-5-4 InitNC { NCLine  } if end gsave 0.8 SLW
0. setgray 5.0 0 0 add DotLine  grestore  grestore end
 3336
2188 a 3336 2188 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-1-1
/N@M-1-3-2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3336 2188 a 3336 2188 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-2-1
/N@M-1-3-2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3336 2188
a 3336 2188 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-1
/N@M-1-3-2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3336 2188 a 3336 2188 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-5-1
/N@M-1-3-2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3336 2188 a 3336
2188 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-2
/N@M-1-3-3 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3336 2188 a 3336 2188 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 3336 2188 a 3336 2188
a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 30.92877 6.94444
2.86108 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add
exch } PutCoor PutBegin  end
 3336 2188 a 3207 2205 a Fw(a)3251 2217 y Fr(ij)3310
2205 y Fw(b)3346 2217 y Fr(ij)s(o)3432 2225 y Fj(t)3336
2188 y
 tx@Dict begin PutEnd  end
 3336 2188 a 3336 2188 a
 tx@Dict begin PutEnd  end
 3336 2188 a 3336 2188
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-3
/N@M-1-1-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3336 2188 a 3336 2188 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-3
/N@M-1-2-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3336 2188 a 3336 2188 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-3
/N@M-1-3-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3336
2188 a 3336 2188 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-3-3
/N@M-1-5-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 3336 2188 a 3336 2188 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-6-2
/N@M-1-6-1 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 3.0 -2
0 add DotLine  grestore  grestore end
 3336 2188
a 3336 2188 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 3336 2188 a 3336 2188 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 21.11522 7.5
2.5 NAngle 90 sub  Uput exch pop add a PtoC h1 add exch w1 add exch
} PutCoor PutBegin  end
 3336 2188 a 3248
2209 a Fw(\013)3301 2221 y Fr(i)3329 2209 y Ft(\()p Fw(t)p
Ft(\))3336 2188 y
 tx@Dict begin PutEnd  end
 3336 2188 a 3336 2188 a
 tx@Dict begin PutEnd  end
 3336 2188 a
3336 2188 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 1.5 2. Arrow  EndArrow  }
def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@M-1-6-3
/N@M-1-6-4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 3.0 -2
0 add DotLine  grestore  grestore end
 3336 2188 a 3336 2188 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 3336 2188 a 3336
2188 a
 tx@Dict begin { 5.0 tx@Dict /NCLW known { NCLW add } if 38.48088 7.5
2.86108 NAngle 90 add  Uput exch pop add a PtoC h1 add exch w1 add
exch } PutCoor PutBegin  end
 3336 2188 a 3176 2207 a Fw(\014)3223 2219 y Fr(j)3258
2207 y Ft(\()p Fw(t)h Ft(+)f(1\))3336 2188 y
 tx@Dict begin PutEnd  end
 3336 2188
a 3336 2188 a
 tx@Dict begin PutEnd  end
 3336 2188 a 1113 2426 a Fn(Figure)24 b(9.7)75
b Fm(The)25 b(pr)o(obability)f(of)g(traversing)g(an)i(ar)o(c.)41
b(Given)25 b(an)g(observation)g(sequence)1113 2524 y(and)f(a)f(model,)g
(we)g(can)h(work)f(out)g(the)h(pr)o(obability)e(that)j(the)e(Markov)g
(pr)o(oess)e(went)j(fr)o(om)1113 2623 y(state)19 b Ff(s)1321
2631 y Fc(i)1366 2623 y Fm(to)g Ff(s)1486 2631 y Fc(j)1537
2623 y Fm(at)g(time)g Ff(t)p Fm(.)1149 2853 y Fr(T)1113
2878 y Fo(X)1118 3054 y Fr(t)p Fs(=1)1247 2957 y Fw(p)1289
2969 y Fr(t)1318 2957 y Ft(\()p Fw(i;)14 b(j)5 b Ft(\))23
b(=)g Fy(expected)c(number)i(of)g(transitions)g(fr)o(om)g(state)f
Fw(i)h Fy(to)g Fw(j)k Fy(in)d Fw(O)1113 3210 y Fy(So)29
b(we)h(begin)f(with)h(some)g(model)g Fw(\026)f Fy(\(per)o(haps)f(pr)o
(eselected,)h(per)o(haps)f(just)i(cho-)1113 3318 y(sen)24
b(randomly\).)36 b(W)-8 b(e)24 b(then)h(r)o(un)g Fw(O)h
Fy(thr)o(ough)f(the)f(curr)o(ent)g(model)g(to)g(estimate)g(the)1113
3426 y(expectations)e(of)f(each)h(model)g(parameter)-6
b(.)27 b(W)-8 b(e)22 b(then)g(change)g(the)g(model)g(to)g(max-)1113
3534 y(imize)i(the)g(values)g(of)g(the)h(paths)f(that)g(ar)o(e)f(used)h
(a)g(lot)g(\(while)h(still)g(r)o(especting)e(the)1113
3642 y(stochastic)e(constraints\).)26 b(W)-8 b(e)20 b(then)h(r)o(epeat)
e(this)i(pr)o(ocess,)f(hoping)h(to)g(conver)o(ge)f(on)1113
3750 y(optimal)h(values)g(for)f(the)h(model)g(parameters)e
Fw(\026)p Fy(.)1196 3858 y(The)i(r)o(eestimation)f(formulas)h(ar)o(e)f
(as)g(follows:)1173 4030 y Ft(^)-46 b Fw(\031)1216 4042
y Fr(i)1327 4030 y Ft(=)82 b Fy(expected)20 b(fr)o(equency)g(in)h
(state)g Fw(i)f Fy(at)g(time)h Fw(t)i Ft(=)g(1)-2212
b Fy(\(9.16\))1327 4162 y Ft(=)82 b Fw(\015)1517 4174
y Fr(i)1545 4162 y Ft(\(1\))1143 4411 y(^)-44 b Fw(a)1185
4423 y Fr(ij)1327 4411 y Ft(=)1484 4354 y Fy(expected)20
b(number)h(of)g(transitions)g(fr)o(om)g(state)f Fw(i)g
Fy(to)i Fw(j)p 1484 4391 1734 4 v 1561 4467 a Fy(expected)d(number)i
(of)g(transitions)h(fr)o(om)e(state)h Fw(i)788 4411 y
Fy(\(9.17\))1327 4663 y Ft(=)1484 4543 y Fo(P)1572 4564
y Fr(T)1572 4630 y(t)p Fs(=1)1699 4606 y Fw(p)1741 4618
y Fr(t)1770 4606 y Ft(\()p Fw(i;)14 b(j)5 b Ft(\))p 1484
4644 455 4 v 1522 4673 a Fo(P)1609 4693 y Fr(T)1609 4760
y(t)p Fs(=1)1737 4735 y Fw(\015)1780 4747 y Fr(i)1807
4735 y Ft(\()p Fw(t)p Ft(\))p eop
%%Page: 311 19
311 18 bop 1030 345 a Fv(9.3)75 b(The)19 b(Thr)o(ee)f(Fundamental)g
(Questions)g(for)g(HMMs)1033 b FC(31)-5 b(1)1027 629
y Ft(^)1030 651 y Fw(b)1066 663 y Fr(ij)s(k)1244 651
y Ft(=)1401 594 y Fy(expected)20 b(number)h(of)f(transitions)i(fr)o(om)
f Fw(i)f Fy(to)h Fw(j)26 b Fy(when)21 b Fw(k)j Fy(is)d(observed)p
1401 631 2273 4 v 1767 707 a(expected)e(number)i(of)g(transitions)h(fr)
o(om)e Fw(i)g Fy(to)h Fw(j)705 651 y Fy(\(9.18\))1244
898 y Ft(=)1401 764 y Fo(P)1489 851 y Fl(f)p Fr(t)p Fs(:)p
Fr(o)1600 859 y Fj(t)1627 851 y Fs(=)p Fr(k)q(;)p Fs(1)p
Fl(\024)p Fr(t)p Fl(\024)p Fr(T)9 b Fl(g)1997 826 y Fw(p)2039
838 y Fr(t)2068 826 y Ft(\()p Fw(i;)14 b(j)5 b Ft(\))p
1401 879 836 4 v 1592 908 a Fo(P)1679 929 y Fr(T)1679
995 y(t)p Fs(=1)1806 970 y Fw(p)1848 982 y Fr(t)1877
970 y Ft(\()p Fw(i;)14 b(j)5 b Ft(\))1113 1149 y Fy(Thus,)27
b(fr)o(om)d Fw(\026)32 b Ft(=)f(\()p Fw(A;)14 b(B)t(;)g
Ft(\005\))p Fy(,)27 b(we)e(derive)31 b Ft(^)-49 b Fw(\026)32
b Ft(=)f(\()2727 1128 y(^)2705 1149 y Fw(A;)2824 1128
y Ft(^)2804 1149 y Fw(B)t(;)2919 1128 y Ft(^)2908 1149
y(\005)q(\))p Fy(.)39 b(Further)-6 b(,)26 b(as)f(pr)o(oved)1030
1257 y(by)c(Baum,)f(we)h(have)f(that:)1030 1431 y Fw(P)12
b Ft(\()p Fw(O)r Fq(j)7 b Ft(^)-49 b Fw(\026)q Ft(\))23
b Fq(\025)g Fw(P)12 b Ft(\()p Fw(O)r Fq(j)p Fw(\026)p
Ft(\))1030 1605 y Fy(This)23 b(is)g(a)g(general)f(pr)o(operty)g(of)g
(the)h(EM)f(algorithm)i(\(see)e(Section)g(14.2.2\).)29
b(Ther)o(e-)1030 1713 y(for)o(e,)22 b(iterating)h(thr)o(ough)g(a)g
(number)g(of)f(r)o(ounds)h(of)g(parameter)e(r)o(eestimation)i(will)1030
1821 y(impr)o(ove)g(our)g(model.)32 b(Normally)23 b(one)g(continues)h
(r)o(eestimating)f(the)g(parameters)1030 1929 y(until)c(r)o(esults)g
(ar)o(e)e(no)i(longer)g(impr)o(oving)g(signi\002cantly)-9
b(.)26 b(This)19 b(pr)o(ocess)g(of)f(parame-)1030 2037
y(ter)i(r)o(eestimation)h(does)g(not)h(guarantee)d(that)i(we)g(will)g
(\002nd)g(the)g(best)g(model,)g(how-)1030 2145 y(ever)-6
b(,)25 b(because)f(the)h(r)o(eestimation)f(pr)o(ocess)h(may)g(get)f
(stuck)i(in)f(a)f(local)h(maximum)1030 2253 y(\(or)e(even)h(possibly)h
(just)f(at)f(a)g(saddle)g(point\).)35 b(In)24 b(most)g(pr)o(oblems)g
(of)g(inter)o(est,)f(the)1030 2361 y(likelihood)i(function)g(is)f(a)f
(complex)h(nonlinear)g(surface)f(and)g(ther)o(e)g(ar)o(e)f(many)i(lo-)
1030 2469 y(cal)29 b(maxima.)53 b(Nevertheless,)32 b(Baum-W)-8
b(elch)29 b(r)o(eestimation)h(is)g(usually)g(ef)o(fective)1030
2577 y(for)21 b(HMMs.)1113 2685 y(T)-8 b(o)30 b(end)g(this)h(section,)h
(let)e(us)g(consider)g(r)o(eestimating)f(the)h(parameters)f(of)g(the)
1030 2793 y(crazy)18 b(soft)h(drink)g(machine)h(HMM)e(using)i(the)f
(Baum-W)-8 b(elch)19 b(algorithm.)26 b(If)18 b(we)i(let)1030
2900 y(the)25 b(initial)h(model)f(be)g(the)g(model)g(that)g(we)g(have)g
(been)f(using)i(so)g(far)-6 b(,)25 b(then)g(train-)1030
3008 y(ing)g(on)h(the)e(observation)h(sequence)g(\(lem,)g(ice_t,)g
(cola\))f(will)i(yield)e(the)h(following)1030 3116 y(values)20
b(for)h Fw(p)1457 3128 y Fr(t)1486 3116 y Ft(\()p Fw(i;)14
b(j)5 b Ft(\))p Fy(:)2358 3287 y(T)-5 b(ime)21 b(\(and)f
Fw(j)5 b Fy(\))1533 3395 y(1)690 b(2)717 b(3)1533 3503
y(CP)100 b(IP)p 1893 3536 4 108 v 125 w Fw(\015)1988
3515 y Fs(1)2215 3503 y Fy(CP)136 b(IP)p 2653 3536 V
167 w Fw(\015)2748 3515 y Fs(2)2974 3503 y Fy(CP)178
b(IP)p 3496 3536 V 208 w Fw(\015)3590 3515 y Fs(3)1196
3611 y Fw(i)99 b Fy(CP)h(0.3)k(0.7)p 1893 3644 V 98 w(1.0)165
b(0.28)98 b(0.02)p 2653 3644 V 98 w(0.3)164 b(0.616)98
b(0.264)p 3496 3644 V 97 w(0.88)1324 3719 y(IP)131 b(0.0)104
b(0.0)p 1893 3751 V 98 w(0.0)165 b(0.6)140 b(0.1)p 2653
3751 V 140 w(0.7)164 b(0.06)140 b(0.06)p 3496 3751 V
139 w(0.12)1030 3886 y(and)20 b(so)i(the)f(parameters)e(will)i(be)g(r)o
(eestimated)e(as)i(follows:)p eop
%%Page: 312 20
312 19 bop 75 345 a FC(312)3041 b Fv(9)75 b(Markov)20
b(Models)1654 610 y Fy(Original)647 b(Reestimated)1279
718 y Ft(\005)105 b Fy(CP)99 b(1.0)798 b(1.0)1446 826
y(IP)130 b(0.0)798 b(0.0)1654 1011 y(CP)139 b(IP)577
b(CP)219 b(IP)1279 1119 y Fw(A)105 b Fy(CP)99 b(0.7)143
b(0.3)550 b(0.5486)97 b(0.4514)1446 1227 y(IP)130 b(0.5)143
b(0.5)550 b(0.8049)97 b(0.1951)1654 1413 y(cola)j(ice_t)f(lem)249
b(cola)180 b(ice_t)158 b(lem)1279 1521 y Fw(B)104 b Fy(CP)99
b(0.6)143 b(0.1)164 b(0.3)281 b(0.4037)97 b(0.1376)g(0.4587)1446
1629 y(IP)130 b(0.1)143 b(0.7)164 b(0.2)281 b(0.1363)97
b(0.8537)g(0.0)1113 1769 y Fn(Exercise)20 b(9-4)1113
1864 y Fm(If)15 b(one)f(continued)h(r)o(unning)g(the)h(Baum-W)-7
b(elch)14 b(algorithm)g(on)h(this)g(HMM)f(and)h(this)f(training)1113
1951 y(sequence,)k(what)i(value)f(would)f(each)i(parameter)e(r)o(each)h
(in)g(the)g(limit?)k(Why?)1113 2066 y(The)18 b(r)o(eason)f(why)g(the)i
(Baum-W)-7 b(elch)17 b(algorithm)g(is)g(performing)f(so)h(strangely)f
(her)o(e)h(should)1113 2152 y(be)24 b(appar)o(ent:)33
b(the)24 b(training)g(sequence)f(is)g(far)g(too)h(short)f(to)h
(accurately)g(r)o(epr)o(esent)d(the)k(be-)1113 2239 y(havior)19
b(of)f(the)i(crazy)e(soft)h(drink)e(machine.)1113 2382
y Fn(Exercise)j(9-5)1113 2477 y Fm(Note)j(that)i(the)f(parameter)f
(that)i(is)e(zer)o(o)f(in)h Fe(\005)g Fm(stays)g(zer)o(o.)36
b(Is)23 b(that)i(a)f(chance)g(occurr)o(ence?)1113 2564
y(What)17 b(would)e(be)h(the)g(value)g(of)g(the)g(parameter)g(that)h
(becomes)e(zer)o(o)g(in)h Ff(B)k Fm(if)15 b(we)h(did)f(another)1113
2650 y(iteration)26 b(of)f(Baum-W)-7 b(elch)26 b(r)o(eestimation?)44
b(What)27 b(generalization)f(can)g(one)g(make)g(about)1113
2736 y(Baum-W)-7 b(elch)19 b(r)o(eestimation)f(of)g(zer)o(o)g
(parameters?)839 2934 y Fu(9.4)124 b(HMMs:)36 b(Implementation,)29
b(Properties,)f(and)i(V)-13 b(ariants)789 3149 y Fg(9.4.1)124
b(Implementation)1113 3315 y Fy(Beyond)22 b(the)h(theory)f(discussed)h
(above,)e(ther)o(e)h(ar)o(e)f(a)g(number)i(of)f(practical)f(issues)1113
3423 y(in)i(the)g(implementation)h(of)e(HMMs.)31 b(Car)o(e)21
b(has)i(to)g(be)f(taken)g(to)h(make)g(the)g(imple-)1113
3531 y(mentation)e(of)f(HMM)f(tagging)i(ef)o(\002cient)e(and)h
(accurate.)j(The)d(most)h(obvious)g(issue)1113 3639 y(is)j(that)f(the)h
(pr)o(obabilities)f(we)g(ar)o(e)f(calculating)h(consist)i(of)e(keeping)
h(on)g(multiply-)1113 3747 y(ing)19 b(together)f(very)g(small)g
(numbers.)25 b(Such)18 b(calculations)h(will)f(rapidly)g(under\003ow)
1113 3855 y(the)i(range)g(of)h(\003oating)g(point)g(numbers)g(on)f(a)g
(computer)h(\(even)e(if)h(you)h(stor)o(e)f(them)1113
3963 y(as)h(`double'!\).)1196 4071 y(The)33 b(V)-5 b(iterbi)34
b(algorithm)g(only)h(involves)f(multiplications)g(and)f(choosing)i(the)
1113 4179 y(lar)o(gest)17 b(element.)25 b(Thus)18 b(we)h(can)e(perform)
h(the)g(entir)o(e)f(V)-5 b(iterbi)19 b(algorithm)f(working)1113
4287 y(with)24 b(logarithms.)33 b(This)23 b(not)h(only)g(solves)f(the)h
(pr)o(oblem)e(with)i(\003oating)g(point)g(un-)1113 4395
y(der\003ow)-8 b(,)28 b(but)d(it)i(also)f(speeds)f(up)h(the)g
(computation,)h(since)g(additions)f(ar)o(e)e(much)1113
4503 y(quicker)h(than)g(multiplications.)38 b(In)25 b(practice,)g(a)f
(speedy)g(implementation)i(of)e(the)1113 4611 y(V)-5
b(iterbi)26 b(algorithm)h(is)f(particularly)f(important)h(because)f
(this)i(is)f(the)g(r)o(untime)g(al-)1113 4719 y(gorithm,)c(wher)o(eas)e
(training)h(can)f(usually)h(pr)o(oceed)f(slowly)i(of)o(\003ine.)p
eop
%%Page: 313 21
313 20 bop 1030 345 a Fv(9.4)75 b(HMMs:)22 b(Implementation,)c(Pr)o
(operties,)g(and)h(V)-6 b(ariants)905 b FC(313)1113 617
y Fy(However)-6 b(,)31 b(in)e(the)g(Forwar)o(d-Backwar)o(d)d(algorithm)
k(as)e(well,)j(something)g(still)1030 725 y(has)26 b(to)g(be)g(done)g
(to)g(pr)o(event)f(\003oating)h(point)h(under\003ow)-8
b(.)42 b(The)25 b(need)h(to)g(perform)1030 833 y(summations)19
b(makes)f(it)g(dif)o(\002cult)f(to)h(use)g(logs.)26 b(A)17
b(common)i(solution)h(is)e(to)g(employ)1030 941 y(auxiliary)f(scaling)i
(coef)o(\002cients,)f(whose)h(values)e(gr)o(ow)h(with)h(the)f(time)h
Fw(t)f Fy(so)g(that)g(the)1030 1049 y(pr)o(obabilities)25
b(multiplied)g(by)g(the)h(scaling)f(coef)o(\002cient)g(r)o(emain)f
(within)i(the)g(\003oat-)1030 1157 y(ing)20 b(point)h(range)e(of)h(the)
f(computer)-6 b(.)25 b(At)20 b(the)f(end)h(of)g(each)f(iteration,)g
(when)i(the)f(pa-)1030 1265 y(rameter)25 b(values)h(ar)o(e)f(r)o
(eestimated,)h(these)h(scaling)f(factors)g(cancel)g(out.)42
b(Detailed)1030 1373 y(discussion)21 b(of)e(this)h(and)f(other)g
(implementation)i(issues)e(can)g(be)g(found)h(in)f(\(Levin-)1030
1481 y(son)30 b(et)e(al.)g(1983\),)g(\(Rabiner)g(and)g(Juang)h(1993:)d
(365\226368\),)h(\(Cutting)i(et)f(al.)g(1991\),)1030
1589 y(and)e(\(Dermatas)g(and)h(Kokkinakis)h(1995\).)42
b(The)26 b(main)i(alternative)d(is)j(to)f(just)h(use)1030
1697 y(logs)20 b(anyway)-9 b(,)19 b(despite)g(the)h(fact)e(that)i(one)f
(needs)g(to)h(sum.)26 b(Ef)o(fectively)18 b(then)h(one)h(is)1030
1805 y(calculating)h(an)f(appr)o(opriate)f(scaling)i(factor)f(at)g(the)
h(time)g(of)g(each)f(addition:)705 1973 y(\(9.19\))122
b Fp(funct)p 1030 1986 199 4 v 20 w Fb(log_add)53 b Fq(\021)1113
2081 y Fp(if)p 1113 2094 60 4 v 21 w Ft(\()p Fw(y)21
b Fq(\000)d Fw(x)24 b(>)e Ft(log)14 b Fa(big)9 b Ft(\))1194
2189 y Fp(then)p 1194 2202 171 4 v 19 w Fw(y)1113 2297
y Fp(elsif)p 1113 2310 166 4 v 20 w Ft(\()p Fw(x)19 b
Fq(\000)f Fw(y)26 b(>)c Ft(log)14 b Fa(big)9 b Ft(\))1300
2405 y Fp(then)p 1300 2418 171 4 v 19 w Fw(x)1323 2513
y Fp(else)p 1323 2526 148 4 v 19 w Ft(min)q(\()p Fw(x;)14
b(y)s Ft(\))19 b(+)f(log\(exp\()p Fw(x)h Fq(\000)f Ft(min)q(\()p
Fw(x;)c(y)s Ft(\)\))19 b(+)f(exp\()p Fw(y)j Fq(\000)d
Ft(min)q(\()p Fw(x;)c(y)s Ft(\)\)\))1113 2621 y Fp(\002)p
1113 2634 51 4 v 1030 2729 a(.)1030 2898 y Fy(wher)o(e)25
b Fa(big)33 b Fy(is)26 b(a)f(suitable)g(lar)o(ge)f(constant)i(like)g
Ft(10)2670 2868 y Fs(30)2739 2898 y Fy(.)39 b(For)26
b(an)f(algorithm)h(like)g(this)1030 3006 y(wher)o(e)i(one)h(is)g(doing)
h(a)e(lar)o(ge)g(number)g(of)h(numerical)g(computations,)i(one)e(also)
1030 3114 y(has)19 b(to)f(be)h(car)o(eful)e(about)h(r)o(ound-of)o(f)f
(err)o(ors,)h(but)g(such)h(concerns)g(ar)o(e)e(well)i(outside)1030
3222 y(the)i(scope)g(of)f(this)i(chapter)-6 b(.)706 3473
y Fg(9.4.2)124 b(V)-11 b(ariants)1030 3639 y Fy(Ther)o(e)30
b(ar)o(e)f(many)i(variant)f(forms)g(of)h(HMMs)f(that)h(can)f(be)g(made)
g(without)i(fun-)1030 3747 y(damentally)e(changing)h(them,)i(just)e(as)
f(with)h(\002nite)g(state)f(machines.)55 b(One)30 b(is)h(to)1030
3855 y(allow)20 b(some)f(ar)o(c)f(transitions)j(to)e(occur)g(without)i
(emitting)f(any)f(symbol,)h(so-called)1030 3963 y FC(epsilon)e
Fy(or)g FC(null)g(transitions)h Fy(\(Bahl)e(et)h(al.)f(1983\).)22
b(Another)c(commonly)i(used)d(variant)-3508 b Fx(E)t(P)t(S)t(I)t(L)t(O)
t(N)17 b(T)t(R)t(A)t(N)t(S)t(I)t(T)t(I)s(O)t(N)s(S)328
4043 y(N)t(U)t(L)t(L)i(T)t(R)t(A)t(N)t(S)t(I)t(T)t(I)s(O)t(N)s(S)1030
4071 y Fy(is)25 b(to)f(make)g(the)h(output)f(distribution)i(dependent)d
(just)i(on)g(a)f(single)h(state,)f(rather)1030 4179 y(than)d(on)h(the)f
(two)h(states)e(at)h(both)g(ends)g(of)g(an)g(ar)o(c)f(as)g(you)i
(traverse)e(an)h(ar)o(c,)e(as)i(was)1030 4287 y(ef)o(fectively)e(the)i
(case)e(with)j(the)e(soft)h(drink)g(machine.)k(Under)20
b(this)h(model)g(one)g(can)1030 4395 y(view)30 b(the)h(output)g(as)f(a)
g(function)h(of)f(the)h(state)f(chosen,)j(rather)d(than)g(of)g(the)h
(ar)o(c)1030 4503 y(traversed.)41 b(The)27 b(model)g(wher)o(e)f
(outputs)h(ar)o(e)e(a)h(function)h(of)g(the)g(state)f(has)g(actu-)1030
4611 y(ally)e(been)h(used)f(mor)o(e)g(often)g(in)h(Statistical)f
Fm(NLP)p Fy(,)h(because)e(it)i(corr)o(esponds)f(natu-)1030
4719 y(rally)h(to)h(a)f(part)g(of)h(speech)f(tagging)h(model,)h(as)e
(we)h(see)f(in)h(Chapter)f(10.)39 b(Indeed,)p eop
%%Page: 314 22
314 21 bop 75 345 a FC(314)3041 b Fv(9)75 b(Markov)20
b(Models)1113 617 y Fy(some)26 b(people)e(will)i(pr)o(obably)e
(consider)h(us)g(perverse)f(for)g(having)i(pr)o(esented)d(the)1113
725 y(ar)o(c-emission)i(model)h(in)g(this)g(chapter)-6
b(.)39 b(But)25 b(we)h(chose)f(the)h(ar)o(c-emission)f(model)1113
833 y(because)d(it)i(is)f(trivial)g(to)h(simulate)f(the)g
(state-emission)h(model)g(using)g(it,)f(wher)o(eas)1113
941 y(doing)29 b(the)g(r)o(everse)f(is)h(much)g(mor)o(e)f(dif)o
(\002cult.)49 b(As)29 b(suggested)g(above,)g(one)h(does)1113
1049 y(not)d(need)f(to)h(think)h(of)e(the)h(simpler)g(model)g(as)f
(having)h(the)g(outputs)g(coming)g(of)o(f)1113 1157 y(the)c(states,)g
(rather)g(one)g(can)g(view)g(the)g(outputs)h(as)f(still)h(coming)g(of)o
(f)e(the)h(ar)o(cs,)g(but)1113 1265 y(that)d(the)g(output)h
(distributions)g(happen)f(to)g(be)g(the)g(same)g(for)g(all)f(ar)o(cs)g
(that)h(start)g(at)1113 1373 y(a)g(certain)h(node)f(\(or)h(that)g(end)f
(at)h(a)f(certain)g(node,)h(if)f(one)h(pr)o(efers\).)1196
1481 y(This)29 b(suggests)f(a)g(general)f(strategy)-9
b(.)47 b(A)27 b(pr)o(oblem)h(with)h(HMM)e(models)h(is)g(the)1113
1589 y(lar)o(ge)20 b(number)g(of)h(parameters)e(that)i(need)f(to)h(be)f
(estimated)g(to)h(de\002ne)g(the)g(model,)1113 1697 y(and)34
b(it)g(may)g(not)g(be)g(possible)h(to)f(estimate)g(them)g(all)g
(accurately)f(if)g(not)i(much)1113 1805 y(data)28 b(is)i(available.)50
b(A)28 b(straightforwar)o(d)h(strategy)g(for)g(dealing)g(with)h(this)g
(situa-)1113 1912 y(tion)g(is)e(to)h(intr)o(oduce)g(assumptions)g(that)
g(pr)o(obability)f(distributions)i(on)f(certain)1113
2020 y(ar)o(cs)e(or)h(at)g(certain)f(states)h(ar)o(e)f(the)h(same)g(as)
f(each)h(other)-6 b(.)47 b(This)29 b(is)f(r)o(eferr)o(ed)d(to)k(as)1113
2128 y FC(parameter)24 b(tying)p Fy(,)g(and)g(one)h(thus)h(gets)e
FC(tied)g(states)h Fy(or)g FC(tied)f(ar)o(cs)p Fy(.)36
b(Another)25 b(possibil-)-3400 b Fx(P)o(A)t(R)t(A)t(M)t(E)t(T)t(E)t(R)
16 b(T)t(Y)t(I)t(N)t(G)630 2208 y(T)t(I)t(E)t(D)i(S)t(TAT)t(E)t(S)681
2288 y(T)t(I)t(E)t(D)g(A)t(R)t(C)t(S)1113 2236 y Fy(ity)28
b(for)f(r)o(educing)f(the)i(number)f(of)h(parameters)e(of)h(the)g
(model)h(is)g(to)f(decide)g(that)1113 2344 y(certain)22
b(things)i(ar)o(e)d(impossible)j(\(i.e.,)e(they)h(have)f(pr)o
(obability)g(zer)o(o\),)g(and)g(thus)h(to)1113 2452 y(intr)o(oduce)16
b(str)o(uctural)g(zer)o(oes)f(into)i(the)g(model.)24
b(Making)16 b(some)h(things)h(impossible)1113 2560 y(adds)h(a)g(lot)h
(of)f(str)o(uctur)o(e)g(to)h(the)f(model,)h(and)f(so)h(can)f(gr)o
(eatly)g(impr)o(ove)g(the)g(perfor)o(-)1113 2668 y(mance)j(of)f(the)h
(parameter)e(r)o(eestimation)i(algorithm,)h(but)e(is)i(only)f(appr)o
(opriate)e(in)1113 2776 y(some)h(cir)o(cumstances.)789
3028 y Fg(9.4.3)124 b(Multiple)25 b(input)g(observations)1113
3195 y Fy(W)-8 b(e)24 b(have)f(pr)o(esented)g(the)h(algorithms)h(for)f
(a)f(single)i(input)f(sequence.)35 b(How)25 b(does)1113
3303 y(one)k(train)f(over)g(multiple)h(inputs?)49 b(For)29
b(the)f(kind)h(of)f(HMM)g(we)g(have)g(been)g(as-)1113
3411 y(suming,)i(wher)o(e)d(every)g(state)g(is)h(connected)g(to)g
(every)f(other)h(state)f(\(with)h(a)f(non-)1113 3518
y(zer)o(o)i(transition)i(pr)o(obability)f(\226)g(what)g(is)h(sometimes)
g(called)e(an)h FC(er)o(godic)g(model)f Fy(\226)-3341
b Fx(E)t(R)t(G)t(O)t(D)t(I)t(C)16 b(M)t(O)t(D)t(E)t(L)1113
3626 y Fy(then)24 b(ther)o(e)f(is)h(a)f(simple)h(solution:)33
b(we)24 b(simply)g(concatenate)f(all)h(the)f(observation)1113
3734 y(sequences)18 b(and)g(train)f(on)i(them)f(as)g(one)g(long)h
(input.)25 b(The)18 b(only)g(r)o(eal)f(disadvantage)1113
3842 y(to)h(this)g(is)g(that)f(we)h(do)f(not)h(get)g(suf)o(\002cient)f
(data)f(to)i(be)f(able)g(to)h(r)o(eestimate)e(the)i(initial)1113
3950 y(pr)o(obabilities)g Fw(\031)1637 3962 y Fr(i)1683
3950 y Fy(successfully)-9 b(.)25 b(However)-6 b(,)18
b(often)h(people)f(use)g(HMM)g(models)h(that)1113 4058
y(ar)o(e)i(not)j(fully)f(connected.)32 b(For)23 b(example,)f(people)h
(sometimes)h(use)e(a)h FC(feed)g(forward)-3530 b Fx(F)t(E)t(E)t(D)18
b(F)t(O)t(R)r(W)o(A)t(R)t(D)f(M)t(O)t(D)t(E)t(L)1113
4166 y FC(model)25 b Fy(wher)o(e)g(ther)o(e)g(is)h(an)f(or)o(der)o(ed)e
(set)j(of)g(states)f(and)g(one)h(can)f(only)i(pr)o(oceed)d(at)1113
4274 y(each)h(time)h(instant)g(to)g(the)f(same)h(or)f(a)g(higher)h
(number)o(ed)f(state.)39 b(If)25 b(the)h(HMM)e(is)1113
4382 y(not)31 b(fully)g(connected)f(\226)g(it)h(contains)g(str)o
(uctural)g(zer)o(oes)e(\226)h(or)g(if)h(we)f(do)h(want)f(to)1113
4490 y(be)d(able)g(to)h(r)o(eestimate)f(the)h(initial)g(pr)o
(obabilities,)g(then)g(we)g(need)f(to)h(extend)f(the)1113
4598 y(r)o(eeestimation)e(formulae)f(to)h(work)h(with)f(a)f(sequence)i
(of)e(inputs.)39 b(Pr)o(ovided)24 b(that)1113 4706 y(we)16
b(assume)g(that)g(the)h(inputs)f(ar)o(e)f(independent,)i(this)f(is)h
(straightforwar)o(d.)23 b(W)-8 b(e)16 b(will)p eop
%%Page: 315 23
315 22 bop 1030 345 a Fv(9.5)75 b(Further)18 b(Reading)1924
b FC(315)1030 617 y Fy(not)26 b(pr)o(esent)e(the)i(formulas)f(her)o(e,)
g(but)g(we)g(do)g(pr)o(esent)g(the)g(analogous)h(formulas)1030
725 y(for)21 b(the)f(PCFG)i(case)e(in)h(Section)g(1)-5
b(1.3.4.)706 978 y Fg(9.4.4)124 b(Initialization)25 b(of)h(parameter)d
(values)1030 1144 y Fy(The)29 b(r)o(eestimation)f(pr)o(ocess)g(only)i
(guarantees)d(that)i(we)f(will)i(\002nd)e(a)h(local)f(maxi-)1030
1252 y(mum.)e(If)20 b(we)g(would)g(rather)f(\002nd)i(the)f(global)g
(maximum,)h(one)f(appr)o(oach)f(is)h(to)h(try)1030 1360
y(to)g(start)g(the)g(HMM)f(in)h(a)f(r)o(egion)h(of)g(the)g(parameter)e
(space)h(that)h(is)g(near)f(the)h(global)1030 1468 y(maximum.)33
b(One)24 b(can)e(do)i(this)f(by)h(trying)f(to)h(r)o(oughly)f(estimate)g
(good)h(values)f(for)1030 1576 y(the)18 b(parameters,)e(rather)h(than)g
(setting)h(them)g(randomly)-9 b(.)25 b(In)17 b(practice,)g(good)h
(initial)1030 1684 y(estimates)k(for)g(the)h(output)f(parameters)f
Fw(B)30 b Ft(=)c Fq(f)p Fw(b)2630 1696 y Fr(ij)s(k)2724
1684 y Fq(g)c Fy(turn)g(out)h(to)g(be)e(particularly)1030
1792 y(important,)k(while)f(random)f(initial)h(estimates)g(for)f(the)h
(parameters)e Fw(A)i Fy(and)f Ft(\005)h Fy(ar)o(e)1030
1900 y(normally)e(satisfactory)-9 b(.)756 2198 y Fu(9.5)124
b(Further)29 b(Reading)1030 2395 y Fy(The)21 b(V)-5 b(iterbi)21
b(algorithm)h(was)f(\002rst)h(described)e(in)h(\(V)-5
b(iterbi)21 b(1967\).)j(The)d(mathemat-)1030 2503 y(ical)26
b(theory)h(behind)g(Hidden)f(Markov)f(Models)i(was)f(developed)f(by)i
(Baum)f(and)1030 2611 y(his)21 b(colleagues)f(in)h(the)g(late)f
(sixties)g(and)g(early)g(seventies)h(\(Baum)e(et)h(al.)g(1970\),)e(and)
1030 2719 y(advocated)j(for)h(use)g(in)h(speech)f(r)o(ecognition)h(in)g
(lectur)o(es)e(by)i(Jack)e(Fer)o(guson)i(fr)o(om)1030
2827 y(the)h(Institute)g(for)f(Defense)h(Analyses.)34
b(It)24 b(was)f(applied)g(to)h(speech)f(pr)o(ocessing)h(in)1030
2935 y(the)h(1970s)d(by)j(Baker)e(at)h Fm(CMU)h Fy(\(Baker)e(1975\),)g
(and)h(by)g(Jelinek)h(and)f(colleagues)g(at)1030 3043
y Fm(IBM)g Fy(\(Jelinek)h(et)f(al.)h(1975;)d(Jelinek)j(1976\),)e(and)i
(then)g(later)f(found)h(its)g(way)g(at)f Fm(IBM)1030
3151 y Fy(and)d(elsewher)o(e)f(into)i(use)f(for)g(other)h(kinds)f(of)g
(language)g(modeling,)h(such)f(as)g(part)1030 3259 y(of)g(speech)f
(tagging.)1113 3367 y(Ther)o(e)f(ar)o(e)f(many)i(good)h(r)o(efer)o
(ences)c(on)k Fm(HMM)e Fy(algorithms)i(\(within)f(the)g(context)1030
3474 y(of)31 b(speech)f(r)o(ecognition\),)k(including)d(\(Levinson)h
(et)e(al.)g(1983;)f(Knill)j(and)e(Y)-8 b(oung)1030 3582
y(1997;)30 b(Jelinek)j(1997\).)58 b(Particularly)32 b(well-known)i(ar)o
(e)d(\(Rabiner)h(1989;)f(Rabiner)1030 3690 y(and)e(Juang)h(1993\).)50
b(They)30 b(consider)g(continuous)h Fm(HMM)p Fy(s)e(\(wher)o(e)g(the)h
(output)g(is)1030 3798 y(r)o(eal)16 b(valued\))h(as)g(well)h(as)f(the)g
(discr)o(ete)g Fm(HMM)p Fy(s)g(we)g(have)g(consider)o(ed)g(her)o(e,)g
(contain)1030 3906 y(information)25 b(on)f(applications)g(of)g
Fm(HMM)p Fy(s)g(to)g(speech)g(r)o(ecognition)g(and)g(may)f(also)1030
4014 y(be)g(consulted)g(for)g(fairly)g(compr)o(ehensive)g(r)o(efer)o
(ences)e(on)j(the)f(development)g(and)1030 4122 y(the)16
b(use)g(of)g Fm(HMM)p Fy(s.)24 b(Our)16 b(pr)o(esentation)f(of)h
Fm(HMM)p Fy(s)g(is)g(however)g(most)h(closely)f(based)1030
4230 y(on)21 b(that)g(of)g(\(Paul)f(1990\).)1113 4338
y(W)-5 b(ithin)33 b(the)e(chapter)-6 b(,)33 b(we)f(have)f(assumed)g(a)g
(\002xed)g(HMM)f(ar)o(chitectur)o(e,)i(and)1030 4446
y(have)16 b(just)h(gone)h(about)e(learning)h(optimal)g(parameters)e
(for)h(the)h(HMM)f(within)i(that)1030 4554 y(ar)o(chitectur)o(e.)41
b(However)-6 b(,)28 b(what)f(size)f(and)g(shape)h(of)f(HMM)g(should)i
(one)f(choose)1030 4662 y(for)e(a)f(new)h(pr)o(oblem?)38
b(Sometimes)25 b(the)g(natur)o(e)f(of)h(the)g(pr)o(oblem)g(determines)f
(the)p eop
%%Page: 316 24
316 23 bop 75 345 a FC(316)3041 b Fv(9)75 b(Markov)20
b(Models)1113 617 y Fy(ar)o(chitectur)o(e,)h(as)h(in)h(the)g
(applications)f(of)h(HMMs)e(to)i(tagging)g(that)g(we)f(discuss)h(in)
1113 725 y(the)16 b(next)g(chapter)-6 b(.)23 b(For)16
b(cir)o(cumstances)g(when)h(this)f(is)h(not)f(the)h(case,)f(ther)o(e)f
(has)h(been)1113 833 y(some)22 b(work)h(on)f(learning)g(an)g(appr)o
(opriate)e(HMM)h(str)o(uctur)o(e)g(on)i(the)f(principle)g(of)1113
941 y(trying)32 b(to)f(\002nd)g(the)g(most)h(compact)e(HMM)g(that)h
(can)f(adequately)g(describe)g(the)1113 1049 y(data)20
b(\(Stolcke)g(and)g(Omohundr)o(o)i(1993\).)1196 1157
y Fm(HMM)p Fy(s)e(ar)o(e)e(widely)i(used)f(to)i(analyze)d(gene)i
(sequences)g(in)h(bioinformatics.)k(See)1113 1265 y(for)g(instance)g
(\(Baldi)f(and)h(Br)o(unak)g(1998;)e(Durbin)j(et)f(al.)g(1998\).)36
b(As)25 b(linguists,)j(we)1113 1373 y(\002nd)33 b(it)h(a)e(little)i
(har)o(d)e(to)h(take)g(seriously)h(pr)o(oblems)f(over)g(an)f(alphabet)h
(of)g(four)1113 1481 y(symbols,)k(but)c(bioinformatics)h(is)f(a)f
(well-funded)g(domain)h(to)h(which)f(you)h(can)1113 1589
y(apply)20 b(your)i(new)f(skills)g(in)h(Hidden)e(Markov)g(Modeling!)p
eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
